{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/favicon.png","path":"favicon.png","modified":0,"renderable":0},{"_id":"source/robots.txt","path":"robots.txt","modified":0,"renderable":0},{"_id":"source/favicon.ico","path":"favicon.ico","modified":0,"renderable":0},{"_id":"themes/next/source/404.html","path":"404.html","modified":0,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"fc4922e7144011353c7b5911bfde757a12268607","modified":1552188247085},{"_id":"source/favicon.png","hash":"17472f2b9999c3f22d923f6368a8b5a766f03504","modified":1552146369102},{"_id":"source/robots.txt","hash":"c6656c6f82acc4c21062c7035625497282c393b6","modified":1552146369102},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1552146369110},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1552146369110},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1552146369110},{"_id":"themes/next/.gitignore","hash":"32ea93f21d8693d5d8fa4eef1c51a21ad0670047","modified":1552146369110},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1552146369110},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1552146369110},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1552146369110},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1552146369110},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1552146369110},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1552146369110},{"_id":"themes/next/README.cn.md","hash":"6d9177e7dad87e6129760e4b559bd3f7a15429d7","modified":1552146369110},{"_id":"themes/next/README.md","hash":"1a79f01601517b777cfb238916635d4df7368473","modified":1552146369110},{"_id":"themes/next/_config.yml","hash":"44f3a65acb7aefc822eb0e21e11222dc806bde98","modified":1552146369110},{"_id":"themes/next/bower.json","hash":"6d6ae7531cf3fedc97c58cdad664f5793eb3cc88","modified":1552146369110},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1552146369110},{"_id":"themes/next/package.json","hash":"93a74dbc0fe3a1208a02e9cec3c15c2375339cc1","modified":1552146369118},{"_id":"source/favicon.ico","hash":"1b667f5f5c3bf8d496a16d5c642e5bbf6392d886","modified":1552146369102},{"_id":"themes/next/package-lock.json","hash":"12a3557021ecf4570f4ae6f6ce603177a2d1044e","modified":1552146369118},{"_id":"source/_posts/.buffer_and_cache.md.swp","hash":"a602f8ae51618212c0fd3c12e628f495f344fcb4","modified":1552146369098},{"_id":"source/_posts/ARP协议.md","hash":"4af2b1f8ac831019f3060b18a5fa9b811e7edc54","modified":1552146369098},{"_id":"source/_posts/DNS解析.md","hash":"f1a1aa6ad6553c57874b6b6ef84c63d7237c1754","modified":1552146369098},{"_id":"source/_posts/ICMP协议.md","hash":"bc1b61d81d90de76513fa5db2b8ccd48681c99bb","modified":1552146369098},{"_id":"source/_posts/IP协议.md","hash":"ce7d2a3016dd3add98d5e1bdae43bdd8036c8da2","modified":1552146369098},{"_id":"source/_posts/Ingress介绍.md","hash":"86581ea678ca4b866c09ecd3ead501c4773c7c9b","modified":1552146369098},{"_id":"source/_posts/OSI-ISO七层.md","hash":"3f820458e197b0ff7c81c918821b9c080b27334d","modified":1552146369098},{"_id":"source/_posts/OSI七层协议详细讲解.md","hash":"c9c16ffa5223c5fa8ac67e50af2581584c50c941","modified":1552146369098},{"_id":"source/_posts/TTL.md","hash":"07579750e094f47d8a929ec7dc3eaec131b541e5","modified":1552146369098},{"_id":"source/_posts/cache-buffer.md","hash":"b3038c4c431592ff092c39ba6c37e48581c45114","modified":1552146369098},{"_id":"source/_posts/cow.md","hash":"df93ccceb27442fa454f5cb262dacfec149be30e","modified":1552146369098},{"_id":"source/_posts/hello-world.md","hash":"557267065e7b8a0c18689b3ca944178763b1ecc3","modified":1552146369098},{"_id":"source/_posts/tcp交互数据和块数据处理.md","hash":"a7cf9a1acb6a8443d0116c4fd65e62f56d7e53e1","modified":1552146369098},{"_id":"source/_posts/tcp连接的建立与终止.md","hash":"4d803298f650325ac123864d16115d716256985a","modified":1552146369098},{"_id":"source/_posts/test.md","hash":"baf615fec1b77774dde10aaf87dd3454d44dcf1b","modified":1552146369098},{"_id":"source/_posts/traefik在kubernetes中的应用.md","hash":"0dba093becd824f8ff944d38b65ae6f5fddeceef","modified":1552146369102},{"_id":"source/_posts/使用ansible挂盘.md","hash":"80c011793e2be953f480e59b0ba175997cae5d9c","modified":1552146369102},{"_id":"source/_posts/使用let-s-encript申请通配符证书.md","hash":"41fae6f0c7e7bdf7c3280b65e5d1a62694aba3b7","modified":1552146369102},{"_id":"source/about/index.md","hash":"248260255c87c1618a2af916d13b8f658f4dc333","modified":1552146369102},{"_id":"source/categories/index.md","hash":"a0f3fe3d4028687374610fe1202ddce18c589e43","modified":1552146369102},{"_id":"source/tags/index.md","hash":"62655c7ba8803bbba21c34544a5366b4eea1c15e","modified":1552146369102},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1552146369110},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"352093a1b210c72136687fd2eee649244cee402c","modified":1552146369110},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"902f627155a65099e0a37842ff396a58d0dc306f","modified":1552146369110},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1552146369110},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1552146369110},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1552146369110},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1552146369114},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1552146369114},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1552146369114},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1552146369114},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1552146369114},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1552146369114},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1552146369114},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1552146369114},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1552146369114},{"_id":"themes/next/languages/zh-Hans.yml","hash":"16ef56d0dea94638de7d200984c90ae56f26b4fe","modified":1552146369114},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1552146369114},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1552146369114},{"_id":"themes/next/layout/_layout.swig","hash":"26bd9be87576eaab53aaf178b5ddd84d8bb4cabf","modified":1552146369114},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1552146369118},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1552146369118},{"_id":"themes/next/layout/index.swig","hash":"7229e88f077be11d6ae5978db0254edad942744b","modified":1552146369118},{"_id":"themes/next/layout/index.swig.bak","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1552146369118},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1552146369118},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1552146369118},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1552146369118},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1552146369118},{"_id":"themes/next/scripts/merge-configs.js","hash":"cb617ddf692f56e6b6129564d52e302f50b28243","modified":1552146369118},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1552146369118},{"_id":"themes/next/source/404.html","hash":"a5991bb3598c5d934bd97e3bc4ed14b71ebf1e62","modified":1552146369118},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1552146369153},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1552146369153},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1552146369153},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1552146369126},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1552146369114},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1552146369114},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1552146369114},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1552146369114},{"_id":"themes/next/layout/_macro/post.swig","hash":"7a64914a0a3c893c1aaa8b5349b85898f95af314","modified":1552146369114},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1552146369114},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"9efc455894921a66bbc074055d3b39c8a34a48a4","modified":1552146369114},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1552146369114},{"_id":"themes/next/layout/_partials/comments.swig","hash":"044bc872d7b59655e46f6fb1cf14f767e31a4dfa","modified":1552146369114},{"_id":"themes/next/layout/_partials/footer.swig","hash":"6fa3b7be27e2df9a6811d00a5ebe8686f4823344","modified":1552146369114},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1552146369114},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1552146369114},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1552146369114},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1552146369114},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1552146369114},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1552146369114},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1552146369114},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1552146369114},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1552146369118},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1552146369118},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1552146369118},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1552146369118},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1552146369118},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1552146369118},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1552146369118},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1552146369118},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1552146369118},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1552146369118},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1552146369118},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1552146369118},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1552146369118},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1552146369118},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1552146369118},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1552146369118},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1552146369126},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1552146369126},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1552146369126},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1552146369126},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1552146369126},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1552146369126},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1552146369126},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1552146369126},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1552146369126},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1552146369126},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1552146369130},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1552146369130},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1552146369130},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1552146369130},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1552146369130},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1552146369130},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1552146369130},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1552146369130},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1552146369130},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1552146369114},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1552146369114},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1552146369126},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1552146369126},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1552146369126},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1552146369126},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1552146369126},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"6d5937fba52b6ffd5bef22633c978e81f9b6295d","modified":1552146369114},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1552146369114},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1552146369114},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1552146369114},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1552146369114},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1552146369114},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1552146369114},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1552146369114},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1552146369114},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1552146369114},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1552146369114},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1552146369114},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1552146369114},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1552146369114},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1552146369114},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"b66f4a2e3134ed844394808821ef25718c6262e1","modified":1552146369114},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1552146369114},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1552146369114},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1552146369114},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1552146369114},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1552146369114},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1552146369114},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1552146369114},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1552146369114},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1552146369118},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1552146369118},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1552146369118},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1552146369118},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1552146369118},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1552146369118},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1552146369118},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"04941c42e4e4339ae6786dfb969d348c72979872","modified":1552146369118},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1552146369118},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1552146369118},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1552146369118},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1552146369118},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1552146369118},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1552146369126},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1552146369126},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1552146369126},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1552146369126},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1552146369126},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1552146369126},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1552146369126},{"_id":"themes/next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1552146369126},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1552146369130},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1552146369130},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1552146369130},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1552146369130},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1552146369130},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1552146369130},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1552146369130},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1552146369130},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1552146369130},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1552146369130},{"_id":"themes/next/source/js/src/utils.js","hash":"dbdc3d1300eec7da9632608ebc0e5b697779dad7","modified":1552146369130},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1552146369130},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1552146369134},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1552146369134},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1552146369138},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1552146369138},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1552146369138},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1552146369138},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1552146369138},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1552146369138},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1552146369138},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1552146369138},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1552146369138},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1552146369142},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1552146369142},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1552146369142},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1552146369142},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1552146369142},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1552146369142},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1552146369146},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1552146369146},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1552146369146},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1552146369146},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1552146369146},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1552146369146},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1552146369146},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1552146369146},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1552146369146},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1552146369146},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1552146369146},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1552146369146},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1552146369146},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1552146369146},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1552146369146},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1552146369146},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1552146369146},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1552146369146},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1552146369146},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1552146369146},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1552146369146},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1552146369149},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1552146369149},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1552146369153},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1552146369153},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1552146369153},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1552146369142},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1552146369118},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1552146369118},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1552146369118},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1552146369118},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1552146369118},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1552146369118},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1552146369118},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1552146369122},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1552146369126},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1552146369126},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1552146369126},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1552146369126},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1552146369126},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1552146369126},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1552146369126},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1552146369126},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1552146369126},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1552146369126},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1552146369126},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1552146369126},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1552146369126},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1552146369126},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1552146369126},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1552146369126},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1552146369126},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"82bbaa6322764779a1ac2e2c8390ce901c7972e2","modified":1552146369126},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1552146369126},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1552146369126},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1552146369126},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1552146369126},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1552146369126},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1552146369126},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"bcf52192942c0afc410c74a0fb458e7936ddc3d5","modified":1552146369126},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1552146369126},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1552146369130},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1552146369130},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1552146369130},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1552146369130},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1552146369134},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1552146369134},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1552146369134},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1552146369134},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1552146369134},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1552146369138},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1552146369138},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1552146369138},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1552146369138},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1552146369138},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1552146369138},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1552146369138},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1552146369138},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1552146369138},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1552146369149},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1552146369149},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1552146369130},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1552146369142},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1552146369142},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1552146369153},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1552146369118},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1552146369118},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1552146369118},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1552146369118},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1552146369118},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1552146369118},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"77c92a449ce84d558d26d052681f2e0dd77c70c9","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"b8969e1654eec89a0fd10d88b337fee9cb03cd44","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1552146369122},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1552146369122},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1552146369126},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1552146369126},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1552146369126},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1552146369130},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1552146369130},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1552146369130},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1552146369130},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1552146369130},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1552146369138},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1552146369138},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1552146369138},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1552146369138},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1552146369138},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1552146369138},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1552146369138},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1552146369142},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1552146369142},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1552146369134},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1552146369149},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1552146369142},{"_id":"public/baidusitemap.xml","hash":"513d8f881f227f451330eb07ba60671c2a832ca1","modified":1552146914445},{"_id":"public/search.xml","hash":"715169e6c04fef9d5fc66773581e81536ac20e63","modified":1552146914472},{"_id":"public/about/index.html","hash":"51cc1c84d09cc50e67a41e2f7e4e64ac60814814","modified":1552146914485},{"_id":"public/categories/index.html","hash":"457984c4e265dc213d180da36898f26588f0fb18","modified":1552146914486},{"_id":"public/tags/index.html","hash":"0671b445fc3e0a1ecd0ff71ae5a4d34deaf623a6","modified":1552146914486},{"_id":"public/archives/7ef83387.html","hash":"e70e7b16f8857c4b5e7401e05f071fa5230f9032","modified":1552146914486},{"_id":"public/archives/bfd9c176.html","hash":"550ef3c84b4782b18354dda665300e23f87c3971","modified":1552146914486},{"_id":"public/archives/208297ce.html","hash":"4618ff04e191c48436ccd8c672240513141ee08f","modified":1552146914486},{"_id":"public/archives/d8cfbc13.html","hash":"207eb7ca08e3359a266a3ac5031508f8089d5df1","modified":1552146914486},{"_id":"public/archives/684012cf.html","hash":"3f1b1c1eca44fc62f684d6d98f044f2e3639a7c5","modified":1552146914487},{"_id":"public/archives/e0301188.html","hash":"6ee1821c80100c7547d104d79cb39fe579183d00","modified":1552146914487},{"_id":"public/archives/8b4a8eab.html","hash":"ae1f03be51924a66faa494153ff82a85cc503a66","modified":1552146914487},{"_id":"public/archives/7a3dfa9.html","hash":"659a1089b051eb88a4a341ee1941ff59e545beb0","modified":1552146914487},{"_id":"public/archives/2f104938.html","hash":"fd2c9567883def78e24c6abf1dc68c9727443e8a","modified":1552146914487},{"_id":"public/archives/6cfb29f7.html","hash":"b41e495ce1ec58535fe224eb75f4b6d37fa1752c","modified":1552146914487},{"_id":"public/archives/9b389b8e.html","hash":"bd7e365c8d17fdcbaee96cd10378a105126c73f7","modified":1552146914488},{"_id":"public/archives/3549ca95.html","hash":"9c852ac77b42bb16594b4b478daf254441e2de0e","modified":1552146914488},{"_id":"public/archives/b3d20160.html","hash":"9e0f0f5066b1f26886e43747c188f6902fcc63fe","modified":1552146914488},{"_id":"public/archives/9e319110.html","hash":"f632c84f53dede4416ca8e2cb61760a448df97c4","modified":1552146914488},{"_id":"public/archives/7942b68e.html","hash":"28493b74b0430b48a4c2fcc70d23126dbfd547d8","modified":1552146914488},{"_id":"public/archives/undefined.html","hash":"990bc0df428298325314cebbd4857feb5d31aae6","modified":1552146914488},{"_id":"public/archives/4a17b156.html","hash":"af5d7cb336b3ac1c19261d2737e12380f3542b17","modified":1552146914488},{"_id":"public/archives/index.html","hash":"c77bb18b4077491d7821d689868afcb65c4d3a17","modified":1552146914489},{"_id":"public/archives/page/2/index.html","hash":"885ca81253dcd1f038c5ab9f00c54fea72e74124","modified":1552146914489},{"_id":"public/archives/2016/index.html","hash":"45010304795615c14722cd0938262a7b7b1ef8fa","modified":1552146914489},{"_id":"public/archives/2016/10/index.html","hash":"c4ee74e5b46f0bb5ed353329935a31458e7a54ba","modified":1552146914489},{"_id":"public/archives/2016/11/index.html","hash":"7557277c20b81c4c42078126ffaccb6ad14d2285","modified":1552146914489},{"_id":"public/archives/2016/12/index.html","hash":"79e10caf95168a6efe6b38cd5348e4f6c93a9577","modified":1552146914489},{"_id":"public/archives/2017/index.html","hash":"1d862f63d5ae00f7fa8ba38c2a3730634488c212","modified":1552146914489},{"_id":"public/archives/2017/03/index.html","hash":"beb6dcfd025fb9a036a16060329afc4457a8f77c","modified":1552146914490},{"_id":"public/archives/2017/10/index.html","hash":"3bcb75eee29b0f719f29a25a609e12f177159421","modified":1552146914490},{"_id":"public/archives/2017/11/index.html","hash":"9f837d67437096b78e8d98b6e93338c31fcd8538","modified":1552146914490},{"_id":"public/archives/2018/index.html","hash":"1ade0fede719f120759f81e7e8e2079cbbef023c","modified":1552146914490},{"_id":"public/archives/2018/09/index.html","hash":"b6b07ff1e534b0b6fee9f005a8d4f6ae626e1c52","modified":1552146914490},{"_id":"public/archives/2018/11/index.html","hash":"7da3a2358dca4baf86b82dd5a504417a3d34d6fd","modified":1552146914490},{"_id":"public/categories/网络/index.html","hash":"feae7d3b7b2176440ea37de59010888f0bddf8da","modified":1552146914491},{"_id":"public/categories/网络/page/2/index.html","hash":"e0c5988ce6f9230af8b1dcb6abb36cccc50c97fb","modified":1552146914491},{"_id":"public/categories/kubernetes/index.html","hash":"410c1ae673d2d0715274da00cc8faf66076d4f2c","modified":1552146914491},{"_id":"public/categories/运维/index.html","hash":"397250c9b20f033b40ce2356f4c5d6e89fd8ae2b","modified":1552146914491},{"_id":"public/categories/test/index.html","hash":"9cbe7ef833fc3b5de27dcab712e8cc76fb237e32","modified":1552146914491},{"_id":"public/index.html","hash":"e1a688693eef52d5530076927bdd93630863b1d1","modified":1552146914491},{"_id":"public/page/2/index.html","hash":"1438c68f073a3a9bd7013b56468b1cffa8038301","modified":1552146914491},{"_id":"public/tags/TCP-IP/index.html","hash":"65f87d0fdf17be1a3dfb2e500fa5ce9b7bc874e4","modified":1552146914492},{"_id":"public/tags/kubernetes/index.html","hash":"fe05f61771179c32adebc059212d3766241080dd","modified":1552146914492},{"_id":"public/tags/ingress/index.html","hash":"e67063647bc4857c068d5c44431430af2b758e41","modified":1552146914492},{"_id":"public/tags/操作系统/index.html","hash":"40edb4fca4a1bba497144245866dc000bdf9387e","modified":1552146914492},{"_id":"public/tags/vpn/index.html","hash":"d7dcd7512d50dc7ce180ae16fe4e533871b9b418","modified":1552146914492},{"_id":"public/tags/网络/index.html","hash":"c46381df685739d545ad32962f160ec895eb4301","modified":1552146914492},{"_id":"public/tags/test/index.html","hash":"585213a0a647abdf96a830dea6380e91721af267","modified":1552146914493},{"_id":"public/tags/traefik/index.html","hash":"73c843a0528ef24993768b8ccdd07d27885bdf2f","modified":1552146914493},{"_id":"public/tags/https/index.html","hash":"843e69eb19765a5f27023627f111928fd4c807e7","modified":1552146914493},{"_id":"public/CNAME","hash":"fc4922e7144011353c7b5911bfde757a12268607","modified":1552188262214},{"_id":"public/favicon.png","hash":"17472f2b9999c3f22d923f6368a8b5a766f03504","modified":1552146914522},{"_id":"public/robots.txt","hash":"c6656c6f82acc4c21062c7035625497282c393b6","modified":1552146914522},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1552146914522},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1552146914522},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1552146914522},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1552146914523},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1552146914523},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1552146914523},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1552146914523},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1552146914523},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1552146914523},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1552146914523},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1552146914524},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1552146914524},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1552146914524},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1552146914524},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1552146914524},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1552146914524},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1552146914524},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1552146914524},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1552146914524},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1552146914525},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1552146914525},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1552146914525},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1552146914525},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1552146914525},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1552146914526},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1552146914526},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1552146914526},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1552146914526},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1552146914526},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1552146914526},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1552146914526},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1552146914527},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1552146914527},{"_id":"public/favicon.ico","hash":"1b667f5f5c3bf8d496a16d5c642e5bbf6392d886","modified":1552146915811},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1552146915813},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1552146915843},{"_id":"public/404.html","hash":"a5991bb3598c5d934bd97e3bc4ed14b71ebf1e62","modified":1552146915861},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1552146915862},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1552146915862},{"_id":"public/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1552146915862},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1552146915862},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1552146915863},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1552146915863},{"_id":"public/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1552146915863},{"_id":"public/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1552146915863},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1552146915864},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1552146915864},{"_id":"public/js/src/utils.js","hash":"dbdc3d1300eec7da9632608ebc0e5b697779dad7","modified":1552146915864},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1552146915864},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1552146915864},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1552146915865},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1552146915865},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1552146915865},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1552146915868},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1552146915869},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1552146915869},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1552146915869},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1552146915869},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1552146915870},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1552146915870},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1552146915870},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1552146915870},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1552146915871},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1552146915871},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1552146915871},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1552146915871},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1552146915871},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1552146915872},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1552146915872},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1552146915872},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1552146915872},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1552146915873},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1552146915873},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1552146915873},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1552146915873},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1552146915873},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1552146915874},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1552146915874},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1552146915874},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1552146915874},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1552146915874},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1552146915875},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1552146915875},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1552146915875},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1552146915875},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1552146915876},{"_id":"public/css/main.css","hash":"0b65354036a49c5a7104537ae5433fa6281ccd8e","modified":1552146915876},{"_id":"public/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1552146915876},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1552146915876},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1552146915876},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1552146915877},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1552146915877},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1552146915877},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1552146915878},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1552146915878},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1552146915878},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1552146915878},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1552146915879},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1552146915879},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1552146915879},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1552146915879},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1552146915880},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1552146915880},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1552146915880},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1552146915880},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1552146915880},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1552146915881},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1552146915881},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1552146915882},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1552146915882},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1552146915909}],"Category":[{"name":"网络","_id":"cjt1o6yfu00049symgywtgimw"},{"name":"kubernetes","_id":"cjt1o6ygn000p9sym4wa32wp5"},{"name":"运维","_id":"cjt1o6ygv000x9symef26dv6z"},{"name":"test","_id":"cjt1o6yh6001b9symwctf8gyw"}],"Data":[],"Page":[{"title":"关于自己","date":"2018-04-06T09:29:55.000Z","_content":"\n### 学习经历\n\n* 2004——2010年 四川省雅安市雨城区严桥镇 严桥三九中心校\n* 2010——2013年 四川省雅安市雨城区 雅安市第二中学\n* 2013——2017年 四川省乐山市市中区 乐山师范学院-计算机科学与技术-师范专业\n\n### 工作经历\n\n* 2016年11月——至今 成都龙渊网络科技有限公司 运维工程师\n\n### 工作内容\n\n* 各云平台维护；ali / hw / aws / ks / qcloud / ucloud / qingcloud / ws \n* 基础研发部门的环境支持、应用部署、CICD实施和维护；gitlab / gitlab-ci / drone / jenkins / kubernetes / traefik / konga\n* 大数据环境支持和维护；spark / hadoop / es / kibana\n* 运维监控系统完善；zabbix / prometheus / send_msg\n* 游戏业务运维；kubernetes / prometheus / jenkins / gitlab-ci\n* 运维账务管理系统RMS完善；python / mysql / rancher / kubernetes\n\n\n### 近况\n  新业务基本都使用了kubernetes技术，包括公司基础服部署务也在往k8s转。最近在研究k8s监控及k8s高级用法\n\n\n### 职业规划\n\n* 2016——2018 运维\n* 2019——...  运维开发，打算先学python，后面在看golang\n\n\n### 思考\n* 运维这个职业在很多人眼里平时一般都没什么事情，其实不然。运维所需的知识面非常广，网络、操作系统、软硬件、工具、各云平台实现的底层技术、各云平台产品了解……；拿业务运维来说，运维应该了解所负责业务的开发技术、开发环境、从客户端到服务端的各个过程、请求等等，在此基础上为业务提供一个稳定的环境，规范开发交付、更新规范，提供一种高效的方法，如CICD实施；做到比开发更了解业务，熟悉业务，当出现问题时能够快速定位，为业务架构提供优化建议。基础设施运维工作更加繁琐，维护机房、公司软硬件等等，业务之下的事情基本都是运维包了。再往后走应该在公司层面思考问题，如何给公司带来更好更稳定的环境，体现自己更高的价值。\n* 开发的价值在项目层面体现，运维的价值在项目层面和公司层面体现！\n* 都说优秀的运维少之又少，希望以后能成为一个优秀的运维！\n(以上均属个人看法，如有不妥之处，还请各位及时指出)\n","source":"about/index.md","raw":"---\ntitle: 关于自己\ndate: 2018-04-06 17:29:55\n---\n\n### 学习经历\n\n* 2004——2010年 四川省雅安市雨城区严桥镇 严桥三九中心校\n* 2010——2013年 四川省雅安市雨城区 雅安市第二中学\n* 2013——2017年 四川省乐山市市中区 乐山师范学院-计算机科学与技术-师范专业\n\n### 工作经历\n\n* 2016年11月——至今 成都龙渊网络科技有限公司 运维工程师\n\n### 工作内容\n\n* 各云平台维护；ali / hw / aws / ks / qcloud / ucloud / qingcloud / ws \n* 基础研发部门的环境支持、应用部署、CICD实施和维护；gitlab / gitlab-ci / drone / jenkins / kubernetes / traefik / konga\n* 大数据环境支持和维护；spark / hadoop / es / kibana\n* 运维监控系统完善；zabbix / prometheus / send_msg\n* 游戏业务运维；kubernetes / prometheus / jenkins / gitlab-ci\n* 运维账务管理系统RMS完善；python / mysql / rancher / kubernetes\n\n\n### 近况\n  新业务基本都使用了kubernetes技术，包括公司基础服部署务也在往k8s转。最近在研究k8s监控及k8s高级用法\n\n\n### 职业规划\n\n* 2016——2018 运维\n* 2019——...  运维开发，打算先学python，后面在看golang\n\n\n### 思考\n* 运维这个职业在很多人眼里平时一般都没什么事情，其实不然。运维所需的知识面非常广，网络、操作系统、软硬件、工具、各云平台实现的底层技术、各云平台产品了解……；拿业务运维来说，运维应该了解所负责业务的开发技术、开发环境、从客户端到服务端的各个过程、请求等等，在此基础上为业务提供一个稳定的环境，规范开发交付、更新规范，提供一种高效的方法，如CICD实施；做到比开发更了解业务，熟悉业务，当出现问题时能够快速定位，为业务架构提供优化建议。基础设施运维工作更加繁琐，维护机房、公司软硬件等等，业务之下的事情基本都是运维包了。再往后走应该在公司层面思考问题，如何给公司带来更好更稳定的环境，体现自己更高的价值。\n* 开发的价值在项目层面体现，运维的价值在项目层面和公司层面体现！\n* 都说优秀的运维少之又少，希望以后能成为一个优秀的运维！\n(以上均属个人看法，如有不妥之处，还请各位及时指出)\n","updated":"2019-03-09T15:46:09.102Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjt1o6yfk00019symxodmpgwz","content":"<h3 id=\"学习经历\"><a href=\"#学习经历\" class=\"headerlink\" title=\"学习经历\"></a>学习经历</h3><ul>\n<li>2004——2010年 四川省雅安市雨城区严桥镇 严桥三九中心校</li>\n<li>2010——2013年 四川省雅安市雨城区 雅安市第二中学</li>\n<li>2013——2017年 四川省乐山市市中区 乐山师范学院-计算机科学与技术-师范专业</li>\n</ul>\n<h3 id=\"工作经历\"><a href=\"#工作经历\" class=\"headerlink\" title=\"工作经历\"></a>工作经历</h3><ul>\n<li>2016年11月——至今 成都龙渊网络科技有限公司 运维工程师</li>\n</ul>\n<h3 id=\"工作内容\"><a href=\"#工作内容\" class=\"headerlink\" title=\"工作内容\"></a>工作内容</h3><ul>\n<li>各云平台维护；ali / hw / aws / ks / qcloud / ucloud / qingcloud / ws </li>\n<li>基础研发部门的环境支持、应用部署、CICD实施和维护；gitlab / gitlab-ci / drone / jenkins / kubernetes / traefik / konga</li>\n<li>大数据环境支持和维护；spark / hadoop / es / kibana</li>\n<li>运维监控系统完善；zabbix / prometheus / send_msg</li>\n<li>游戏业务运维；kubernetes / prometheus / jenkins / gitlab-ci</li>\n<li>运维账务管理系统RMS完善；python / mysql / rancher / kubernetes</li>\n</ul>\n<h3 id=\"近况\"><a href=\"#近况\" class=\"headerlink\" title=\"近况\"></a>近况</h3><p>  新业务基本都使用了kubernetes技术，包括公司基础服部署务也在往k8s转。最近在研究k8s监控及k8s高级用法</p>\n<h3 id=\"职业规划\"><a href=\"#职业规划\" class=\"headerlink\" title=\"职业规划\"></a>职业规划</h3><ul>\n<li>2016——2018 运维</li>\n<li>2019——…  运维开发，打算先学python，后面在看golang</li>\n</ul>\n<h3 id=\"思考\"><a href=\"#思考\" class=\"headerlink\" title=\"思考\"></a>思考</h3><ul>\n<li>运维这个职业在很多人眼里平时一般都没什么事情，其实不然。运维所需的知识面非常广，网络、操作系统、软硬件、工具、各云平台实现的底层技术、各云平台产品了解……；拿业务运维来说，运维应该了解所负责业务的开发技术、开发环境、从客户端到服务端的各个过程、请求等等，在此基础上为业务提供一个稳定的环境，规范开发交付、更新规范，提供一种高效的方法，如CICD实施；做到比开发更了解业务，熟悉业务，当出现问题时能够快速定位，为业务架构提供优化建议。基础设施运维工作更加繁琐，维护机房、公司软硬件等等，业务之下的事情基本都是运维包了。再往后走应该在公司层面思考问题，如何给公司带来更好更稳定的环境，体现自己更高的价值。</li>\n<li>开发的价值在项目层面体现，运维的价值在项目层面和公司层面体现！</li>\n<li>都说优秀的运维少之又少，希望以后能成为一个优秀的运维！<br>(以上均属个人看法，如有不妥之处，还请各位及时指出)</li>\n</ul>\n","excerpt":"","more":"<h3 id=\"学习经历\"><a href=\"#学习经历\" class=\"headerlink\" title=\"学习经历\"></a>学习经历</h3><ul>\n<li>2004——2010年 四川省雅安市雨城区严桥镇 严桥三九中心校</li>\n<li>2010——2013年 四川省雅安市雨城区 雅安市第二中学</li>\n<li>2013——2017年 四川省乐山市市中区 乐山师范学院-计算机科学与技术-师范专业</li>\n</ul>\n<h3 id=\"工作经历\"><a href=\"#工作经历\" class=\"headerlink\" title=\"工作经历\"></a>工作经历</h3><ul>\n<li>2016年11月——至今 成都龙渊网络科技有限公司 运维工程师</li>\n</ul>\n<h3 id=\"工作内容\"><a href=\"#工作内容\" class=\"headerlink\" title=\"工作内容\"></a>工作内容</h3><ul>\n<li>各云平台维护；ali / hw / aws / ks / qcloud / ucloud / qingcloud / ws </li>\n<li>基础研发部门的环境支持、应用部署、CICD实施和维护；gitlab / gitlab-ci / drone / jenkins / kubernetes / traefik / konga</li>\n<li>大数据环境支持和维护；spark / hadoop / es / kibana</li>\n<li>运维监控系统完善；zabbix / prometheus / send_msg</li>\n<li>游戏业务运维；kubernetes / prometheus / jenkins / gitlab-ci</li>\n<li>运维账务管理系统RMS完善；python / mysql / rancher / kubernetes</li>\n</ul>\n<h3 id=\"近况\"><a href=\"#近况\" class=\"headerlink\" title=\"近况\"></a>近况</h3><p>  新业务基本都使用了kubernetes技术，包括公司基础服部署务也在往k8s转。最近在研究k8s监控及k8s高级用法</p>\n<h3 id=\"职业规划\"><a href=\"#职业规划\" class=\"headerlink\" title=\"职业规划\"></a>职业规划</h3><ul>\n<li>2016——2018 运维</li>\n<li>2019——…  运维开发，打算先学python，后面在看golang</li>\n</ul>\n<h3 id=\"思考\"><a href=\"#思考\" class=\"headerlink\" title=\"思考\"></a>思考</h3><ul>\n<li>运维这个职业在很多人眼里平时一般都没什么事情，其实不然。运维所需的知识面非常广，网络、操作系统、软硬件、工具、各云平台实现的底层技术、各云平台产品了解……；拿业务运维来说，运维应该了解所负责业务的开发技术、开发环境、从客户端到服务端的各个过程、请求等等，在此基础上为业务提供一个稳定的环境，规范开发交付、更新规范，提供一种高效的方法，如CICD实施；做到比开发更了解业务，熟悉业务，当出现问题时能够快速定位，为业务架构提供优化建议。基础设施运维工作更加繁琐，维护机房、公司软硬件等等，业务之下的事情基本都是运维包了。再往后走应该在公司层面思考问题，如何给公司带来更好更稳定的环境，体现自己更高的价值。</li>\n<li>开发的价值在项目层面体现，运维的价值在项目层面和公司层面体现！</li>\n<li>都说优秀的运维少之又少，希望以后能成为一个优秀的运维！<br>(以上均属个人看法，如有不妥之处，还请各位及时指出)</li>\n</ul>\n"},{"title":"categories","date":"2018-11-09T09:58:15.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2018-11-09 17:58:15\ntype: \"categories\"\n---\n","updated":"2019-03-09T15:46:09.102Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjt1o6yfq00039symwc9es5k7","content":"","excerpt":"","more":""},{"title":"tags","date":"2018-11-08T08:04:20.000Z","type":"tags","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2018-11-08 16:04:20\ntype: \"tags\"\nlayout: \"tags\"\n---\n","updated":"2019-03-09T15:46:09.102Z","path":"tags/index.html","comments":1,"_id":"cjt1o6yg000079sym9a46oduz","content":"","excerpt":"","more":""}],"Post":[{"title":"arp协议","abbrlink":"b3d20160","date":"2016-11-21T15:48:12.000Z","_content":"\n#### 什么是ARP协议？\n\t协议都是电脑之间先约定好的一些规则而已！\n\n#### ARP协议是干嘛的？\n\t将IP地址转换为MAC地址！\n\n#### 为什么需要ARP协议？\n<!-- more -->\n\t首先，我们的清楚，电脑之间进行的通信是依靠MAC地址来通信的。就说你必须知道对方主机的MAC地址（MAC地址才是唯一的），然后你才能给它发送信息，然后它的网卡收到信息过后才能进行处理。但是我们一般都不记MAC地址，退而求其次，我们记得是IP地址；再退一步我们就是记得 域名 了，比如说 www.google.com。\n\t域名---->IP地址---->MAC地址，域名到IP地址我们是通过DNS来完成的（不明白DNS的可以参考\n[xianyuLuo的这篇文章](http://laoxianyu.cn/2016/11/20/DNS%E8%A7%A3%E6%9E%90/ \"xianyuLuo_DNS解析\")。而从IP地址到MAC地址，我们用的就是arp。\n\n__ARP协议的工作过程__\n\n当主机要发送一个IP包的时候，会首先查一下自己的ARP高速缓存（就是一个IP-MAC地址对应表缓存），如果查询的IP－MAC值对不存在，那么主机就向网络发送一个ARP协议广播包，这个广播包里面就有待查询的IP地址，而直接收到这份广播的包的所有主机都会查询自己的IP地址，如果收到广播包的某一个主机发现自己符合条件，那么就准备好一个包含自己的MAC地址的ARP包传送给发送ARP广播的主机，而广播主机拿到ARP包后会更新自己的ARP缓存（就是存放IP-MAC对应表的地方）。发送广播的主机就会用新的ARP缓存数据准备好数据链路层的的数据包发送工作。\n\n__arp缓存表例子__\n\nwindows下执行\"arp -a\"命令：\n![arp-a_windows](http://dl-blog.laoxianyu.cn/arp-a_windows.png)\n\nlinux下执行\"arp -a\"命令：\n![arp-a_linux](http://dl-blog.laoxianyu.cn/arp-a_linux.png)\n\n\n<font color=#ff1201>技术交流可加QQ群：**774332965**<br></font>\n\n<font color=#ff1201>微信订阅号同步：**IT运维那点儿事**</font>\n\n![weixin](http://dl-blog.laoxianyu.cn/weixindy.jpg)\n","source":"_posts/ARP协议.md","raw":"---\ntitle: arp协议\ntags: TCP/IP\nabbrlink: b3d20160\ndate: 2016-11-21 23:48:12\ncategories: [网络]\n---\n\n#### 什么是ARP协议？\n\t协议都是电脑之间先约定好的一些规则而已！\n\n#### ARP协议是干嘛的？\n\t将IP地址转换为MAC地址！\n\n#### 为什么需要ARP协议？\n<!-- more -->\n\t首先，我们的清楚，电脑之间进行的通信是依靠MAC地址来通信的。就说你必须知道对方主机的MAC地址（MAC地址才是唯一的），然后你才能给它发送信息，然后它的网卡收到信息过后才能进行处理。但是我们一般都不记MAC地址，退而求其次，我们记得是IP地址；再退一步我们就是记得 域名 了，比如说 www.google.com。\n\t域名---->IP地址---->MAC地址，域名到IP地址我们是通过DNS来完成的（不明白DNS的可以参考\n[xianyuLuo的这篇文章](http://laoxianyu.cn/2016/11/20/DNS%E8%A7%A3%E6%9E%90/ \"xianyuLuo_DNS解析\")。而从IP地址到MAC地址，我们用的就是arp。\n\n__ARP协议的工作过程__\n\n当主机要发送一个IP包的时候，会首先查一下自己的ARP高速缓存（就是一个IP-MAC地址对应表缓存），如果查询的IP－MAC值对不存在，那么主机就向网络发送一个ARP协议广播包，这个广播包里面就有待查询的IP地址，而直接收到这份广播的包的所有主机都会查询自己的IP地址，如果收到广播包的某一个主机发现自己符合条件，那么就准备好一个包含自己的MAC地址的ARP包传送给发送ARP广播的主机，而广播主机拿到ARP包后会更新自己的ARP缓存（就是存放IP-MAC对应表的地方）。发送广播的主机就会用新的ARP缓存数据准备好数据链路层的的数据包发送工作。\n\n__arp缓存表例子__\n\nwindows下执行\"arp -a\"命令：\n![arp-a_windows](http://dl-blog.laoxianyu.cn/arp-a_windows.png)\n\nlinux下执行\"arp -a\"命令：\n![arp-a_linux](http://dl-blog.laoxianyu.cn/arp-a_linux.png)\n\n\n<font color=#ff1201>技术交流可加QQ群：**774332965**<br></font>\n\n<font color=#ff1201>微信订阅号同步：**IT运维那点儿事**</font>\n\n![weixin](http://dl-blog.laoxianyu.cn/weixindy.jpg)\n","slug":"ARP协议","published":1,"updated":"2019-03-09T15:46:09.098Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt1o6yfd00009symd9xo8s2p","content":"<h4 id=\"什么是ARP协议？\"><a href=\"#什么是ARP协议？\" class=\"headerlink\" title=\"什么是ARP协议？\"></a>什么是ARP协议？</h4><pre><code>协议都是电脑之间先约定好的一些规则而已！\n</code></pre><h4 id=\"ARP协议是干嘛的？\"><a href=\"#ARP协议是干嘛的？\" class=\"headerlink\" title=\"ARP协议是干嘛的？\"></a>ARP协议是干嘛的？</h4><pre><code>将IP地址转换为MAC地址！\n</code></pre><h4 id=\"为什么需要ARP协议？\"><a href=\"#为什么需要ARP协议？\" class=\"headerlink\" title=\"为什么需要ARP协议？\"></a>为什么需要ARP协议？</h4><a id=\"more\"></a>\n<pre><code>首先，我们的清楚，电脑之间进行的通信是依靠MAC地址来通信的。就说你必须知道对方主机的MAC地址（MAC地址才是唯一的），然后你才能给它发送信息，然后它的网卡收到信息过后才能进行处理。但是我们一般都不记MAC地址，退而求其次，我们记得是IP地址；再退一步我们就是记得 域名 了，比如说 www.google.com。\n域名----&gt;IP地址----&gt;MAC地址，域名到IP地址我们是通过DNS来完成的（不明白DNS的可以参考\n</code></pre><p><a href=\"http://laoxianyu.cn/2016/11/20/DNS%E8%A7%A3%E6%9E%90/\" title=\"xianyuLuo_DNS解析\">xianyuLuo的这篇文章</a>。而从IP地址到MAC地址，我们用的就是arp。</p>\n<p><strong>ARP协议的工作过程</strong></p>\n<p>当主机要发送一个IP包的时候，会首先查一下自己的ARP高速缓存（就是一个IP-MAC地址对应表缓存），如果查询的IP－MAC值对不存在，那么主机就向网络发送一个ARP协议广播包，这个广播包里面就有待查询的IP地址，而直接收到这份广播的包的所有主机都会查询自己的IP地址，如果收到广播包的某一个主机发现自己符合条件，那么就准备好一个包含自己的MAC地址的ARP包传送给发送ARP广播的主机，而广播主机拿到ARP包后会更新自己的ARP缓存（就是存放IP-MAC对应表的地方）。发送广播的主机就会用新的ARP缓存数据准备好数据链路层的的数据包发送工作。</p>\n<p><strong>arp缓存表例子</strong></p>\n<p>windows下执行”arp -a”命令：<br><img src=\"http://dl-blog.laoxianyu.cn/arp-a_windows.png\" alt=\"arp-a_windows\"></p>\n<p>linux下执行”arp -a”命令：<br><img src=\"http://dl-blog.laoxianyu.cn/arp-a_linux.png\" alt=\"arp-a_linux\"></p>\n<font color=\"#ff1201\">技术交流可加QQ群：<strong>774332965</strong><br></font>\n\n<font color=\"#ff1201\">微信订阅号同步：<strong>IT运维那点儿事</strong></font>\n\n<p><img src=\"http://dl-blog.laoxianyu.cn/weixindy.jpg\" alt=\"weixin\"></p>\n","excerpt":"<h4 id=\"什么是ARP协议？\"><a href=\"#什么是ARP协议？\" class=\"headerlink\" title=\"什么是ARP协议？\"></a>什么是ARP协议？</h4><pre><code>协议都是电脑之间先约定好的一些规则而已！\n</code></pre><h4 id=\"ARP协议是干嘛的？\"><a href=\"#ARP协议是干嘛的？\" class=\"headerlink\" title=\"ARP协议是干嘛的？\"></a>ARP协议是干嘛的？</h4><pre><code>将IP地址转换为MAC地址！\n</code></pre><h4 id=\"为什么需要ARP协议？\"><a href=\"#为什么需要ARP协议？\" class=\"headerlink\" title=\"为什么需要ARP协议？\"></a>为什么需要ARP协议？</h4>","more":"<pre><code>首先，我们的清楚，电脑之间进行的通信是依靠MAC地址来通信的。就说你必须知道对方主机的MAC地址（MAC地址才是唯一的），然后你才能给它发送信息，然后它的网卡收到信息过后才能进行处理。但是我们一般都不记MAC地址，退而求其次，我们记得是IP地址；再退一步我们就是记得 域名 了，比如说 www.google.com。\n域名----&gt;IP地址----&gt;MAC地址，域名到IP地址我们是通过DNS来完成的（不明白DNS的可以参考\n</code></pre><p><a href=\"http://laoxianyu.cn/2016/11/20/DNS%E8%A7%A3%E6%9E%90/\" title=\"xianyuLuo_DNS解析\">xianyuLuo的这篇文章</a>。而从IP地址到MAC地址，我们用的就是arp。</p>\n<p><strong>ARP协议的工作过程</strong></p>\n<p>当主机要发送一个IP包的时候，会首先查一下自己的ARP高速缓存（就是一个IP-MAC地址对应表缓存），如果查询的IP－MAC值对不存在，那么主机就向网络发送一个ARP协议广播包，这个广播包里面就有待查询的IP地址，而直接收到这份广播的包的所有主机都会查询自己的IP地址，如果收到广播包的某一个主机发现自己符合条件，那么就准备好一个包含自己的MAC地址的ARP包传送给发送ARP广播的主机，而广播主机拿到ARP包后会更新自己的ARP缓存（就是存放IP-MAC对应表的地方）。发送广播的主机就会用新的ARP缓存数据准备好数据链路层的的数据包发送工作。</p>\n<p><strong>arp缓存表例子</strong></p>\n<p>windows下执行”arp -a”命令：<br><img src=\"http://dl-blog.laoxianyu.cn/arp-a_windows.png\" alt=\"arp-a_windows\"></p>\n<p>linux下执行”arp -a”命令：<br><img src=\"http://dl-blog.laoxianyu.cn/arp-a_linux.png\" alt=\"arp-a_linux\"></p>\n<font color=#ff1201>技术交流可加QQ群：<strong>774332965</strong><br></font>\n\n<font color=#ff1201>微信订阅号同步：<strong>IT运维那点儿事</strong></font>\n\n<p><img src=\"http://dl-blog.laoxianyu.cn/weixindy.jpg\" alt=\"weixin\"></p>"},{"title":"DNS解析","abbrlink":"9e319110","date":"2016-11-20T15:16:07.000Z","_content":"\n#### 什么是DNS解析？\n\t就是把域名转换为IP地址的一个过程\n\n#### 为什么需要DNS解析？\n\t以前都是靠 /etc/hosts 文件来解析域名的，每解析一个域名就需要在文件里面添加一条对应记录。后来由于互联网的迅速发展，域名已经数不胜数了。如果这个时候还是一条一条记录的写在/etc/hosts 文件里面的话，那这个文件估计就超级大了。于是就有了DNS解析，由DNS服务器来解析域名。\n<!-- more -->\n\n![dns解析](http://dl-blog.laoxianyu.cn/dns%E8%A7%A3%E6%9E%90.png)\n\n__DNS域名解析过程有两种方法：递归解析、迭代解析__\n\n#### 递归解析：\n\t递归解析就相当于你把这件事情交给第三个人去做，不管他怎么做，反正最后把域名对应的IP地址交给你就是了。而这第三个人就是DNS服务器，这也是我们生活中用的比较多的一种方法。一般用的就是电信的 114.114.114.114\n\n#### 迭代解析：\n\t迭代解析就是你自己去找。\n\t全球的根域名服务器一共有13台，你自己去一级一级的找下去，最终找到自己想解析的域名。\n\n---\n#### 例子：\n解析 www.google.com.（正规来说这后面是还有一个点的，只是一般都省略了）这个域名；我的DNS服务器是电信的114.114.114.114\n解析步骤：\n    1、我自己的电脑去访问www.google.com的时候，就问114 “你帮我找找www.google.com服务器的IP地址”\n    2、然后114就去找到13台根服务器中的一台根服务器，问“你知道www.google.com的IP地址嘛?”，然后根服务器就说：“不知道，但是我知道.com的服务器IP，要不你去问问它？”\n    3、接着114就找到.com的服务器问：“你知道www.google.com的IP嘛？”，然后.com服务器就说：“我不知道，但是我知道google.com的服务器IP，要不你去问问它？”\n    4、再接着114就找到google.com的服务器问：“你知道www.google.com的IP嘛？”，然后google.com服务器就回答道“知道呀”，然后把IP地址告诉114\n    5、历经千辛万苦终于找到了，114就会暂时把这个地址缓存一段时间，当有人再来问它的时候，它就不用那么辛苦去找了，直接从缓存里面调出来就是了\n    6、最后114就把www.google.com的IP地址告诉我了，然后我就去向那个IP地址请求资源去了\n\n#### 总结：\n\t我去问114，让它给我www.google.com的服务器地址，这样的方法就叫做递归，或者也可以叫做转发吧！\n\t114去找根服务器，一台台挨着问的这个过程就叫做迭代！\n\n\n\n<font color=#ff1201>技术交流可加QQ群：**774332965**<br></font>\n\n<font color=#ff1201>微信订阅号同步：**IT运维那点儿事**</font>\n\n![weixin](http://dl-blog.laoxianyu.cn/weixindy.jpg)\n\n","source":"_posts/DNS解析.md","raw":"---\ntitle: DNS解析\ntags: TCP/IP\nabbrlink: 9e319110\ndate: 2016-11-20 23:16:07\ncategories: [网络]\n---\n\n#### 什么是DNS解析？\n\t就是把域名转换为IP地址的一个过程\n\n#### 为什么需要DNS解析？\n\t以前都是靠 /etc/hosts 文件来解析域名的，每解析一个域名就需要在文件里面添加一条对应记录。后来由于互联网的迅速发展，域名已经数不胜数了。如果这个时候还是一条一条记录的写在/etc/hosts 文件里面的话，那这个文件估计就超级大了。于是就有了DNS解析，由DNS服务器来解析域名。\n<!-- more -->\n\n![dns解析](http://dl-blog.laoxianyu.cn/dns%E8%A7%A3%E6%9E%90.png)\n\n__DNS域名解析过程有两种方法：递归解析、迭代解析__\n\n#### 递归解析：\n\t递归解析就相当于你把这件事情交给第三个人去做，不管他怎么做，反正最后把域名对应的IP地址交给你就是了。而这第三个人就是DNS服务器，这也是我们生活中用的比较多的一种方法。一般用的就是电信的 114.114.114.114\n\n#### 迭代解析：\n\t迭代解析就是你自己去找。\n\t全球的根域名服务器一共有13台，你自己去一级一级的找下去，最终找到自己想解析的域名。\n\n---\n#### 例子：\n解析 www.google.com.（正规来说这后面是还有一个点的，只是一般都省略了）这个域名；我的DNS服务器是电信的114.114.114.114\n解析步骤：\n    1、我自己的电脑去访问www.google.com的时候，就问114 “你帮我找找www.google.com服务器的IP地址”\n    2、然后114就去找到13台根服务器中的一台根服务器，问“你知道www.google.com的IP地址嘛?”，然后根服务器就说：“不知道，但是我知道.com的服务器IP，要不你去问问它？”\n    3、接着114就找到.com的服务器问：“你知道www.google.com的IP嘛？”，然后.com服务器就说：“我不知道，但是我知道google.com的服务器IP，要不你去问问它？”\n    4、再接着114就找到google.com的服务器问：“你知道www.google.com的IP嘛？”，然后google.com服务器就回答道“知道呀”，然后把IP地址告诉114\n    5、历经千辛万苦终于找到了，114就会暂时把这个地址缓存一段时间，当有人再来问它的时候，它就不用那么辛苦去找了，直接从缓存里面调出来就是了\n    6、最后114就把www.google.com的IP地址告诉我了，然后我就去向那个IP地址请求资源去了\n\n#### 总结：\n\t我去问114，让它给我www.google.com的服务器地址，这样的方法就叫做递归，或者也可以叫做转发吧！\n\t114去找根服务器，一台台挨着问的这个过程就叫做迭代！\n\n\n\n<font color=#ff1201>技术交流可加QQ群：**774332965**<br></font>\n\n<font color=#ff1201>微信订阅号同步：**IT运维那点儿事**</font>\n\n![weixin](http://dl-blog.laoxianyu.cn/weixindy.jpg)\n\n","slug":"DNS解析","published":1,"updated":"2019-03-09T15:46:09.098Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt1o6yfn00029symu2s0tbj4","content":"<h4 id=\"什么是DNS解析？\"><a href=\"#什么是DNS解析？\" class=\"headerlink\" title=\"什么是DNS解析？\"></a>什么是DNS解析？</h4><pre><code>就是把域名转换为IP地址的一个过程\n</code></pre><h4 id=\"为什么需要DNS解析？\"><a href=\"#为什么需要DNS解析？\" class=\"headerlink\" title=\"为什么需要DNS解析？\"></a>为什么需要DNS解析？</h4><pre><code>以前都是靠 /etc/hosts 文件来解析域名的，每解析一个域名就需要在文件里面添加一条对应记录。后来由于互联网的迅速发展，域名已经数不胜数了。如果这个时候还是一条一条记录的写在/etc/hosts 文件里面的话，那这个文件估计就超级大了。于是就有了DNS解析，由DNS服务器来解析域名。\n</code></pre><a id=\"more\"></a>\n<p><img src=\"http://dl-blog.laoxianyu.cn/dns%E8%A7%A3%E6%9E%90.png\" alt=\"dns解析\"></p>\n<p><strong>DNS域名解析过程有两种方法：递归解析、迭代解析</strong></p>\n<h4 id=\"递归解析：\"><a href=\"#递归解析：\" class=\"headerlink\" title=\"递归解析：\"></a>递归解析：</h4><pre><code>递归解析就相当于你把这件事情交给第三个人去做，不管他怎么做，反正最后把域名对应的IP地址交给你就是了。而这第三个人就是DNS服务器，这也是我们生活中用的比较多的一种方法。一般用的就是电信的 114.114.114.114\n</code></pre><h4 id=\"迭代解析：\"><a href=\"#迭代解析：\" class=\"headerlink\" title=\"迭代解析：\"></a>迭代解析：</h4><pre><code>迭代解析就是你自己去找。\n全球的根域名服务器一共有13台，你自己去一级一级的找下去，最终找到自己想解析的域名。\n</code></pre><hr>\n<h4 id=\"例子：\"><a href=\"#例子：\" class=\"headerlink\" title=\"例子：\"></a>例子：</h4><p>解析 www.google.com.（正规来说这后面是还有一个点的，只是一般都省略了）这个域名；我的DNS服务器是电信的114.114.114.114<br>解析步骤：<br>    1、我自己的电脑去访问www.google.com的时候，就问114 “你帮我找找www.google.com服务器的IP地址”<br>    2、然后114就去找到13台根服务器中的一台根服务器，问“你知道www.google.com的IP地址嘛?”，然后根服务器就说：“不知道，但是我知道.com的服务器IP，要不你去问问它？”<br>    3、接着114就找到.com的服务器问：“你知道www.google.com的IP嘛？”，然后.com服务器就说：“我不知道，但是我知道google.com的服务器IP，要不你去问问它？”<br>    4、再接着114就找到google.com的服务器问：“你知道www.google.com的IP嘛？”，然后google.com服务器就回答道“知道呀”，然后把IP地址告诉114<br>    5、历经千辛万苦终于找到了，114就会暂时把这个地址缓存一段时间，当有人再来问它的时候，它就不用那么辛苦去找了，直接从缓存里面调出来就是了<br>    6、最后114就把www.google.com的IP地址告诉我了，然后我就去向那个IP地址请求资源去了</p>\n<h4 id=\"总结：\"><a href=\"#总结：\" class=\"headerlink\" title=\"总结：\"></a>总结：</h4><pre><code>我去问114，让它给我www.google.com的服务器地址，这样的方法就叫做递归，或者也可以叫做转发吧！\n114去找根服务器，一台台挨着问的这个过程就叫做迭代！\n</code></pre><font color=\"#ff1201\">技术交流可加QQ群：<strong>774332965</strong><br></font>\n\n<font color=\"#ff1201\">微信订阅号同步：<strong>IT运维那点儿事</strong></font>\n\n<p><img src=\"http://dl-blog.laoxianyu.cn/weixindy.jpg\" alt=\"weixin\"></p>\n","excerpt":"<h4 id=\"什么是DNS解析？\"><a href=\"#什么是DNS解析？\" class=\"headerlink\" title=\"什么是DNS解析？\"></a>什么是DNS解析？</h4><pre><code>就是把域名转换为IP地址的一个过程\n</code></pre><h4 id=\"为什么需要DNS解析？\"><a href=\"#为什么需要DNS解析？\" class=\"headerlink\" title=\"为什么需要DNS解析？\"></a>为什么需要DNS解析？</h4><pre><code>以前都是靠 /etc/hosts 文件来解析域名的，每解析一个域名就需要在文件里面添加一条对应记录。后来由于互联网的迅速发展，域名已经数不胜数了。如果这个时候还是一条一条记录的写在/etc/hosts 文件里面的话，那这个文件估计就超级大了。于是就有了DNS解析，由DNS服务器来解析域名。\n</code></pre>","more":"<p><img src=\"http://dl-blog.laoxianyu.cn/dns%E8%A7%A3%E6%9E%90.png\" alt=\"dns解析\"></p>\n<p><strong>DNS域名解析过程有两种方法：递归解析、迭代解析</strong></p>\n<h4 id=\"递归解析：\"><a href=\"#递归解析：\" class=\"headerlink\" title=\"递归解析：\"></a>递归解析：</h4><pre><code>递归解析就相当于你把这件事情交给第三个人去做，不管他怎么做，反正最后把域名对应的IP地址交给你就是了。而这第三个人就是DNS服务器，这也是我们生活中用的比较多的一种方法。一般用的就是电信的 114.114.114.114\n</code></pre><h4 id=\"迭代解析：\"><a href=\"#迭代解析：\" class=\"headerlink\" title=\"迭代解析：\"></a>迭代解析：</h4><pre><code>迭代解析就是你自己去找。\n全球的根域名服务器一共有13台，你自己去一级一级的找下去，最终找到自己想解析的域名。\n</code></pre><hr>\n<h4 id=\"例子：\"><a href=\"#例子：\" class=\"headerlink\" title=\"例子：\"></a>例子：</h4><p>解析 www.google.com.（正规来说这后面是还有一个点的，只是一般都省略了）这个域名；我的DNS服务器是电信的114.114.114.114<br>解析步骤：<br>    1、我自己的电脑去访问www.google.com的时候，就问114 “你帮我找找www.google.com服务器的IP地址”<br>    2、然后114就去找到13台根服务器中的一台根服务器，问“你知道www.google.com的IP地址嘛?”，然后根服务器就说：“不知道，但是我知道.com的服务器IP，要不你去问问它？”<br>    3、接着114就找到.com的服务器问：“你知道www.google.com的IP嘛？”，然后.com服务器就说：“我不知道，但是我知道google.com的服务器IP，要不你去问问它？”<br>    4、再接着114就找到google.com的服务器问：“你知道www.google.com的IP嘛？”，然后google.com服务器就回答道“知道呀”，然后把IP地址告诉114<br>    5、历经千辛万苦终于找到了，114就会暂时把这个地址缓存一段时间，当有人再来问它的时候，它就不用那么辛苦去找了，直接从缓存里面调出来就是了<br>    6、最后114就把www.google.com的IP地址告诉我了，然后我就去向那个IP地址请求资源去了</p>\n<h4 id=\"总结：\"><a href=\"#总结：\" class=\"headerlink\" title=\"总结：\"></a>总结：</h4><pre><code>我去问114，让它给我www.google.com的服务器地址，这样的方法就叫做递归，或者也可以叫做转发吧！\n114去找根服务器，一台台挨着问的这个过程就叫做迭代！\n</code></pre><font color=#ff1201>技术交流可加QQ群：<strong>774332965</strong><br></font>\n\n<font color=#ff1201>微信订阅号同步：<strong>IT运维那点儿事</strong></font>\n\n<p><img src=\"http://dl-blog.laoxianyu.cn/weixindy.jpg\" alt=\"weixin\"></p>"},{"title":"IP协议","abbrlink":"6cfb29f7","date":"2016-11-24T15:20:16.000Z","_content":"\n__前言__\n\tTCP/IP协议是一个很大协议族，里面包含了IP协议、TCP协议、UDP协议、ICMP协议、IGMP......等等的协议；而IP、TCP就是其中很重要两个的协议。今天我们就来一起简单的分析一下IP协议。\n\n#### IP协议简介\n\tIP协议是TCP/IP协议的核心，所有的TCP，UDP，IMCP，IGCP的数据都以IP数据格式传输。要注意的是，IP不是可靠的协议，这是说，IP协议没有提供一种数据未传达以后的处理机制；而它的上层协议TCP就具有这个功能。\n<!-- more -->\n\t什么是上层协议？就是距离用户更近的协议，比如http、ftp、TCP等等，而这些协议都是基于IP协议的，所以说是IP协议的上层协议。\n\n#### IP协议报格式\n![IP协议](http://dl-blog.laoxianyu.cn/ip.png)\n\n今天先不挨个解释，我们先来看一看其中有趣的两项。\n*8位生存时间TTL*：TTL是一个控制IP数据报在传输过程中的有效时间的类型，详细的可以参考[LaoXianYu的TTL](http://www.laoxianyu.cn/2016/11/22/TTL/ \"老咸鱼TTL\")，接下来我们来详细的说它后面的那8位。\n\n*8位协议*：开头说了，IP协议是一个不可靠的协议，它还有可靠的上层协议；那上层协议用的是什么协议呢？究竟是TCP还是UDP，答案就在这 8位协议 上。这儿的8位就指出了IP协议的上层用的什么协议。\n\nLinux系统的朋友可以查看 /etc/protocols 这个文件。\n![procolos](http://dl-blog.laoxianyu.cn/protocols.png)\n(注意：这个图没有截完，下面还有很多，一直到了142了吧)\n该文件是网络协议定义文件，里面记录了TCP/IP协议族的所有协议类型。文件中的每一行对应一个协议类型，它有3个字段，中间用TAB或空格分隔，分别表示“协议名称”、“协议号”和“协议别名”。\n\n也就是说，如果这儿8位协议的值为 1，那上层就是用的ICMP；如果为 2，那上层用的就是IGMP；如果为 6，那上层用的就是TCP。\n\n现在大家应该知道这两项是干嘛的了吧！\n\n#### IP路由选择\n当一个IP数据包准备好了的时候，IP数据包（或者说是路由器）是如何将数据包送到目的地的呢？它是怎么选择一个合适的路径来\"送货\"的呢？\n\n最特殊的情况是目的主机和主机直连，那么主机根本不用寻找路由，直接把数据传递过去就可以了。至于是怎么直接传递的，这就要靠ARP协议了。详细请查考[LaoXianYu的arp](http://www.laoxianyu.cn/2016/11/21/ARP%E5%8D%8F%E8%AE%AE/)\n\n稍微一般一点的情况是，主机通过若干个路由器(router)和目的主机连接。那么路由器就要通过ip包的信息来为ip包寻找到一个合适的目标来进行传递，比如合适的主机，或者合适的路由。路由器或者主机将会用如下的方式来处理某一个IP数据包\n\n如果IP数据包的TTL（生命周期）以到，则该IP数据包就被抛弃。\n\t1、搜索路由表，优先搜索匹配主机，如果能找到和IP地址完全一致的目标主机，则将该包发向目标主机\n\t2、搜索路由表，如果匹配主机失败，则匹配同子网的路由器，这需要“子网掩码(1.3.)”的协助。如果找到路由器，则将该包发向路由器。\n\t3、搜索路由表，如果匹配同子网路由器失败，则匹配同网号（第一章有讲解）路由器，如果找到路由器，则将该包发向路由器。\n\t4、搜索陆游表，如果以上都失败了，就搜索默认路由，如果默认路由存在，则发包\n\t5、如果都失败了，就丢掉这个包。\n这再一次证明了，ip包是不可靠的。因为它不保证送达。\n\n\n<font color=#ff1201>技术交流可加QQ群：**774332965**<br></font>\n\n<font color=#ff1201>微信订阅号同步：**IT运维那点儿事**</font>\n\n![weixin](http://dl-blog.laoxianyu.cn/weixindy.jpg)\n\n","source":"_posts/IP协议.md","raw":"---\ntitle: IP协议\ntags: TCP/IP\nabbrlink: 6cfb29f7\ndate: 2016-11-24 23:20:16\ncategories: [网络]\n---\n\n__前言__\n\tTCP/IP协议是一个很大协议族，里面包含了IP协议、TCP协议、UDP协议、ICMP协议、IGMP......等等的协议；而IP、TCP就是其中很重要两个的协议。今天我们就来一起简单的分析一下IP协议。\n\n#### IP协议简介\n\tIP协议是TCP/IP协议的核心，所有的TCP，UDP，IMCP，IGCP的数据都以IP数据格式传输。要注意的是，IP不是可靠的协议，这是说，IP协议没有提供一种数据未传达以后的处理机制；而它的上层协议TCP就具有这个功能。\n<!-- more -->\n\t什么是上层协议？就是距离用户更近的协议，比如http、ftp、TCP等等，而这些协议都是基于IP协议的，所以说是IP协议的上层协议。\n\n#### IP协议报格式\n![IP协议](http://dl-blog.laoxianyu.cn/ip.png)\n\n今天先不挨个解释，我们先来看一看其中有趣的两项。\n*8位生存时间TTL*：TTL是一个控制IP数据报在传输过程中的有效时间的类型，详细的可以参考[LaoXianYu的TTL](http://www.laoxianyu.cn/2016/11/22/TTL/ \"老咸鱼TTL\")，接下来我们来详细的说它后面的那8位。\n\n*8位协议*：开头说了，IP协议是一个不可靠的协议，它还有可靠的上层协议；那上层协议用的是什么协议呢？究竟是TCP还是UDP，答案就在这 8位协议 上。这儿的8位就指出了IP协议的上层用的什么协议。\n\nLinux系统的朋友可以查看 /etc/protocols 这个文件。\n![procolos](http://dl-blog.laoxianyu.cn/protocols.png)\n(注意：这个图没有截完，下面还有很多，一直到了142了吧)\n该文件是网络协议定义文件，里面记录了TCP/IP协议族的所有协议类型。文件中的每一行对应一个协议类型，它有3个字段，中间用TAB或空格分隔，分别表示“协议名称”、“协议号”和“协议别名”。\n\n也就是说，如果这儿8位协议的值为 1，那上层就是用的ICMP；如果为 2，那上层用的就是IGMP；如果为 6，那上层用的就是TCP。\n\n现在大家应该知道这两项是干嘛的了吧！\n\n#### IP路由选择\n当一个IP数据包准备好了的时候，IP数据包（或者说是路由器）是如何将数据包送到目的地的呢？它是怎么选择一个合适的路径来\"送货\"的呢？\n\n最特殊的情况是目的主机和主机直连，那么主机根本不用寻找路由，直接把数据传递过去就可以了。至于是怎么直接传递的，这就要靠ARP协议了。详细请查考[LaoXianYu的arp](http://www.laoxianyu.cn/2016/11/21/ARP%E5%8D%8F%E8%AE%AE/)\n\n稍微一般一点的情况是，主机通过若干个路由器(router)和目的主机连接。那么路由器就要通过ip包的信息来为ip包寻找到一个合适的目标来进行传递，比如合适的主机，或者合适的路由。路由器或者主机将会用如下的方式来处理某一个IP数据包\n\n如果IP数据包的TTL（生命周期）以到，则该IP数据包就被抛弃。\n\t1、搜索路由表，优先搜索匹配主机，如果能找到和IP地址完全一致的目标主机，则将该包发向目标主机\n\t2、搜索路由表，如果匹配主机失败，则匹配同子网的路由器，这需要“子网掩码(1.3.)”的协助。如果找到路由器，则将该包发向路由器。\n\t3、搜索路由表，如果匹配同子网路由器失败，则匹配同网号（第一章有讲解）路由器，如果找到路由器，则将该包发向路由器。\n\t4、搜索陆游表，如果以上都失败了，就搜索默认路由，如果默认路由存在，则发包\n\t5、如果都失败了，就丢掉这个包。\n这再一次证明了，ip包是不可靠的。因为它不保证送达。\n\n\n<font color=#ff1201>技术交流可加QQ群：**774332965**<br></font>\n\n<font color=#ff1201>微信订阅号同步：**IT运维那点儿事**</font>\n\n![weixin](http://dl-blog.laoxianyu.cn/weixindy.jpg)\n\n","slug":"IP协议","published":1,"updated":"2019-03-09T15:46:09.098Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt1o6yfy00069sym9udcmyy7","content":"<p><strong>前言</strong><br>    TCP/IP协议是一个很大协议族，里面包含了IP协议、TCP协议、UDP协议、ICMP协议、IGMP……等等的协议；而IP、TCP就是其中很重要两个的协议。今天我们就来一起简单的分析一下IP协议。</p>\n<h4 id=\"IP协议简介\"><a href=\"#IP协议简介\" class=\"headerlink\" title=\"IP协议简介\"></a>IP协议简介</h4><pre><code>IP协议是TCP/IP协议的核心，所有的TCP，UDP，IMCP，IGCP的数据都以IP数据格式传输。要注意的是，IP不是可靠的协议，这是说，IP协议没有提供一种数据未传达以后的处理机制；而它的上层协议TCP就具有这个功能。\n</code></pre><a id=\"more\"></a>\n<pre><code>什么是上层协议？就是距离用户更近的协议，比如http、ftp、TCP等等，而这些协议都是基于IP协议的，所以说是IP协议的上层协议。\n</code></pre><h4 id=\"IP协议报格式\"><a href=\"#IP协议报格式\" class=\"headerlink\" title=\"IP协议报格式\"></a>IP协议报格式</h4><p><img src=\"http://dl-blog.laoxianyu.cn/ip.png\" alt=\"IP协议\"></p>\n<p>今天先不挨个解释，我们先来看一看其中有趣的两项。<br><em>8位生存时间TTL</em>：TTL是一个控制IP数据报在传输过程中的有效时间的类型，详细的可以参考<a href=\"http://www.laoxianyu.cn/2016/11/22/TTL/\" title=\"老咸鱼TTL\" target=\"_blank\" rel=\"external\">LaoXianYu的TTL</a>，接下来我们来详细的说它后面的那8位。</p>\n<p><em>8位协议</em>：开头说了，IP协议是一个不可靠的协议，它还有可靠的上层协议；那上层协议用的是什么协议呢？究竟是TCP还是UDP，答案就在这 8位协议 上。这儿的8位就指出了IP协议的上层用的什么协议。</p>\n<p>Linux系统的朋友可以查看 /etc/protocols 这个文件。<br><img src=\"http://dl-blog.laoxianyu.cn/protocols.png\" alt=\"procolos\"><br>(注意：这个图没有截完，下面还有很多，一直到了142了吧)<br>该文件是网络协议定义文件，里面记录了TCP/IP协议族的所有协议类型。文件中的每一行对应一个协议类型，它有3个字段，中间用TAB或空格分隔，分别表示“协议名称”、“协议号”和“协议别名”。</p>\n<p>也就是说，如果这儿8位协议的值为 1，那上层就是用的ICMP；如果为 2，那上层用的就是IGMP；如果为 6，那上层用的就是TCP。</p>\n<p>现在大家应该知道这两项是干嘛的了吧！</p>\n<h4 id=\"IP路由选择\"><a href=\"#IP路由选择\" class=\"headerlink\" title=\"IP路由选择\"></a>IP路由选择</h4><p>当一个IP数据包准备好了的时候，IP数据包（或者说是路由器）是如何将数据包送到目的地的呢？它是怎么选择一个合适的路径来”送货”的呢？</p>\n<p>最特殊的情况是目的主机和主机直连，那么主机根本不用寻找路由，直接把数据传递过去就可以了。至于是怎么直接传递的，这就要靠ARP协议了。详细请查考<a href=\"http://www.laoxianyu.cn/2016/11/21/ARP%E5%8D%8F%E8%AE%AE/\" target=\"_blank\" rel=\"external\">LaoXianYu的arp</a></p>\n<p>稍微一般一点的情况是，主机通过若干个路由器(router)和目的主机连接。那么路由器就要通过ip包的信息来为ip包寻找到一个合适的目标来进行传递，比如合适的主机，或者合适的路由。路由器或者主机将会用如下的方式来处理某一个IP数据包</p>\n<p>如果IP数据包的TTL（生命周期）以到，则该IP数据包就被抛弃。<br>    1、搜索路由表，优先搜索匹配主机，如果能找到和IP地址完全一致的目标主机，则将该包发向目标主机<br>    2、搜索路由表，如果匹配主机失败，则匹配同子网的路由器，这需要“子网掩码(1.3.)”的协助。如果找到路由器，则将该包发向路由器。<br>    3、搜索路由表，如果匹配同子网路由器失败，则匹配同网号（第一章有讲解）路由器，如果找到路由器，则将该包发向路由器。<br>    4、搜索陆游表，如果以上都失败了，就搜索默认路由，如果默认路由存在，则发包<br>    5、如果都失败了，就丢掉这个包。<br>这再一次证明了，ip包是不可靠的。因为它不保证送达。</p>\n<font color=\"#ff1201\">技术交流可加QQ群：<strong>774332965</strong><br></font>\n\n<font color=\"#ff1201\">微信订阅号同步：<strong>IT运维那点儿事</strong></font>\n\n<p><img src=\"http://dl-blog.laoxianyu.cn/weixindy.jpg\" alt=\"weixin\"></p>\n","excerpt":"<p><strong>前言</strong><br>    TCP/IP协议是一个很大协议族，里面包含了IP协议、TCP协议、UDP协议、ICMP协议、IGMP……等等的协议；而IP、TCP就是其中很重要两个的协议。今天我们就来一起简单的分析一下IP协议。</p>\n<h4 id=\"IP协议简介\"><a href=\"#IP协议简介\" class=\"headerlink\" title=\"IP协议简介\"></a>IP协议简介</h4><pre><code>IP协议是TCP/IP协议的核心，所有的TCP，UDP，IMCP，IGCP的数据都以IP数据格式传输。要注意的是，IP不是可靠的协议，这是说，IP协议没有提供一种数据未传达以后的处理机制；而它的上层协议TCP就具有这个功能。\n</code></pre>","more":"<pre><code>什么是上层协议？就是距离用户更近的协议，比如http、ftp、TCP等等，而这些协议都是基于IP协议的，所以说是IP协议的上层协议。\n</code></pre><h4 id=\"IP协议报格式\"><a href=\"#IP协议报格式\" class=\"headerlink\" title=\"IP协议报格式\"></a>IP协议报格式</h4><p><img src=\"http://dl-blog.laoxianyu.cn/ip.png\" alt=\"IP协议\"></p>\n<p>今天先不挨个解释，我们先来看一看其中有趣的两项。<br><em>8位生存时间TTL</em>：TTL是一个控制IP数据报在传输过程中的有效时间的类型，详细的可以参考<a href=\"http://www.laoxianyu.cn/2016/11/22/TTL/\" title=\"老咸鱼TTL\">LaoXianYu的TTL</a>，接下来我们来详细的说它后面的那8位。</p>\n<p><em>8位协议</em>：开头说了，IP协议是一个不可靠的协议，它还有可靠的上层协议；那上层协议用的是什么协议呢？究竟是TCP还是UDP，答案就在这 8位协议 上。这儿的8位就指出了IP协议的上层用的什么协议。</p>\n<p>Linux系统的朋友可以查看 /etc/protocols 这个文件。<br><img src=\"http://dl-blog.laoxianyu.cn/protocols.png\" alt=\"procolos\"><br>(注意：这个图没有截完，下面还有很多，一直到了142了吧)<br>该文件是网络协议定义文件，里面记录了TCP/IP协议族的所有协议类型。文件中的每一行对应一个协议类型，它有3个字段，中间用TAB或空格分隔，分别表示“协议名称”、“协议号”和“协议别名”。</p>\n<p>也就是说，如果这儿8位协议的值为 1，那上层就是用的ICMP；如果为 2，那上层用的就是IGMP；如果为 6，那上层用的就是TCP。</p>\n<p>现在大家应该知道这两项是干嘛的了吧！</p>\n<h4 id=\"IP路由选择\"><a href=\"#IP路由选择\" class=\"headerlink\" title=\"IP路由选择\"></a>IP路由选择</h4><p>当一个IP数据包准备好了的时候，IP数据包（或者说是路由器）是如何将数据包送到目的地的呢？它是怎么选择一个合适的路径来”送货”的呢？</p>\n<p>最特殊的情况是目的主机和主机直连，那么主机根本不用寻找路由，直接把数据传递过去就可以了。至于是怎么直接传递的，这就要靠ARP协议了。详细请查考<a href=\"http://www.laoxianyu.cn/2016/11/21/ARP%E5%8D%8F%E8%AE%AE/\">LaoXianYu的arp</a></p>\n<p>稍微一般一点的情况是，主机通过若干个路由器(router)和目的主机连接。那么路由器就要通过ip包的信息来为ip包寻找到一个合适的目标来进行传递，比如合适的主机，或者合适的路由。路由器或者主机将会用如下的方式来处理某一个IP数据包</p>\n<p>如果IP数据包的TTL（生命周期）以到，则该IP数据包就被抛弃。<br>    1、搜索路由表，优先搜索匹配主机，如果能找到和IP地址完全一致的目标主机，则将该包发向目标主机<br>    2、搜索路由表，如果匹配主机失败，则匹配同子网的路由器，这需要“子网掩码(1.3.)”的协助。如果找到路由器，则将该包发向路由器。<br>    3、搜索路由表，如果匹配同子网路由器失败，则匹配同网号（第一章有讲解）路由器，如果找到路由器，则将该包发向路由器。<br>    4、搜索陆游表，如果以上都失败了，就搜索默认路由，如果默认路由存在，则发包<br>    5、如果都失败了，就丢掉这个包。<br>这再一次证明了，ip包是不可靠的。因为它不保证送达。</p>\n<font color=#ff1201>技术交流可加QQ群：<strong>774332965</strong><br></font>\n\n<font color=#ff1201>微信订阅号同步：<strong>IT运维那点儿事</strong></font>\n\n<p><img src=\"http://dl-blog.laoxianyu.cn/weixindy.jpg\" alt=\"weixin\"></p>"},{"title":"ICMP","abbrlink":"9b389b8e","date":"2016-11-23T14:42:02.000Z","_content":"\n#### 什么是ICMP？\n\tICMP是（Internet Control Message Protocol）Internet控制报文协议。\n\n#### ICMP协议有什么用？\n\t它是TCP/IP协议族的一个子协议，用于在IP主机、路由器之间传递控制消息。控制消息是指网络通不通、主机是否可达、路由是否可用、端口是否可达等网络本身的消息。\n<!-- more -->\n\t这些控制消息虽然并不传输用户数据，但是对于用户数据的传递起着重要的作用。也就是说每次在传输IP数据包之前，都会利用ICMP去检测一番，然后再决定是否传输IP数据包。\n\n#### ICMP协议类型\n![icmp](http://dl-blog.laoxianyu.cn/icmp_2.png)\n其中有 0：回显应答 \n       8：回显请求\nPing命令就是利用这两种类型的ICMP数据包。\n一台主机向一个节点发送一个Type=8的ICMP报文，如果途中没有异常（例如被路由器丢弃、目标不回应ICMP或传输失败），则目标返回Type=0的ICMP报文，说明这台主机存在，更详细的traceroute通过计算ICMP报文通过的节点来确定主机与目标之间的网络距离。\n（在上一篇中说道Tracroute利用了TTL，同时traceroute也利用了ICMP）\n\n<font color=#ff1201>技术交流可加QQ群：**774332965**<br></font>\n\n<font color=#ff1201>微信订阅号同步：**IT运维那点儿事**</font>\n\n![weixin](http://dl-blog.laoxianyu.cn/weixindy.jpg)\n\n","source":"_posts/ICMP协议.md","raw":"---\ntitle: ICMP\ntags: TCP/IP\nabbrlink: 9b389b8e\ndate: 2016-11-23 22:42:02\ncategories: [网络]\n---\n\n#### 什么是ICMP？\n\tICMP是（Internet Control Message Protocol）Internet控制报文协议。\n\n#### ICMP协议有什么用？\n\t它是TCP/IP协议族的一个子协议，用于在IP主机、路由器之间传递控制消息。控制消息是指网络通不通、主机是否可达、路由是否可用、端口是否可达等网络本身的消息。\n<!-- more -->\n\t这些控制消息虽然并不传输用户数据，但是对于用户数据的传递起着重要的作用。也就是说每次在传输IP数据包之前，都会利用ICMP去检测一番，然后再决定是否传输IP数据包。\n\n#### ICMP协议类型\n![icmp](http://dl-blog.laoxianyu.cn/icmp_2.png)\n其中有 0：回显应答 \n       8：回显请求\nPing命令就是利用这两种类型的ICMP数据包。\n一台主机向一个节点发送一个Type=8的ICMP报文，如果途中没有异常（例如被路由器丢弃、目标不回应ICMP或传输失败），则目标返回Type=0的ICMP报文，说明这台主机存在，更详细的traceroute通过计算ICMP报文通过的节点来确定主机与目标之间的网络距离。\n（在上一篇中说道Tracroute利用了TTL，同时traceroute也利用了ICMP）\n\n<font color=#ff1201>技术交流可加QQ群：**774332965**<br></font>\n\n<font color=#ff1201>微信订阅号同步：**IT运维那点儿事**</font>\n\n![weixin](http://dl-blog.laoxianyu.cn/weixindy.jpg)\n\n","slug":"ICMP协议","published":1,"updated":"2019-03-09T15:46:09.098Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt1o6yg100089symj920cr78","content":"<h4 id=\"什么是ICMP？\"><a href=\"#什么是ICMP？\" class=\"headerlink\" title=\"什么是ICMP？\"></a>什么是ICMP？</h4><pre><code>ICMP是（Internet Control Message Protocol）Internet控制报文协议。\n</code></pre><h4 id=\"ICMP协议有什么用？\"><a href=\"#ICMP协议有什么用？\" class=\"headerlink\" title=\"ICMP协议有什么用？\"></a>ICMP协议有什么用？</h4><pre><code>它是TCP/IP协议族的一个子协议，用于在IP主机、路由器之间传递控制消息。控制消息是指网络通不通、主机是否可达、路由是否可用、端口是否可达等网络本身的消息。\n</code></pre><a id=\"more\"></a>\n<pre><code>这些控制消息虽然并不传输用户数据，但是对于用户数据的传递起着重要的作用。也就是说每次在传输IP数据包之前，都会利用ICMP去检测一番，然后再决定是否传输IP数据包。\n</code></pre><h4 id=\"ICMP协议类型\"><a href=\"#ICMP协议类型\" class=\"headerlink\" title=\"ICMP协议类型\"></a>ICMP协议类型</h4><p><img src=\"http://dl-blog.laoxianyu.cn/icmp_2.png\" alt=\"icmp\"><br>其中有 0：回显应答<br>       8：回显请求<br>Ping命令就是利用这两种类型的ICMP数据包。<br>一台主机向一个节点发送一个Type=8的ICMP报文，如果途中没有异常（例如被路由器丢弃、目标不回应ICMP或传输失败），则目标返回Type=0的ICMP报文，说明这台主机存在，更详细的traceroute通过计算ICMP报文通过的节点来确定主机与目标之间的网络距离。<br>（在上一篇中说道Tracroute利用了TTL，同时traceroute也利用了ICMP）</p>\n<font color=\"#ff1201\">技术交流可加QQ群：<strong>774332965</strong><br></font>\n\n<font color=\"#ff1201\">微信订阅号同步：<strong>IT运维那点儿事</strong></font>\n\n<p><img src=\"http://dl-blog.laoxianyu.cn/weixindy.jpg\" alt=\"weixin\"></p>\n","excerpt":"<h4 id=\"什么是ICMP？\"><a href=\"#什么是ICMP？\" class=\"headerlink\" title=\"什么是ICMP？\"></a>什么是ICMP？</h4><pre><code>ICMP是（Internet Control Message Protocol）Internet控制报文协议。\n</code></pre><h4 id=\"ICMP协议有什么用？\"><a href=\"#ICMP协议有什么用？\" class=\"headerlink\" title=\"ICMP协议有什么用？\"></a>ICMP协议有什么用？</h4><pre><code>它是TCP/IP协议族的一个子协议，用于在IP主机、路由器之间传递控制消息。控制消息是指网络通不通、主机是否可达、路由是否可用、端口是否可达等网络本身的消息。\n</code></pre>","more":"<pre><code>这些控制消息虽然并不传输用户数据，但是对于用户数据的传递起着重要的作用。也就是说每次在传输IP数据包之前，都会利用ICMP去检测一番，然后再决定是否传输IP数据包。\n</code></pre><h4 id=\"ICMP协议类型\"><a href=\"#ICMP协议类型\" class=\"headerlink\" title=\"ICMP协议类型\"></a>ICMP协议类型</h4><p><img src=\"http://dl-blog.laoxianyu.cn/icmp_2.png\" alt=\"icmp\"><br>其中有 0：回显应答<br>       8：回显请求<br>Ping命令就是利用这两种类型的ICMP数据包。<br>一台主机向一个节点发送一个Type=8的ICMP报文，如果途中没有异常（例如被路由器丢弃、目标不回应ICMP或传输失败），则目标返回Type=0的ICMP报文，说明这台主机存在，更详细的traceroute通过计算ICMP报文通过的节点来确定主机与目标之间的网络距离。<br>（在上一篇中说道Tracroute利用了TTL，同时traceroute也利用了ICMP）</p>\n<font color=#ff1201>技术交流可加QQ群：<strong>774332965</strong><br></font>\n\n<font color=#ff1201>微信订阅号同步：<strong>IT运维那点儿事</strong></font>\n\n<p><img src=\"http://dl-blog.laoxianyu.cn/weixindy.jpg\" alt=\"weixin\"></p>"},{"title":"Ingress介绍","abbrlink":"7ef83387","date":"2018-11-09T10:29:30.000Z","_content":"\n# 概念\n\nIngress是kubernetes1.1之后官方提出的一个标准，按照这套标准它有多种实现，比如 nginx-ingress-controller、traefik-ingress-controller、kong-ingress-controller，这3中都是官方推荐的。Ingress的出现解决了Service的短板：只能在tcp层面做负载均衡。而ingress可以方便的做http/https层面的负载均衡。一个是在4层，一个在7层。ingress就是控制客户端从入口连接到k8s集群服务的规则的集合！\n\n### ingress出现之前，服务暴露是这样的：\n\n![image](http://dl-blog.laoxianyu.cn/image2018-8-10_14-6-49.png)\n\n\n### ingress出现之后，服务暴露是这样的：\n<!--more-->\n\n![image](http://dl-blog.laoxianyu.cn/image2018-8-10_14-7-29.png)\n\n可以给Ingress配置提供外部可访问的URL、负载均衡、SSL、基于名称的虚拟主机等。ingress-controller负责实现了ingress这套标准，一般使用的是负载均衡。\n\n\n使用ingress之前，必须要先部署ingress-controller，不然把ingress部署起来也没用，它不会产生实际作用。\n\n# Ingress格式\n```\napiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: test-ingress\nspec:\n  rules:\n  - http:\n      paths:\n      - path: /testpath\n        backend:\n          serviceName: test\n          servicePort: 80\n```\n每个Ingress都需要配置rules。\n\n根据Ingress Spec配置的不同，Ingress可以分为以下几种类型：\n\n### 单服务Ingress\n单服务Ingress即该Ingress仅指定一个没有任何规则的后端服务。\n```\napiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: test-ingress\nspec:\n  backend:\n    serviceName: testsvc\n    servicePort: 80\n```\n\n### 路由到多服务的Ingress\n路由到多服务的Ingress即根据请求路径的不同转发到不同的后端服务上，比如\n```\napiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: test\n  annotations:\n    nginx.ingress.kubernetes.io/rewrite-target: /\nspec:\n  rules:\n  - host: foo.bar.com\n    http:\n      paths:\n      - path: /foo\n        backend:\n          serviceName: s1\n          servicePort: 80\n      - path: /bar\n        backend:\n          serviceName: s2\n          servicePort: 80\n```\n### 虚拟主机Ingress\n虚拟主机Ingress即根据Host header的不同转发到不同的后端服务上，如下所示\n```\napiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: test\nspec:\n  rules:\n  - host: foo.bar.com\n    http:\n      paths:\n      - backend:\n          serviceName: s1\n          servicePort: 80\n  - host: bar.foo.com\n    http:\n      paths:\n      - backend:\n          serviceName: s2\n          servicePort: 80\n```\n* 注：没有定义规则的后端服务称为默认后端服务，可以用来方便的处理404页面。\n\n\n\nk8s官方ingress文档：https://kubernetes.io/docs/concepts/services-networking/ingress/\n\ntraefik-ingress-controller使用：https://laoxianyu.cn/archives/208297ce.html\n\n<font color=#ff1201>技术交流可加QQ群：**774332965**<br></font>\n\n<font color=#ff1201>微信订阅号同步：**IT运维那点儿事**</font>\n\n![weixin](http://dl-blog.laoxianyu.cn/weixindy.jpg)\n\n","source":"_posts/Ingress介绍.md","raw":"---\ntitle:\n  - Ingress介绍\ncategories:\n  - kubernetes\ntags:\n  - kubernetes\n  - ingress\nabbrlink: 7ef83387\ndate: 2018-11-09 18:29:30\n---\n\n# 概念\n\nIngress是kubernetes1.1之后官方提出的一个标准，按照这套标准它有多种实现，比如 nginx-ingress-controller、traefik-ingress-controller、kong-ingress-controller，这3中都是官方推荐的。Ingress的出现解决了Service的短板：只能在tcp层面做负载均衡。而ingress可以方便的做http/https层面的负载均衡。一个是在4层，一个在7层。ingress就是控制客户端从入口连接到k8s集群服务的规则的集合！\n\n### ingress出现之前，服务暴露是这样的：\n\n![image](http://dl-blog.laoxianyu.cn/image2018-8-10_14-6-49.png)\n\n\n### ingress出现之后，服务暴露是这样的：\n<!--more-->\n\n![image](http://dl-blog.laoxianyu.cn/image2018-8-10_14-7-29.png)\n\n可以给Ingress配置提供外部可访问的URL、负载均衡、SSL、基于名称的虚拟主机等。ingress-controller负责实现了ingress这套标准，一般使用的是负载均衡。\n\n\n使用ingress之前，必须要先部署ingress-controller，不然把ingress部署起来也没用，它不会产生实际作用。\n\n# Ingress格式\n```\napiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: test-ingress\nspec:\n  rules:\n  - http:\n      paths:\n      - path: /testpath\n        backend:\n          serviceName: test\n          servicePort: 80\n```\n每个Ingress都需要配置rules。\n\n根据Ingress Spec配置的不同，Ingress可以分为以下几种类型：\n\n### 单服务Ingress\n单服务Ingress即该Ingress仅指定一个没有任何规则的后端服务。\n```\napiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: test-ingress\nspec:\n  backend:\n    serviceName: testsvc\n    servicePort: 80\n```\n\n### 路由到多服务的Ingress\n路由到多服务的Ingress即根据请求路径的不同转发到不同的后端服务上，比如\n```\napiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: test\n  annotations:\n    nginx.ingress.kubernetes.io/rewrite-target: /\nspec:\n  rules:\n  - host: foo.bar.com\n    http:\n      paths:\n      - path: /foo\n        backend:\n          serviceName: s1\n          servicePort: 80\n      - path: /bar\n        backend:\n          serviceName: s2\n          servicePort: 80\n```\n### 虚拟主机Ingress\n虚拟主机Ingress即根据Host header的不同转发到不同的后端服务上，如下所示\n```\napiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: test\nspec:\n  rules:\n  - host: foo.bar.com\n    http:\n      paths:\n      - backend:\n          serviceName: s1\n          servicePort: 80\n  - host: bar.foo.com\n    http:\n      paths:\n      - backend:\n          serviceName: s2\n          servicePort: 80\n```\n* 注：没有定义规则的后端服务称为默认后端服务，可以用来方便的处理404页面。\n\n\n\nk8s官方ingress文档：https://kubernetes.io/docs/concepts/services-networking/ingress/\n\ntraefik-ingress-controller使用：https://laoxianyu.cn/archives/208297ce.html\n\n<font color=#ff1201>技术交流可加QQ群：**774332965**<br></font>\n\n<font color=#ff1201>微信订阅号同步：**IT运维那点儿事**</font>\n\n![weixin](http://dl-blog.laoxianyu.cn/weixindy.jpg)\n\n","slug":"Ingress介绍","published":1,"updated":"2019-03-09T15:46:09.098Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt1o6yg400099symgkzcw31e","content":"<h1 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h1><p>Ingress是kubernetes1.1之后官方提出的一个标准，按照这套标准它有多种实现，比如 nginx-ingress-controller、traefik-ingress-controller、kong-ingress-controller，这3中都是官方推荐的。Ingress的出现解决了Service的短板：只能在tcp层面做负载均衡。而ingress可以方便的做http/https层面的负载均衡。一个是在4层，一个在7层。ingress就是控制客户端从入口连接到k8s集群服务的规则的集合！</p>\n<h3 id=\"ingress出现之前，服务暴露是这样的：\"><a href=\"#ingress出现之前，服务暴露是这样的：\" class=\"headerlink\" title=\"ingress出现之前，服务暴露是这样的：\"></a>ingress出现之前，服务暴露是这样的：</h3><p><img src=\"http://dl-blog.laoxianyu.cn/image2018-8-10_14-6-49.png\" alt=\"image\"></p>\n<h3 id=\"ingress出现之后，服务暴露是这样的：\"><a href=\"#ingress出现之后，服务暴露是这样的：\" class=\"headerlink\" title=\"ingress出现之后，服务暴露是这样的：\"></a>ingress出现之后，服务暴露是这样的：</h3><a id=\"more\"></a>\n<p><img src=\"http://dl-blog.laoxianyu.cn/image2018-8-10_14-7-29.png\" alt=\"image\"></p>\n<p>可以给Ingress配置提供外部可访问的URL、负载均衡、SSL、基于名称的虚拟主机等。ingress-controller负责实现了ingress这套标准，一般使用的是负载均衡。</p>\n<p>使用ingress之前，必须要先部署ingress-controller，不然把ingress部署起来也没用，它不会产生实际作用。</p>\n<h1 id=\"Ingress格式\"><a href=\"#Ingress格式\" class=\"headerlink\" title=\"Ingress格式\"></a>Ingress格式</h1><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">apiVersion</span>: extensions/v1beta1</div><div class=\"line\"><span class=\"attribute\">kind</span>: Ingress</div><div class=\"line\"><span class=\"attribute\">metadata</span>:</div><div class=\"line\">  <span class=\"attribute\">name</span>: test-ingress</div><div class=\"line\"><span class=\"attribute\">spec</span>:</div><div class=\"line\">  <span class=\"attribute\">rules</span>:</div><div class=\"line\">  - <span class=\"attribute\">http</span>:</div><div class=\"line\">      <span class=\"attribute\">paths</span>:</div><div class=\"line\">      - <span class=\"attribute\">path</span>: /testpath</div><div class=\"line\">        <span class=\"attribute\">backend</span>:</div><div class=\"line\">          <span class=\"attribute\">serviceName</span>: test</div><div class=\"line\">          <span class=\"attribute\">servicePort</span>: <span class=\"number\">80</span></div></pre></td></tr></table></figure>\n<p>每个Ingress都需要配置rules。</p>\n<p>根据Ingress Spec配置的不同，Ingress可以分为以下几种类型：</p>\n<h3 id=\"单服务Ingress\"><a href=\"#单服务Ingress\" class=\"headerlink\" title=\"单服务Ingress\"></a>单服务Ingress</h3><p>单服务Ingress即该Ingress仅指定一个没有任何规则的后端服务。<br><figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"symbol\">apiVersion:</span> extensions/v1beta1</div><div class=\"line\"><span class=\"symbol\">kind:</span> Ingress</div><div class=\"line\"><span class=\"symbol\">metadata:</span></div><div class=\"line\"><span class=\"symbol\">  name:</span> test-ingress</div><div class=\"line\"><span class=\"symbol\">spec:</span></div><div class=\"line\"><span class=\"symbol\">  backend:</span></div><div class=\"line\"><span class=\"symbol\">    serviceName:</span> testsvc</div><div class=\"line\"><span class=\"symbol\">    servicePort:</span> <span class=\"number\">80</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"路由到多服务的Ingress\"><a href=\"#路由到多服务的Ingress\" class=\"headerlink\" title=\"路由到多服务的Ingress\"></a>路由到多服务的Ingress</h3><p>路由到多服务的Ingress即根据请求路径的不同转发到不同的后端服务上，比如<br><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">apiVersion</span>: extensions/v1beta1</div><div class=\"line\"><span class=\"attribute\">kind</span>: Ingress</div><div class=\"line\"><span class=\"attribute\">metadata</span>:</div><div class=\"line\">  <span class=\"attribute\">name</span>: test</div><div class=\"line\">  <span class=\"attribute\">annotations</span>:</div><div class=\"line\">    nginx.ingress.kubernetes.io/<span class=\"attribute\">rewrite-target</span>: /</div><div class=\"line\"><span class=\"attribute\">spec</span>:</div><div class=\"line\">  <span class=\"attribute\">rules</span>:</div><div class=\"line\">  - <span class=\"attribute\">host</span>: foo.bar.com</div><div class=\"line\">    <span class=\"attribute\">http</span>:</div><div class=\"line\">      <span class=\"attribute\">paths</span>:</div><div class=\"line\">      - <span class=\"attribute\">path</span>: /foo</div><div class=\"line\">        <span class=\"attribute\">backend</span>:</div><div class=\"line\">          <span class=\"attribute\">serviceName</span>: s1</div><div class=\"line\">          <span class=\"attribute\">servicePort</span>: <span class=\"number\">80</span></div><div class=\"line\">      - <span class=\"attribute\">path</span>: /bar</div><div class=\"line\">        <span class=\"attribute\">backend</span>:</div><div class=\"line\">          <span class=\"attribute\">serviceName</span>: s2</div><div class=\"line\">          <span class=\"attribute\">servicePort</span>: <span class=\"number\">80</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"虚拟主机Ingress\"><a href=\"#虚拟主机Ingress\" class=\"headerlink\" title=\"虚拟主机Ingress\"></a>虚拟主机Ingress</h3><p>虚拟主机Ingress即根据Host header的不同转发到不同的后端服务上，如下所示<br><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">apiVersion</span>: extensions/v1beta1</div><div class=\"line\"><span class=\"attribute\">kind</span>: Ingress</div><div class=\"line\"><span class=\"attribute\">metadata</span>:</div><div class=\"line\">  <span class=\"attribute\">name</span>: test</div><div class=\"line\"><span class=\"attribute\">spec</span>:</div><div class=\"line\">  <span class=\"attribute\">rules</span>:</div><div class=\"line\">  - <span class=\"attribute\">host</span>: foo.bar.com</div><div class=\"line\">    <span class=\"attribute\">http</span>:</div><div class=\"line\">      <span class=\"attribute\">paths</span>:</div><div class=\"line\">      - <span class=\"attribute\">backend</span>:</div><div class=\"line\">          <span class=\"attribute\">serviceName</span>: s1</div><div class=\"line\">          <span class=\"attribute\">servicePort</span>: <span class=\"number\">80</span></div><div class=\"line\">  - <span class=\"attribute\">host</span>: bar.foo.com</div><div class=\"line\">    <span class=\"attribute\">http</span>:</div><div class=\"line\">      <span class=\"attribute\">paths</span>:</div><div class=\"line\">      - <span class=\"attribute\">backend</span>:</div><div class=\"line\">          <span class=\"attribute\">serviceName</span>: s2</div><div class=\"line\">          <span class=\"attribute\">servicePort</span>: <span class=\"number\">80</span></div></pre></td></tr></table></figure></p>\n<ul>\n<li>注：没有定义规则的后端服务称为默认后端服务，可以用来方便的处理404页面。</li>\n</ul>\n<p>k8s官方ingress文档：<a href=\"https://kubernetes.io/docs/concepts/services-networking/ingress/\" target=\"_blank\" rel=\"external\">https://kubernetes.io/docs/concepts/services-networking/ingress/</a></p>\n<p>traefik-ingress-controller使用：<a href=\"https://laoxianyu.cn/archives/208297ce.html\">https://laoxianyu.cn/archives/208297ce.html</a></p>\n<font color=\"#ff1201\">技术交流可加QQ群：<strong>774332965</strong><br></font>\n\n<font color=\"#ff1201\">微信订阅号同步：<strong>IT运维那点儿事</strong></font>\n\n<p><img src=\"http://dl-blog.laoxianyu.cn/weixindy.jpg\" alt=\"weixin\"></p>\n","excerpt":"<h1 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h1><p>Ingress是kubernetes1.1之后官方提出的一个标准，按照这套标准它有多种实现，比如 nginx-ingress-controller、traefik-ingress-controller、kong-ingress-controller，这3中都是官方推荐的。Ingress的出现解决了Service的短板：只能在tcp层面做负载均衡。而ingress可以方便的做http/https层面的负载均衡。一个是在4层，一个在7层。ingress就是控制客户端从入口连接到k8s集群服务的规则的集合！</p>\n<h3 id=\"ingress出现之前，服务暴露是这样的：\"><a href=\"#ingress出现之前，服务暴露是这样的：\" class=\"headerlink\" title=\"ingress出现之前，服务暴露是这样的：\"></a>ingress出现之前，服务暴露是这样的：</h3><p><img src=\"http://dl-blog.laoxianyu.cn/image2018-8-10_14-6-49.png\" alt=\"image\"></p>\n<h3 id=\"ingress出现之后，服务暴露是这样的：\"><a href=\"#ingress出现之后，服务暴露是这样的：\" class=\"headerlink\" title=\"ingress出现之后，服务暴露是这样的：\"></a>ingress出现之后，服务暴露是这样的：</h3>","more":"<p><img src=\"http://dl-blog.laoxianyu.cn/image2018-8-10_14-7-29.png\" alt=\"image\"></p>\n<p>可以给Ingress配置提供外部可访问的URL、负载均衡、SSL、基于名称的虚拟主机等。ingress-controller负责实现了ingress这套标准，一般使用的是负载均衡。</p>\n<p>使用ingress之前，必须要先部署ingress-controller，不然把ingress部署起来也没用，它不会产生实际作用。</p>\n<h1 id=\"Ingress格式\"><a href=\"#Ingress格式\" class=\"headerlink\" title=\"Ingress格式\"></a>Ingress格式</h1><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">apiVersion</span>: extensions/v1beta1</div><div class=\"line\"><span class=\"attribute\">kind</span>: Ingress</div><div class=\"line\"><span class=\"attribute\">metadata</span>:</div><div class=\"line\">  <span class=\"attribute\">name</span>: test-ingress</div><div class=\"line\"><span class=\"attribute\">spec</span>:</div><div class=\"line\">  <span class=\"attribute\">rules</span>:</div><div class=\"line\">  - <span class=\"attribute\">http</span>:</div><div class=\"line\">      <span class=\"attribute\">paths</span>:</div><div class=\"line\">      - <span class=\"attribute\">path</span>: /testpath</div><div class=\"line\">        <span class=\"attribute\">backend</span>:</div><div class=\"line\">          <span class=\"attribute\">serviceName</span>: test</div><div class=\"line\">          <span class=\"attribute\">servicePort</span>: <span class=\"number\">80</span></div></pre></td></tr></table></figure>\n<p>每个Ingress都需要配置rules。</p>\n<p>根据Ingress Spec配置的不同，Ingress可以分为以下几种类型：</p>\n<h3 id=\"单服务Ingress\"><a href=\"#单服务Ingress\" class=\"headerlink\" title=\"单服务Ingress\"></a>单服务Ingress</h3><p>单服务Ingress即该Ingress仅指定一个没有任何规则的后端服务。<br><figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"symbol\">apiVersion:</span> extensions/v1beta1</div><div class=\"line\"><span class=\"symbol\">kind:</span> Ingress</div><div class=\"line\"><span class=\"symbol\">metadata:</span></div><div class=\"line\"><span class=\"symbol\">  name:</span> test-ingress</div><div class=\"line\"><span class=\"symbol\">spec:</span></div><div class=\"line\"><span class=\"symbol\">  backend:</span></div><div class=\"line\"><span class=\"symbol\">    serviceName:</span> testsvc</div><div class=\"line\"><span class=\"symbol\">    servicePort:</span> <span class=\"number\">80</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"路由到多服务的Ingress\"><a href=\"#路由到多服务的Ingress\" class=\"headerlink\" title=\"路由到多服务的Ingress\"></a>路由到多服务的Ingress</h3><p>路由到多服务的Ingress即根据请求路径的不同转发到不同的后端服务上，比如<br><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">apiVersion</span>: extensions/v1beta1</div><div class=\"line\"><span class=\"attribute\">kind</span>: Ingress</div><div class=\"line\"><span class=\"attribute\">metadata</span>:</div><div class=\"line\">  <span class=\"attribute\">name</span>: test</div><div class=\"line\">  <span class=\"attribute\">annotations</span>:</div><div class=\"line\">    nginx.ingress.kubernetes.io/<span class=\"attribute\">rewrite-target</span>: /</div><div class=\"line\"><span class=\"attribute\">spec</span>:</div><div class=\"line\">  <span class=\"attribute\">rules</span>:</div><div class=\"line\">  - <span class=\"attribute\">host</span>: foo.bar.com</div><div class=\"line\">    <span class=\"attribute\">http</span>:</div><div class=\"line\">      <span class=\"attribute\">paths</span>:</div><div class=\"line\">      - <span class=\"attribute\">path</span>: /foo</div><div class=\"line\">        <span class=\"attribute\">backend</span>:</div><div class=\"line\">          <span class=\"attribute\">serviceName</span>: s1</div><div class=\"line\">          <span class=\"attribute\">servicePort</span>: <span class=\"number\">80</span></div><div class=\"line\">      - <span class=\"attribute\">path</span>: /bar</div><div class=\"line\">        <span class=\"attribute\">backend</span>:</div><div class=\"line\">          <span class=\"attribute\">serviceName</span>: s2</div><div class=\"line\">          <span class=\"attribute\">servicePort</span>: <span class=\"number\">80</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"虚拟主机Ingress\"><a href=\"#虚拟主机Ingress\" class=\"headerlink\" title=\"虚拟主机Ingress\"></a>虚拟主机Ingress</h3><p>虚拟主机Ingress即根据Host header的不同转发到不同的后端服务上，如下所示<br><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">apiVersion</span>: extensions/v1beta1</div><div class=\"line\"><span class=\"attribute\">kind</span>: Ingress</div><div class=\"line\"><span class=\"attribute\">metadata</span>:</div><div class=\"line\">  <span class=\"attribute\">name</span>: test</div><div class=\"line\"><span class=\"attribute\">spec</span>:</div><div class=\"line\">  <span class=\"attribute\">rules</span>:</div><div class=\"line\">  - <span class=\"attribute\">host</span>: foo.bar.com</div><div class=\"line\">    <span class=\"attribute\">http</span>:</div><div class=\"line\">      <span class=\"attribute\">paths</span>:</div><div class=\"line\">      - <span class=\"attribute\">backend</span>:</div><div class=\"line\">          <span class=\"attribute\">serviceName</span>: s1</div><div class=\"line\">          <span class=\"attribute\">servicePort</span>: <span class=\"number\">80</span></div><div class=\"line\">  - <span class=\"attribute\">host</span>: bar.foo.com</div><div class=\"line\">    <span class=\"attribute\">http</span>:</div><div class=\"line\">      <span class=\"attribute\">paths</span>:</div><div class=\"line\">      - <span class=\"attribute\">backend</span>:</div><div class=\"line\">          <span class=\"attribute\">serviceName</span>: s2</div><div class=\"line\">          <span class=\"attribute\">servicePort</span>: <span class=\"number\">80</span></div></pre></td></tr></table></figure></p>\n<ul>\n<li>注：没有定义规则的后端服务称为默认后端服务，可以用来方便的处理404页面。</li>\n</ul>\n<p>k8s官方ingress文档：<a href=\"https://kubernetes.io/docs/concepts/services-networking/ingress/\">https://kubernetes.io/docs/concepts/services-networking/ingress/</a></p>\n<p>traefik-ingress-controller使用：<a href=\"https://laoxianyu.cn/archives/208297ce.html\">https://laoxianyu.cn/archives/208297ce.html</a></p>\n<font color=#ff1201>技术交流可加QQ群：<strong>774332965</strong><br></font>\n\n<font color=#ff1201>微信订阅号同步：<strong>IT运维那点儿事</strong></font>\n\n<p><img src=\"http://dl-blog.laoxianyu.cn/weixindy.jpg\" alt=\"weixin\"></p>"},{"title":"OSI/ISO七层——TCP/IP四层","abbrlink":"2f104938","date":"2016-11-30T08:31:48.000Z","_content":"\nOSI：一个国际组织\nISO：OSI提出的网络的7层架构\n\nTCP：传输控制协议<!-- more -->\nIP：数据报协议\nTCP/IP：TCP/IP为很大的一个协议族，里面包含了非常多的协议。如：TCP、IP、UDP、ARP、ICMP、RARP、IGMP......\n\n他们的对应关系如下图所示：\n![TCP/IP---OSI/ISO](http://dl-blog.laoxianyu.cn/TCP%E5%92%8COSI.png)\n\n<font color=#ff1201>技术交流可加QQ群：**774332965**<br></font>\n\n<font color=#ff1201>微信订阅号同步：**IT运维那点儿事**</font>\n\n![weixin](http://dl-blog.laoxianyu.cn/weixindy.jpg)\n\n","source":"_posts/OSI-ISO七层.md","raw":"---\ntitle: OSI/ISO七层——TCP/IP四层\ntags: TCP/IP\nabbrlink: 2f104938\ndate: 2016-11-30 16:31:48\ncategories: [网络]\n---\n\nOSI：一个国际组织\nISO：OSI提出的网络的7层架构\n\nTCP：传输控制协议<!-- more -->\nIP：数据报协议\nTCP/IP：TCP/IP为很大的一个协议族，里面包含了非常多的协议。如：TCP、IP、UDP、ARP、ICMP、RARP、IGMP......\n\n他们的对应关系如下图所示：\n![TCP/IP---OSI/ISO](http://dl-blog.laoxianyu.cn/TCP%E5%92%8COSI.png)\n\n<font color=#ff1201>技术交流可加QQ群：**774332965**<br></font>\n\n<font color=#ff1201>微信订阅号同步：**IT运维那点儿事**</font>\n\n![weixin](http://dl-blog.laoxianyu.cn/weixindy.jpg)\n\n","slug":"OSI-ISO七层","published":1,"updated":"2019-03-09T15:46:09.098Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt1o6ygb000d9symptjf590j","content":"<p>OSI：一个国际组织<br>ISO：OSI提出的网络的7层架构</p>\n<p>TCP：传输控制协议<a id=\"more\"></a><br>IP：数据报协议<br>TCP/IP：TCP/IP为很大的一个协议族，里面包含了非常多的协议。如：TCP、IP、UDP、ARP、ICMP、RARP、IGMP……</p>\n<p>他们的对应关系如下图所示：<br><img src=\"http://dl-blog.laoxianyu.cn/TCP%E5%92%8COSI.png\" alt=\"TCP/IP---OSI/ISO\"></p>\n<font color=\"#ff1201\">技术交流可加QQ群：<strong>774332965</strong><br></font>\n\n<font color=\"#ff1201\">微信订阅号同步：<strong>IT运维那点儿事</strong></font>\n\n<p><img src=\"http://dl-blog.laoxianyu.cn/weixindy.jpg\" alt=\"weixin\"></p>\n","excerpt":"<p>OSI：一个国际组织<br>ISO：OSI提出的网络的7层架构</p>\n<p>TCP：传输控制协议","more":"<br>IP：数据报协议<br>TCP/IP：TCP/IP为很大的一个协议族，里面包含了非常多的协议。如：TCP、IP、UDP、ARP、ICMP、RARP、IGMP……</p>\n<p>他们的对应关系如下图所示：<br><img src=\"http://dl-blog.laoxianyu.cn/TCP%E5%92%8COSI.png\" alt=\"TCP/IP---OSI/ISO\"></p>\n<font color=#ff1201>技术交流可加QQ群：<strong>774332965</strong><br></font>\n\n<font color=#ff1201>微信订阅号同步：<strong>IT运维那点儿事</strong></font>\n\n<p><img src=\"http://dl-blog.laoxianyu.cn/weixindy.jpg\" alt=\"weixin\"></p>"},{"title":"OSI七层协议详细讲解","abbrlink":"7a3dfa9","date":"2016-12-05T02:20:05.000Z","_content":"今天我们从高到低依次来讲解。\n可能有些人不是很详细的了解OSI各层所对应的协议，之前我也不是很了解，所以就把每层对应的协议也一起写在了每层的最后\n\n## 应用层\n<!-- more -->\n__主要功能__：就是处理网络应用。比如文件传输、电子邮件、文件服务、虚拟终端\n__详细说明__：直接为服务端服务，提供各类应用过程的接口和用户接口。例如HTTP、TELNET、FTP、SMTP、DNS、NFS等\n__对应TCP/IP协议族协议__：TFTP、HTTP、SNMP、FTP、SMTP、DNS、TELNET\n\n## 表示层\n__主要功能__：数据的表示。比如数据格式化、代码转换、数据加密\n__详细说明__：使应用层可以根据其服务解释数据的含义。通常包括数据的编码的约定、本地语法的转换。例如JPEG、ASCII、GIF、MPEG\n__对应TCP/IP协议族协议__：注意，注意。没有协议\n\n## 会话层\n__主要功能__：互联主机的通信。解除或建立与别的节点的联系\n__详细说明__：负者管理远程用户或进程间的通信，通常包括通信控制、检查点设置、重建终端的传输链路、名字查找和安全验证服务。例如RPC和SQL等\n__对应TCP/IP协议族协议__：注意，注意。没有协议\n\n## 传输层\n__主要功能__：端到端连接。提供端到端的接口来发送和接收数据\n__详细说明__：实现发送端和接收端的端到端的数据分组传送，负者保证实现数据包的无差错、无丢失、无冗余和按顺序地传输。其服务的访问点为端口。\n__对应TCP/IP协议族协议__：TCP、UDP\n\n## 网络层\n__主要功能__：分组传输和路由选择。为数据包选择路由\n__详细说明__：通过网络连接交换传输层实体发出的数据，解决路由选择、网络拥塞的问题。服务访问的点为网络地址（IP地址）\n__对应TCP/IP协议族协议__：IP、ICMP、IGMP、OSPF\n\n## 数据链路层\n__主要功能__：传输以帧为单位的信息。传输有地址的帧以及错误检测功能\n__详细说明__：建立、维护和释放网络实体之间的数据链路，把流量控制和差错控制合并在一起，实现帧同步。服务访问点为MAC地址。\n__对应TCP/IP协议族协议__：PPP、MTU、SLIP、CSLIP、ARP、RARP（这里的ARP和RARP协议有争论，有人说ARP、RAP是网络层的协议，又有人说是这层的协议。其实ARP和RARP应该是属于网络层，但是它的工作内容确实这层的，所以我这里就把它归在这层了）\n\n## 物理层\n__主要功能__：二进制位传输。以二进制数据形式在物理媒体上传输数据，就是二进制流\n__详细说明__：通过一系列协议定义了通信设备的机械、电器、功能及规程特征\n__对应TCP/IP协议族协议__：IEEE802\n\n\n好，到这儿应该对OSI各层的作用和所使用的的协议有大概的了解了吧！\n\n\n\n<font color=#ff1201>技术交流可加QQ群：**774332965**<br></font>\n\n<font color=#ff1201>微信订阅号同步：**IT运维那点儿事**</font>\n\n![weixin](http://dl-blog.laoxianyu.cn/weixindy.jpg)\n\n","source":"_posts/OSI七层协议详细讲解.md","raw":"---\ntitle: OSI七层协议详细讲解\ntags: TCP/IP\nabbrlink: 7a3dfa9\ndate: 2016-12-05 10:20:05\ncategories: [网络]\n---\n今天我们从高到低依次来讲解。\n可能有些人不是很详细的了解OSI各层所对应的协议，之前我也不是很了解，所以就把每层对应的协议也一起写在了每层的最后\n\n## 应用层\n<!-- more -->\n__主要功能__：就是处理网络应用。比如文件传输、电子邮件、文件服务、虚拟终端\n__详细说明__：直接为服务端服务，提供各类应用过程的接口和用户接口。例如HTTP、TELNET、FTP、SMTP、DNS、NFS等\n__对应TCP/IP协议族协议__：TFTP、HTTP、SNMP、FTP、SMTP、DNS、TELNET\n\n## 表示层\n__主要功能__：数据的表示。比如数据格式化、代码转换、数据加密\n__详细说明__：使应用层可以根据其服务解释数据的含义。通常包括数据的编码的约定、本地语法的转换。例如JPEG、ASCII、GIF、MPEG\n__对应TCP/IP协议族协议__：注意，注意。没有协议\n\n## 会话层\n__主要功能__：互联主机的通信。解除或建立与别的节点的联系\n__详细说明__：负者管理远程用户或进程间的通信，通常包括通信控制、检查点设置、重建终端的传输链路、名字查找和安全验证服务。例如RPC和SQL等\n__对应TCP/IP协议族协议__：注意，注意。没有协议\n\n## 传输层\n__主要功能__：端到端连接。提供端到端的接口来发送和接收数据\n__详细说明__：实现发送端和接收端的端到端的数据分组传送，负者保证实现数据包的无差错、无丢失、无冗余和按顺序地传输。其服务的访问点为端口。\n__对应TCP/IP协议族协议__：TCP、UDP\n\n## 网络层\n__主要功能__：分组传输和路由选择。为数据包选择路由\n__详细说明__：通过网络连接交换传输层实体发出的数据，解决路由选择、网络拥塞的问题。服务访问的点为网络地址（IP地址）\n__对应TCP/IP协议族协议__：IP、ICMP、IGMP、OSPF\n\n## 数据链路层\n__主要功能__：传输以帧为单位的信息。传输有地址的帧以及错误检测功能\n__详细说明__：建立、维护和释放网络实体之间的数据链路，把流量控制和差错控制合并在一起，实现帧同步。服务访问点为MAC地址。\n__对应TCP/IP协议族协议__：PPP、MTU、SLIP、CSLIP、ARP、RARP（这里的ARP和RARP协议有争论，有人说ARP、RAP是网络层的协议，又有人说是这层的协议。其实ARP和RARP应该是属于网络层，但是它的工作内容确实这层的，所以我这里就把它归在这层了）\n\n## 物理层\n__主要功能__：二进制位传输。以二进制数据形式在物理媒体上传输数据，就是二进制流\n__详细说明__：通过一系列协议定义了通信设备的机械、电器、功能及规程特征\n__对应TCP/IP协议族协议__：IEEE802\n\n\n好，到这儿应该对OSI各层的作用和所使用的的协议有大概的了解了吧！\n\n\n\n<font color=#ff1201>技术交流可加QQ群：**774332965**<br></font>\n\n<font color=#ff1201>微信订阅号同步：**IT运维那点儿事**</font>\n\n![weixin](http://dl-blog.laoxianyu.cn/weixindy.jpg)\n\n","slug":"OSI七层协议详细讲解","published":1,"updated":"2019-03-09T15:46:09.098Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt1o6ygf000g9symruudcdws","content":"<p>今天我们从高到低依次来讲解。<br>可能有些人不是很详细的了解OSI各层所对应的协议，之前我也不是很了解，所以就把每层对应的协议也一起写在了每层的最后</p>\n<h2 id=\"应用层\"><a href=\"#应用层\" class=\"headerlink\" title=\"应用层\"></a>应用层</h2><a id=\"more\"></a>\n<p><strong>主要功能</strong>：就是处理网络应用。比如文件传输、电子邮件、文件服务、虚拟终端<br><strong>详细说明</strong>：直接为服务端服务，提供各类应用过程的接口和用户接口。例如HTTP、TELNET、FTP、SMTP、DNS、NFS等<br><strong>对应TCP/IP协议族协议</strong>：TFTP、HTTP、SNMP、FTP、SMTP、DNS、TELNET</p>\n<h2 id=\"表示层\"><a href=\"#表示层\" class=\"headerlink\" title=\"表示层\"></a>表示层</h2><p><strong>主要功能</strong>：数据的表示。比如数据格式化、代码转换、数据加密<br><strong>详细说明</strong>：使应用层可以根据其服务解释数据的含义。通常包括数据的编码的约定、本地语法的转换。例如JPEG、ASCII、GIF、MPEG<br><strong>对应TCP/IP协议族协议</strong>：注意，注意。没有协议</p>\n<h2 id=\"会话层\"><a href=\"#会话层\" class=\"headerlink\" title=\"会话层\"></a>会话层</h2><p><strong>主要功能</strong>：互联主机的通信。解除或建立与别的节点的联系<br><strong>详细说明</strong>：负者管理远程用户或进程间的通信，通常包括通信控制、检查点设置、重建终端的传输链路、名字查找和安全验证服务。例如RPC和SQL等<br><strong>对应TCP/IP协议族协议</strong>：注意，注意。没有协议</p>\n<h2 id=\"传输层\"><a href=\"#传输层\" class=\"headerlink\" title=\"传输层\"></a>传输层</h2><p><strong>主要功能</strong>：端到端连接。提供端到端的接口来发送和接收数据<br><strong>详细说明</strong>：实现发送端和接收端的端到端的数据分组传送，负者保证实现数据包的无差错、无丢失、无冗余和按顺序地传输。其服务的访问点为端口。<br><strong>对应TCP/IP协议族协议</strong>：TCP、UDP</p>\n<h2 id=\"网络层\"><a href=\"#网络层\" class=\"headerlink\" title=\"网络层\"></a>网络层</h2><p><strong>主要功能</strong>：分组传输和路由选择。为数据包选择路由<br><strong>详细说明</strong>：通过网络连接交换传输层实体发出的数据，解决路由选择、网络拥塞的问题。服务访问的点为网络地址（IP地址）<br><strong>对应TCP/IP协议族协议</strong>：IP、ICMP、IGMP、OSPF</p>\n<h2 id=\"数据链路层\"><a href=\"#数据链路层\" class=\"headerlink\" title=\"数据链路层\"></a>数据链路层</h2><p><strong>主要功能</strong>：传输以帧为单位的信息。传输有地址的帧以及错误检测功能<br><strong>详细说明</strong>：建立、维护和释放网络实体之间的数据链路，把流量控制和差错控制合并在一起，实现帧同步。服务访问点为MAC地址。<br><strong>对应TCP/IP协议族协议</strong>：PPP、MTU、SLIP、CSLIP、ARP、RARP（这里的ARP和RARP协议有争论，有人说ARP、RAP是网络层的协议，又有人说是这层的协议。其实ARP和RARP应该是属于网络层，但是它的工作内容确实这层的，所以我这里就把它归在这层了）</p>\n<h2 id=\"物理层\"><a href=\"#物理层\" class=\"headerlink\" title=\"物理层\"></a>物理层</h2><p><strong>主要功能</strong>：二进制位传输。以二进制数据形式在物理媒体上传输数据，就是二进制流<br><strong>详细说明</strong>：通过一系列协议定义了通信设备的机械、电器、功能及规程特征<br><strong>对应TCP/IP协议族协议</strong>：IEEE802</p>\n<p>好，到这儿应该对OSI各层的作用和所使用的的协议有大概的了解了吧！</p>\n<font color=\"#ff1201\">技术交流可加QQ群：<strong>774332965</strong><br></font>\n\n<font color=\"#ff1201\">微信订阅号同步：<strong>IT运维那点儿事</strong></font>\n\n<p><img src=\"http://dl-blog.laoxianyu.cn/weixindy.jpg\" alt=\"weixin\"></p>\n","excerpt":"<p>今天我们从高到低依次来讲解。<br>可能有些人不是很详细的了解OSI各层所对应的协议，之前我也不是很了解，所以就把每层对应的协议也一起写在了每层的最后</p>\n<h2 id=\"应用层\"><a href=\"#应用层\" class=\"headerlink\" title=\"应用层\"></a>应用层</h2>","more":"<p><strong>主要功能</strong>：就是处理网络应用。比如文件传输、电子邮件、文件服务、虚拟终端<br><strong>详细说明</strong>：直接为服务端服务，提供各类应用过程的接口和用户接口。例如HTTP、TELNET、FTP、SMTP、DNS、NFS等<br><strong>对应TCP/IP协议族协议</strong>：TFTP、HTTP、SNMP、FTP、SMTP、DNS、TELNET</p>\n<h2 id=\"表示层\"><a href=\"#表示层\" class=\"headerlink\" title=\"表示层\"></a>表示层</h2><p><strong>主要功能</strong>：数据的表示。比如数据格式化、代码转换、数据加密<br><strong>详细说明</strong>：使应用层可以根据其服务解释数据的含义。通常包括数据的编码的约定、本地语法的转换。例如JPEG、ASCII、GIF、MPEG<br><strong>对应TCP/IP协议族协议</strong>：注意，注意。没有协议</p>\n<h2 id=\"会话层\"><a href=\"#会话层\" class=\"headerlink\" title=\"会话层\"></a>会话层</h2><p><strong>主要功能</strong>：互联主机的通信。解除或建立与别的节点的联系<br><strong>详细说明</strong>：负者管理远程用户或进程间的通信，通常包括通信控制、检查点设置、重建终端的传输链路、名字查找和安全验证服务。例如RPC和SQL等<br><strong>对应TCP/IP协议族协议</strong>：注意，注意。没有协议</p>\n<h2 id=\"传输层\"><a href=\"#传输层\" class=\"headerlink\" title=\"传输层\"></a>传输层</h2><p><strong>主要功能</strong>：端到端连接。提供端到端的接口来发送和接收数据<br><strong>详细说明</strong>：实现发送端和接收端的端到端的数据分组传送，负者保证实现数据包的无差错、无丢失、无冗余和按顺序地传输。其服务的访问点为端口。<br><strong>对应TCP/IP协议族协议</strong>：TCP、UDP</p>\n<h2 id=\"网络层\"><a href=\"#网络层\" class=\"headerlink\" title=\"网络层\"></a>网络层</h2><p><strong>主要功能</strong>：分组传输和路由选择。为数据包选择路由<br><strong>详细说明</strong>：通过网络连接交换传输层实体发出的数据，解决路由选择、网络拥塞的问题。服务访问的点为网络地址（IP地址）<br><strong>对应TCP/IP协议族协议</strong>：IP、ICMP、IGMP、OSPF</p>\n<h2 id=\"数据链路层\"><a href=\"#数据链路层\" class=\"headerlink\" title=\"数据链路层\"></a>数据链路层</h2><p><strong>主要功能</strong>：传输以帧为单位的信息。传输有地址的帧以及错误检测功能<br><strong>详细说明</strong>：建立、维护和释放网络实体之间的数据链路，把流量控制和差错控制合并在一起，实现帧同步。服务访问点为MAC地址。<br><strong>对应TCP/IP协议族协议</strong>：PPP、MTU、SLIP、CSLIP、ARP、RARP（这里的ARP和RARP协议有争论，有人说ARP、RAP是网络层的协议，又有人说是这层的协议。其实ARP和RARP应该是属于网络层，但是它的工作内容确实这层的，所以我这里就把它归在这层了）</p>\n<h2 id=\"物理层\"><a href=\"#物理层\" class=\"headerlink\" title=\"物理层\"></a>物理层</h2><p><strong>主要功能</strong>：二进制位传输。以二进制数据形式在物理媒体上传输数据，就是二进制流<br><strong>详细说明</strong>：通过一系列协议定义了通信设备的机械、电器、功能及规程特征<br><strong>对应TCP/IP协议族协议</strong>：IEEE802</p>\n<p>好，到这儿应该对OSI各层的作用和所使用的的协议有大概的了解了吧！</p>\n<font color=#ff1201>技术交流可加QQ群：<strong>774332965</strong><br></font>\n\n<font color=#ff1201>微信订阅号同步：<strong>IT运维那点儿事</strong></font>\n\n<p><img src=\"http://dl-blog.laoxianyu.cn/weixindy.jpg\" alt=\"weixin\"></p>"},{"title":"TTL","abbrlink":"3549ca95","date":"2016-11-22T15:32:39.000Z","_content":"\n#### 什么是TTL？\n\t就是用来记录IP数据包从发出经过了多少路由！\n\tTTL占8bit，所以它的最大值就是255；每当数据包经过一个路由器时，TTL的值就会减1，当为0时，就把这个数据包给丢弃。较老的系统的TTL初始化值为15或32，现在一般的为255。\n\n#### 为什么需要TTL？\n\t为了防止IP数据包在选路时无休止的在网络中流动。\n\n------\n<!-- more -->\n__Traceroute成功利用了TTL__\n*Traceroute*：路由探测工具，用它可以知道从源地址到目的地址需要经过哪些路由器\n*使用方法*：Traceroute 域名 / IP，你使用的时候可能会看到很多的 '\\*'，这是正常的，因为国内的网络环境有很多都是隐蔽的。\n*原理*：\n\n\t我们现在可以猜想一下Traceroute程序的操作过程。它发送一份TTL字段为1的IP数据报给目的主机。处理这份数据报的第一个路由器将TTL值减1，丢弃该数据报，并发回一份超时ICMP报文。这样就得到了该路径中的第一个路由器的地址。然后Traceroute程序发送一份TTL值为2的数据报，这样我们就可以得到第二个路由器的地址。继续这个过程直至该数据报到达目的主机。但是目的主机哪怕接收到TTL值为1的IP数据报，也不会丢弃该数据报并产生一份超时ICMP报文，这是因为数据报已经到达其最终目的地。\n\n*那么我们该如何判断是否已经到达目的主机了呢*？\n\n\tTraceroute程序发送一份UDP数据报给目的主机，但它选择一个不可能的值作为UDP端口号（大于30000），使目的主机的任何一个应用程序都不可能使用该端口。因为，当该数据报到达时，将使目的主机的UDP模块产生一份“端口不可达”错误的ICMP报文。这样，Traceroute程序所要做的就是区分接收到的ICMP报文是超时还是端口不可达，以判断什么时候结束。\n\n看到这儿，是不是觉得Traceroute有点老奸巨猾呢？没错，就是的！\n\n\n\n<font color=#ff1201>技术交流可加QQ群：**774332965**<br></font>\n\n<font color=#ff1201>微信订阅号同步：**IT运维那点儿事**</font>\n\n![weixin](http://dl-blog.laoxianyu.cn/weixindy.jpg)\n\n","source":"_posts/TTL.md","raw":"---\ntitle: TTL\ntags: TCP/IP\nabbrlink: 3549ca95\ndate: 2016-11-22 23:32:39\ncategories: [网络]\n---\n\n#### 什么是TTL？\n\t就是用来记录IP数据包从发出经过了多少路由！\n\tTTL占8bit，所以它的最大值就是255；每当数据包经过一个路由器时，TTL的值就会减1，当为0时，就把这个数据包给丢弃。较老的系统的TTL初始化值为15或32，现在一般的为255。\n\n#### 为什么需要TTL？\n\t为了防止IP数据包在选路时无休止的在网络中流动。\n\n------\n<!-- more -->\n__Traceroute成功利用了TTL__\n*Traceroute*：路由探测工具，用它可以知道从源地址到目的地址需要经过哪些路由器\n*使用方法*：Traceroute 域名 / IP，你使用的时候可能会看到很多的 '\\*'，这是正常的，因为国内的网络环境有很多都是隐蔽的。\n*原理*：\n\n\t我们现在可以猜想一下Traceroute程序的操作过程。它发送一份TTL字段为1的IP数据报给目的主机。处理这份数据报的第一个路由器将TTL值减1，丢弃该数据报，并发回一份超时ICMP报文。这样就得到了该路径中的第一个路由器的地址。然后Traceroute程序发送一份TTL值为2的数据报，这样我们就可以得到第二个路由器的地址。继续这个过程直至该数据报到达目的主机。但是目的主机哪怕接收到TTL值为1的IP数据报，也不会丢弃该数据报并产生一份超时ICMP报文，这是因为数据报已经到达其最终目的地。\n\n*那么我们该如何判断是否已经到达目的主机了呢*？\n\n\tTraceroute程序发送一份UDP数据报给目的主机，但它选择一个不可能的值作为UDP端口号（大于30000），使目的主机的任何一个应用程序都不可能使用该端口。因为，当该数据报到达时，将使目的主机的UDP模块产生一份“端口不可达”错误的ICMP报文。这样，Traceroute程序所要做的就是区分接收到的ICMP报文是超时还是端口不可达，以判断什么时候结束。\n\n看到这儿，是不是觉得Traceroute有点老奸巨猾呢？没错，就是的！\n\n\n\n<font color=#ff1201>技术交流可加QQ群：**774332965**<br></font>\n\n<font color=#ff1201>微信订阅号同步：**IT运维那点儿事**</font>\n\n![weixin](http://dl-blog.laoxianyu.cn/weixindy.jpg)\n\n","slug":"TTL","published":1,"updated":"2019-03-09T15:46:09.098Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt1o6ygj000l9symqtg4wjl8","content":"<h4 id=\"什么是TTL？\"><a href=\"#什么是TTL？\" class=\"headerlink\" title=\"什么是TTL？\"></a>什么是TTL？</h4><pre><code>就是用来记录IP数据包从发出经过了多少路由！\nTTL占8bit，所以它的最大值就是255；每当数据包经过一个路由器时，TTL的值就会减1，当为0时，就把这个数据包给丢弃。较老的系统的TTL初始化值为15或32，现在一般的为255。\n</code></pre><h4 id=\"为什么需要TTL？\"><a href=\"#为什么需要TTL？\" class=\"headerlink\" title=\"为什么需要TTL？\"></a>为什么需要TTL？</h4><pre><code>为了防止IP数据包在选路时无休止的在网络中流动。\n</code></pre><hr>\n<a id=\"more\"></a>\n<p><strong>Traceroute成功利用了TTL</strong><br><em>Traceroute</em>：路由探测工具，用它可以知道从源地址到目的地址需要经过哪些路由器<br><em>使用方法</em>：Traceroute 域名 / IP，你使用的时候可能会看到很多的 ‘*‘，这是正常的，因为国内的网络环境有很多都是隐蔽的。<br><em>原理</em>：</p>\n<pre><code>我们现在可以猜想一下Traceroute程序的操作过程。它发送一份TTL字段为1的IP数据报给目的主机。处理这份数据报的第一个路由器将TTL值减1，丢弃该数据报，并发回一份超时ICMP报文。这样就得到了该路径中的第一个路由器的地址。然后Traceroute程序发送一份TTL值为2的数据报，这样我们就可以得到第二个路由器的地址。继续这个过程直至该数据报到达目的主机。但是目的主机哪怕接收到TTL值为1的IP数据报，也不会丢弃该数据报并产生一份超时ICMP报文，这是因为数据报已经到达其最终目的地。\n</code></pre><p><em>那么我们该如何判断是否已经到达目的主机了呢</em>？</p>\n<pre><code>Traceroute程序发送一份UDP数据报给目的主机，但它选择一个不可能的值作为UDP端口号（大于30000），使目的主机的任何一个应用程序都不可能使用该端口。因为，当该数据报到达时，将使目的主机的UDP模块产生一份“端口不可达”错误的ICMP报文。这样，Traceroute程序所要做的就是区分接收到的ICMP报文是超时还是端口不可达，以判断什么时候结束。\n</code></pre><p>看到这儿，是不是觉得Traceroute有点老奸巨猾呢？没错，就是的！</p>\n<font color=\"#ff1201\">技术交流可加QQ群：<strong>774332965</strong><br></font>\n\n<font color=\"#ff1201\">微信订阅号同步：<strong>IT运维那点儿事</strong></font>\n\n<p><img src=\"http://dl-blog.laoxianyu.cn/weixindy.jpg\" alt=\"weixin\"></p>\n","excerpt":"<h4 id=\"什么是TTL？\"><a href=\"#什么是TTL？\" class=\"headerlink\" title=\"什么是TTL？\"></a>什么是TTL？</h4><pre><code>就是用来记录IP数据包从发出经过了多少路由！\nTTL占8bit，所以它的最大值就是255；每当数据包经过一个路由器时，TTL的值就会减1，当为0时，就把这个数据包给丢弃。较老的系统的TTL初始化值为15或32，现在一般的为255。\n</code></pre><h4 id=\"为什么需要TTL？\"><a href=\"#为什么需要TTL？\" class=\"headerlink\" title=\"为什么需要TTL？\"></a>为什么需要TTL？</h4><pre><code>为了防止IP数据包在选路时无休止的在网络中流动。\n</code></pre><hr>","more":"<p><strong>Traceroute成功利用了TTL</strong><br><em>Traceroute</em>：路由探测工具，用它可以知道从源地址到目的地址需要经过哪些路由器<br><em>使用方法</em>：Traceroute 域名 / IP，你使用的时候可能会看到很多的 ‘*‘，这是正常的，因为国内的网络环境有很多都是隐蔽的。<br><em>原理</em>：</p>\n<pre><code>我们现在可以猜想一下Traceroute程序的操作过程。它发送一份TTL字段为1的IP数据报给目的主机。处理这份数据报的第一个路由器将TTL值减1，丢弃该数据报，并发回一份超时ICMP报文。这样就得到了该路径中的第一个路由器的地址。然后Traceroute程序发送一份TTL值为2的数据报，这样我们就可以得到第二个路由器的地址。继续这个过程直至该数据报到达目的主机。但是目的主机哪怕接收到TTL值为1的IP数据报，也不会丢弃该数据报并产生一份超时ICMP报文，这是因为数据报已经到达其最终目的地。\n</code></pre><p><em>那么我们该如何判断是否已经到达目的主机了呢</em>？</p>\n<pre><code>Traceroute程序发送一份UDP数据报给目的主机，但它选择一个不可能的值作为UDP端口号（大于30000），使目的主机的任何一个应用程序都不可能使用该端口。因为，当该数据报到达时，将使目的主机的UDP模块产生一份“端口不可达”错误的ICMP报文。这样，Traceroute程序所要做的就是区分接收到的ICMP报文是超时还是端口不可达，以判断什么时候结束。\n</code></pre><p>看到这儿，是不是觉得Traceroute有点老奸巨猾呢？没错，就是的！</p>\n<font color=#ff1201>技术交流可加QQ群：<strong>774332965</strong><br></font>\n\n<font color=#ff1201>微信订阅号同步：<strong>IT运维那点儿事</strong></font>\n\n<p><img src=\"http://dl-blog.laoxianyu.cn/weixindy.jpg\" alt=\"weixin\"></p>"},{"title":"cache和buffer的区别","abbrlink":"7942b68e","date":"2016-11-19T15:46:50.000Z","_content":"\n*Cache：高速缓存*\n*Buffer：高速缓冲*\n\n相同之处：都是用于解决不同主件速度不匹配的问题。\n<!-- more -->\n\n\tCache：是用于解决CPU和内存的速度不匹配的。因为CPU每次都是从内存当中提取数据，而且CPU的速度远远高于内存的速度，CPU从内存读取数据时就会等待很长的时间；Cache就保存着CPU刚刚使用过的数据或者经常用到的数据，这时CPU从Cache中提取数据就会快很多，这样减少了CPU的等待时间，提升了系统性能。\n所以说Cache是位于 CPU和内存 之间的容量较小但速度很快的存储器。\n\n\tBuffer：主要是用于解决速度不同的设备之间的传输问题。一般会用在磁盘之间；比如一个USB2.0的磁盘要拷贝文件到一个USB3.0的磁盘，很明显3.0的速度要远比2.0的快得多，如果3.0的一直去读取2.0的数据的话，那这样就会浪费它的速度优势；所以可以先把存储速度慢的数据先放到Buffer里面，当达到一定程度时，存储速度快的就从Buffer里面将数据取出来；这样便可以大大的提高利用率。\n所以说Buffer是位于存储速度不同步的设备之间的一个缓冲区。\n\n\n<font color=#ff1201>技术交流可加QQ群：**774332965**<br></font>\n\n<font color=#ff1201>微信订阅号同步：**IT运维那点儿事**</font>\n\n![weixin](http://dl-blog.laoxianyu.cn/weixindy.jpg)\n\n","source":"_posts/cache-buffer.md","raw":"---\ntitle: cache和buffer的区别\ntags: 操作系统\nabbrlink: 7942b68e\ndate: 2016-11-19 23:46:50\ncategories: 运维\n---\n\n*Cache：高速缓存*\n*Buffer：高速缓冲*\n\n相同之处：都是用于解决不同主件速度不匹配的问题。\n<!-- more -->\n\n\tCache：是用于解决CPU和内存的速度不匹配的。因为CPU每次都是从内存当中提取数据，而且CPU的速度远远高于内存的速度，CPU从内存读取数据时就会等待很长的时间；Cache就保存着CPU刚刚使用过的数据或者经常用到的数据，这时CPU从Cache中提取数据就会快很多，这样减少了CPU的等待时间，提升了系统性能。\n所以说Cache是位于 CPU和内存 之间的容量较小但速度很快的存储器。\n\n\tBuffer：主要是用于解决速度不同的设备之间的传输问题。一般会用在磁盘之间；比如一个USB2.0的磁盘要拷贝文件到一个USB3.0的磁盘，很明显3.0的速度要远比2.0的快得多，如果3.0的一直去读取2.0的数据的话，那这样就会浪费它的速度优势；所以可以先把存储速度慢的数据先放到Buffer里面，当达到一定程度时，存储速度快的就从Buffer里面将数据取出来；这样便可以大大的提高利用率。\n所以说Buffer是位于存储速度不同步的设备之间的一个缓冲区。\n\n\n<font color=#ff1201>技术交流可加QQ群：**774332965**<br></font>\n\n<font color=#ff1201>微信订阅号同步：**IT运维那点儿事**</font>\n\n![weixin](http://dl-blog.laoxianyu.cn/weixindy.jpg)\n\n","slug":"cache-buffer","published":1,"updated":"2019-03-09T15:46:09.098Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt1o6ygl000o9symiq74xhrm","content":"<p><em>Cache：高速缓存</em><br><em>Buffer：高速缓冲</em></p>\n<p>相同之处：都是用于解决不同主件速度不匹配的问题。<br><a id=\"more\"></a></p>\n<pre><code>Cache：是用于解决CPU和内存的速度不匹配的。因为CPU每次都是从内存当中提取数据，而且CPU的速度远远高于内存的速度，CPU从内存读取数据时就会等待很长的时间；Cache就保存着CPU刚刚使用过的数据或者经常用到的数据，这时CPU从Cache中提取数据就会快很多，这样减少了CPU的等待时间，提升了系统性能。\n</code></pre><p>所以说Cache是位于 CPU和内存 之间的容量较小但速度很快的存储器。</p>\n<pre><code>Buffer：主要是用于解决速度不同的设备之间的传输问题。一般会用在磁盘之间；比如一个USB2.0的磁盘要拷贝文件到一个USB3.0的磁盘，很明显3.0的速度要远比2.0的快得多，如果3.0的一直去读取2.0的数据的话，那这样就会浪费它的速度优势；所以可以先把存储速度慢的数据先放到Buffer里面，当达到一定程度时，存储速度快的就从Buffer里面将数据取出来；这样便可以大大的提高利用率。\n</code></pre><p>所以说Buffer是位于存储速度不同步的设备之间的一个缓冲区。</p>\n<font color=\"#ff1201\">技术交流可加QQ群：<strong>774332965</strong><br></font>\n\n<font color=\"#ff1201\">微信订阅号同步：<strong>IT运维那点儿事</strong></font>\n\n<p><img src=\"http://dl-blog.laoxianyu.cn/weixindy.jpg\" alt=\"weixin\"></p>\n","excerpt":"<p><em>Cache：高速缓存</em><br><em>Buffer：高速缓冲</em></p>\n<p>相同之处：都是用于解决不同主件速度不匹配的问题。<br>","more":"</p>\n<pre><code>Cache：是用于解决CPU和内存的速度不匹配的。因为CPU每次都是从内存当中提取数据，而且CPU的速度远远高于内存的速度，CPU从内存读取数据时就会等待很长的时间；Cache就保存着CPU刚刚使用过的数据或者经常用到的数据，这时CPU从Cache中提取数据就会快很多，这样减少了CPU的等待时间，提升了系统性能。\n</code></pre><p>所以说Cache是位于 CPU和内存 之间的容量较小但速度很快的存储器。</p>\n<pre><code>Buffer：主要是用于解决速度不同的设备之间的传输问题。一般会用在磁盘之间；比如一个USB2.0的磁盘要拷贝文件到一个USB3.0的磁盘，很明显3.0的速度要远比2.0的快得多，如果3.0的一直去读取2.0的数据的话，那这样就会浪费它的速度优势；所以可以先把存储速度慢的数据先放到Buffer里面，当达到一定程度时，存储速度快的就从Buffer里面将数据取出来；这样便可以大大的提高利用率。\n</code></pre><p>所以说Buffer是位于存储速度不同步的设备之间的一个缓冲区。</p>\n<font color=#ff1201>技术交流可加QQ群：<strong>774332965</strong><br></font>\n\n<font color=#ff1201>微信订阅号同步：<strong>IT运维那点儿事</strong></font>\n\n<p><img src=\"http://dl-blog.laoxianyu.cn/weixindy.jpg\" alt=\"weixin\"></p>"},{"title":"Hello World","abbrlink":"4a17b156","date":"2016-10-09T16:00:00.000Z","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n<!-- more -->\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n\n\n<font color=#ff1201>技术交流可加QQ群：**774332965**<br></font>\n\n<font color=#ff1201>微信订阅号同步：**IT运维那点儿事**</font>\n\n![weixin](http://dl-blog.laoxianyu.cn/weixindy.jpg)\n\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\nabbrlink: 4a17b156\ndate: 2016-10-10 00:00:00\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n<!-- more -->\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n\n\n<font color=#ff1201>技术交流可加QQ群：**774332965**<br></font>\n\n<font color=#ff1201>微信订阅号同步：**IT运维那点儿事**</font>\n\n![weixin](http://dl-blog.laoxianyu.cn/weixindy.jpg)\n\n","slug":"hello-world","published":1,"updated":"2019-03-09T15:46:09.098Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt1o6ygp000t9symxsoy0kl0","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.<br><a id=\"more\"></a></p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n<font color=\"#ff1201\">技术交流可加QQ群：<strong>774332965</strong><br></font>\n\n<font color=\"#ff1201\">微信订阅号同步：<strong>IT运维那点儿事</strong></font>\n\n<p><img src=\"http://dl-blog.laoxianyu.cn/weixindy.jpg\" alt=\"weixin\"></p>\n","excerpt":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.<br>","more":"</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\">Deployment</a></p>\n<font color=#ff1201>技术交流可加QQ群：<strong>774332965</strong><br></font>\n\n<font color=#ff1201>微信订阅号同步：<strong>IT运维那点儿事</strong></font>\n\n<p><img src=\"http://dl-blog.laoxianyu.cn/weixindy.jpg\" alt=\"weixin\"></p>"},{"title":"使用COW让浏览器正确上网","abbrlink":"e0301188","date":"2017-10-23T13:35:00.000Z","_content":"\n### 概述\n防火长城（英文名称Great Firewall of China，简写为Great Firewall，缩写GFW），也称中国防火墙或中国国家防火墙，指中华人民共和国政府在其管辖因特网内部建立的多套网络审查系统的总称，包括相关行政审查系统。\n当使用浏览器访问google、facebook、youtube这些网站时都被GFW拦于门外，但是有些站点又是可以访问的，比如github.com；这就造成一个问题，我怎么知道那些网站是可以访问，哪些不能访问的站点又该怎么办呢？\n<!-- more -->\n\n### COW 介绍\nCOW 是一个简化穿墙的 HTTP 代理服务器。COW 的设计目标是自动化，理想情况下用户无需关心哪些网站无法访问，可直连网站也不会因为使用二级代理而降低访问速度。\n简单来说就是国内能访问的就直接访问，不能访问的就走代理访问。\n\n#### COW优点\n+ 自动检测网站是否被墙，仅对被墙网站使用二级代理\n+ 自动生成包含直连网站的PAC文件，访问这些网站时可不使用COW\n\n#### COW缺点\n+ 仅支持浏览器使用\n\n### 架构图\n![cow架构图](http://dl-blog.laoxianyu.cn/cow1.png)\n\n+ 客户端和一台内网服务器建立连接\n+ 内网服务器和一台香港服务器建立连接\n当客户端访问国内网站时，就直接走内网服务器代理；当客户端访问国外网站时，就先走内网服务器，然后再通过内网服务器和香港服务器之间的SOCK链接访问。\n\n### 服务部署步骤\n\n##### 香港服务器(6.6.6.6)\n1、下载COW二进制文件\n\n```\n$ curl -L git.io/cow | bash\n```\n此时会在当前目录下生成一个 cow 二进制文件，和 .cow/ 目录。cow 为启动程序，.cow/ 里面是配置文件。\n\n2、修改配置文件\n\n```\n$ vim .cow/rc\nlisten = cow://aes-128-cfb:xxx:5555\nlogFile = /var/log/cow.log\n```\n\n只需要有这两行配置就OK了。listen行的xxx是内网服务器和相关服务器通信的密码,aes-128-cfb是加密方式。详细的可以参考cow配置文件里面的中文解释。\n\n3、启动\n\n```\n./cow &\n```\n\n此时会在该服务器上监听5555端口，等待内网服务器去连接。\n\n##### 内网服务器(192.168.1.11)\n1、下载COW二进制文件\n\n```\n$ curl -L git.io/cow | bash\n```\n此时会在当前目录下生成一个 cow 二进制文件，和 .cow/ 目录。cow 为启动程序，.cow/ 里面是配置文件。\n\n2、修改配置文件\n\n```\n$ vim .cow/rc\nlogFile = /var/log/cow.log\nlisten = http://0.0.0.0:7777\nproxy = protocol://aes-128-cfb:xxx@server_ip:5555\n```\n\n这儿也只需要两行配置。xxx和香港的一样密码，server_ip为香港服务器IP，5555是香港COW监听的端口。\nlisten监听的7777端口是和客户端连接的。\n\n3、启动\n\n```\n./cow &\n```\n\n此时会通过xxx密码和香港的5555端口连接，并监听本地的7777端口。\n\n__内网服务器和香港服务器的连接情况如下__\n![cow通信](http://dl-blog.laoxianyu.cn/cow2.png)\n\n- 6.6.6.6启动cow暴露自己的5555端口\n- 192.168.1.11启动cow去和6.6.6.6的5555端口建立连接并暴露自己的7777端口，等待客户端连接\n\n\n### 客户端使用\n\n![cow_client](http://dl-blog.laoxianyu.cn/cow_client%20.png)\n\n__注意：这里的填的地址是 192.168.1.11:7777/pac__\n后面多了一个pac，直接访问这个地址会下载一个文件，浏览器就是根据文件里面的内容去选择你访问的网站是走国内访问还是走香港访问。\n大功告成。\n\n__回顾一下操作步骤__\n1、6.6.6.6启动cow暴露自己5555端口\n2、192.168.1.11启动cow和6.6.6.6的5555建立连接并暴露7777端口\n3、客户端配置 internet连接\n\n\n<font color=#ff1201>技术交流可加QQ群：**774332965**<br></font>\n\n<font color=#ff1201>微信订阅号同步：**IT运维那点儿事**</font>\n\n![weixin](http://dl-blog.laoxianyu.cn/weixindy.jpg)\n\n","source":"_posts/cow.md","raw":"---\ntitle: 使用COW让浏览器正确上网\ntags:\n  - vpn\n  - 网络\nabbrlink: e0301188\ndate: 2017-10-23 21:35:00\ncategories: [网络]\n---\n\n### 概述\n防火长城（英文名称Great Firewall of China，简写为Great Firewall，缩写GFW），也称中国防火墙或中国国家防火墙，指中华人民共和国政府在其管辖因特网内部建立的多套网络审查系统的总称，包括相关行政审查系统。\n当使用浏览器访问google、facebook、youtube这些网站时都被GFW拦于门外，但是有些站点又是可以访问的，比如github.com；这就造成一个问题，我怎么知道那些网站是可以访问，哪些不能访问的站点又该怎么办呢？\n<!-- more -->\n\n### COW 介绍\nCOW 是一个简化穿墙的 HTTP 代理服务器。COW 的设计目标是自动化，理想情况下用户无需关心哪些网站无法访问，可直连网站也不会因为使用二级代理而降低访问速度。\n简单来说就是国内能访问的就直接访问，不能访问的就走代理访问。\n\n#### COW优点\n+ 自动检测网站是否被墙，仅对被墙网站使用二级代理\n+ 自动生成包含直连网站的PAC文件，访问这些网站时可不使用COW\n\n#### COW缺点\n+ 仅支持浏览器使用\n\n### 架构图\n![cow架构图](http://dl-blog.laoxianyu.cn/cow1.png)\n\n+ 客户端和一台内网服务器建立连接\n+ 内网服务器和一台香港服务器建立连接\n当客户端访问国内网站时，就直接走内网服务器代理；当客户端访问国外网站时，就先走内网服务器，然后再通过内网服务器和香港服务器之间的SOCK链接访问。\n\n### 服务部署步骤\n\n##### 香港服务器(6.6.6.6)\n1、下载COW二进制文件\n\n```\n$ curl -L git.io/cow | bash\n```\n此时会在当前目录下生成一个 cow 二进制文件，和 .cow/ 目录。cow 为启动程序，.cow/ 里面是配置文件。\n\n2、修改配置文件\n\n```\n$ vim .cow/rc\nlisten = cow://aes-128-cfb:xxx:5555\nlogFile = /var/log/cow.log\n```\n\n只需要有这两行配置就OK了。listen行的xxx是内网服务器和相关服务器通信的密码,aes-128-cfb是加密方式。详细的可以参考cow配置文件里面的中文解释。\n\n3、启动\n\n```\n./cow &\n```\n\n此时会在该服务器上监听5555端口，等待内网服务器去连接。\n\n##### 内网服务器(192.168.1.11)\n1、下载COW二进制文件\n\n```\n$ curl -L git.io/cow | bash\n```\n此时会在当前目录下生成一个 cow 二进制文件，和 .cow/ 目录。cow 为启动程序，.cow/ 里面是配置文件。\n\n2、修改配置文件\n\n```\n$ vim .cow/rc\nlogFile = /var/log/cow.log\nlisten = http://0.0.0.0:7777\nproxy = protocol://aes-128-cfb:xxx@server_ip:5555\n```\n\n这儿也只需要两行配置。xxx和香港的一样密码，server_ip为香港服务器IP，5555是香港COW监听的端口。\nlisten监听的7777端口是和客户端连接的。\n\n3、启动\n\n```\n./cow &\n```\n\n此时会通过xxx密码和香港的5555端口连接，并监听本地的7777端口。\n\n__内网服务器和香港服务器的连接情况如下__\n![cow通信](http://dl-blog.laoxianyu.cn/cow2.png)\n\n- 6.6.6.6启动cow暴露自己的5555端口\n- 192.168.1.11启动cow去和6.6.6.6的5555端口建立连接并暴露自己的7777端口，等待客户端连接\n\n\n### 客户端使用\n\n![cow_client](http://dl-blog.laoxianyu.cn/cow_client%20.png)\n\n__注意：这里的填的地址是 192.168.1.11:7777/pac__\n后面多了一个pac，直接访问这个地址会下载一个文件，浏览器就是根据文件里面的内容去选择你访问的网站是走国内访问还是走香港访问。\n大功告成。\n\n__回顾一下操作步骤__\n1、6.6.6.6启动cow暴露自己5555端口\n2、192.168.1.11启动cow和6.6.6.6的5555建立连接并暴露7777端口\n3、客户端配置 internet连接\n\n\n<font color=#ff1201>技术交流可加QQ群：**774332965**<br></font>\n\n<font color=#ff1201>微信订阅号同步：**IT运维那点儿事**</font>\n\n![weixin](http://dl-blog.laoxianyu.cn/weixindy.jpg)\n\n","slug":"cow","published":1,"updated":"2019-03-09T15:46:09.098Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt1o6ygt000w9symqit8zgk7","content":"<h3 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h3><p>防火长城（英文名称Great Firewall of China，简写为Great Firewall，缩写GFW），也称中国防火墙或中国国家防火墙，指中华人民共和国政府在其管辖因特网内部建立的多套网络审查系统的总称，包括相关行政审查系统。<br>当使用浏览器访问google、facebook、youtube这些网站时都被GFW拦于门外，但是有些站点又是可以访问的，比如github.com；这就造成一个问题，我怎么知道那些网站是可以访问，哪些不能访问的站点又该怎么办呢？<br><a id=\"more\"></a></p>\n<h3 id=\"COW-介绍\"><a href=\"#COW-介绍\" class=\"headerlink\" title=\"COW 介绍\"></a>COW 介绍</h3><p>COW 是一个简化穿墙的 HTTP 代理服务器。COW 的设计目标是自动化，理想情况下用户无需关心哪些网站无法访问，可直连网站也不会因为使用二级代理而降低访问速度。<br>简单来说就是国内能访问的就直接访问，不能访问的就走代理访问。</p>\n<h4 id=\"COW优点\"><a href=\"#COW优点\" class=\"headerlink\" title=\"COW优点\"></a>COW优点</h4><ul>\n<li>自动检测网站是否被墙，仅对被墙网站使用二级代理</li>\n<li>自动生成包含直连网站的PAC文件，访问这些网站时可不使用COW</li>\n</ul>\n<h4 id=\"COW缺点\"><a href=\"#COW缺点\" class=\"headerlink\" title=\"COW缺点\"></a>COW缺点</h4><ul>\n<li>仅支持浏览器使用</li>\n</ul>\n<h3 id=\"架构图\"><a href=\"#架构图\" class=\"headerlink\" title=\"架构图\"></a>架构图</h3><p><img src=\"http://dl-blog.laoxianyu.cn/cow1.png\" alt=\"cow架构图\"></p>\n<ul>\n<li>客户端和一台内网服务器建立连接</li>\n<li>内网服务器和一台香港服务器建立连接<br>当客户端访问国内网站时，就直接走内网服务器代理；当客户端访问国外网站时，就先走内网服务器，然后再通过内网服务器和香港服务器之间的SOCK链接访问。</li>\n</ul>\n<h3 id=\"服务部署步骤\"><a href=\"#服务部署步骤\" class=\"headerlink\" title=\"服务部署步骤\"></a>服务部署步骤</h3><h5 id=\"香港服务器-6-6-6-6\"><a href=\"#香港服务器-6-6-6-6\" class=\"headerlink\" title=\"香港服务器(6.6.6.6)\"></a>香港服务器(6.6.6.6)</h5><p>1、下载COW二进制文件</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ curl -L git.io/cow <span class=\"string\">| bash</span></div></pre></td></tr></table></figure>\n<p>此时会在当前目录下生成一个 cow 二进制文件，和 .cow/ 目录。cow 为启动程序，.cow/ 里面是配置文件。</p>\n<p>2、修改配置文件</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ <span class=\"keyword\">vim</span> .cow/rc</div><div class=\"line\">listen = <span class=\"keyword\">co</span><span class=\"variable\">w:</span>//aes-<span class=\"number\">128</span>-<span class=\"keyword\">cf</span><span class=\"variable\">b:xxx</span>:<span class=\"number\">5555</span></div><div class=\"line\">logFile = /var/<span class=\"built_in\">log</span>/cow.<span class=\"built_in\">log</span></div></pre></td></tr></table></figure>\n<p>只需要有这两行配置就OK了。listen行的xxx是内网服务器和相关服务器通信的密码,aes-128-cfb是加密方式。详细的可以参考cow配置文件里面的中文解释。</p>\n<p>3、启动</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">./cow &amp;</div></pre></td></tr></table></figure>\n<p>此时会在该服务器上监听5555端口，等待内网服务器去连接。</p>\n<h5 id=\"内网服务器-192-168-1-11\"><a href=\"#内网服务器-192-168-1-11\" class=\"headerlink\" title=\"内网服务器(192.168.1.11)\"></a>内网服务器(192.168.1.11)</h5><p>1、下载COW二进制文件</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ curl -L git.io/cow <span class=\"string\">| bash</span></div></pre></td></tr></table></figure>\n<p>此时会在当前目录下生成一个 cow 二进制文件，和 .cow/ 目录。cow 为启动程序，.cow/ 里面是配置文件。</p>\n<p>2、修改配置文件</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ <span class=\"keyword\">vim</span> .cow/rc</div><div class=\"line\">logFile = /var/<span class=\"built_in\">log</span>/cow.<span class=\"built_in\">log</span></div><div class=\"line\">listen = http://<span class=\"number\">0.0</span>.<span class=\"number\">0.0</span>:<span class=\"number\">7777</span></div><div class=\"line\">proxy = protoco<span class=\"variable\">l:</span>//aes-<span class=\"number\">128</span>-<span class=\"keyword\">cf</span><span class=\"variable\">b:xxx</span>@server_ip:<span class=\"number\">5555</span></div></pre></td></tr></table></figure>\n<p>这儿也只需要两行配置。xxx和香港的一样密码，server_ip为香港服务器IP，5555是香港COW监听的端口。<br>listen监听的7777端口是和客户端连接的。</p>\n<p>3、启动</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">./cow &amp;</div></pre></td></tr></table></figure>\n<p>此时会通过xxx密码和香港的5555端口连接，并监听本地的7777端口。</p>\n<p><strong>内网服务器和香港服务器的连接情况如下</strong><br><img src=\"http://dl-blog.laoxianyu.cn/cow2.png\" alt=\"cow通信\"></p>\n<ul>\n<li>6.6.6.6启动cow暴露自己的5555端口</li>\n<li>192.168.1.11启动cow去和6.6.6.6的5555端口建立连接并暴露自己的7777端口，等待客户端连接</li>\n</ul>\n<h3 id=\"客户端使用\"><a href=\"#客户端使用\" class=\"headerlink\" title=\"客户端使用\"></a>客户端使用</h3><p><img src=\"http://dl-blog.laoxianyu.cn/cow_client%20.png\" alt=\"cow_client\"></p>\n<p><strong>注意：这里的填的地址是 192.168.1.11:7777/pac</strong><br>后面多了一个pac，直接访问这个地址会下载一个文件，浏览器就是根据文件里面的内容去选择你访问的网站是走国内访问还是走香港访问。<br>大功告成。</p>\n<p><strong>回顾一下操作步骤</strong><br>1、6.6.6.6启动cow暴露自己5555端口<br>2、192.168.1.11启动cow和6.6.6.6的5555建立连接并暴露7777端口<br>3、客户端配置 internet连接</p>\n<font color=\"#ff1201\">技术交流可加QQ群：<strong>774332965</strong><br></font>\n\n<font color=\"#ff1201\">微信订阅号同步：<strong>IT运维那点儿事</strong></font>\n\n<p><img src=\"http://dl-blog.laoxianyu.cn/weixindy.jpg\" alt=\"weixin\"></p>\n","excerpt":"<h3 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h3><p>防火长城（英文名称Great Firewall of China，简写为Great Firewall，缩写GFW），也称中国防火墙或中国国家防火墙，指中华人民共和国政府在其管辖因特网内部建立的多套网络审查系统的总称，包括相关行政审查系统。<br>当使用浏览器访问google、facebook、youtube这些网站时都被GFW拦于门外，但是有些站点又是可以访问的，比如github.com；这就造成一个问题，我怎么知道那些网站是可以访问，哪些不能访问的站点又该怎么办呢？<br>","more":"</p>\n<h3 id=\"COW-介绍\"><a href=\"#COW-介绍\" class=\"headerlink\" title=\"COW 介绍\"></a>COW 介绍</h3><p>COW 是一个简化穿墙的 HTTP 代理服务器。COW 的设计目标是自动化，理想情况下用户无需关心哪些网站无法访问，可直连网站也不会因为使用二级代理而降低访问速度。<br>简单来说就是国内能访问的就直接访问，不能访问的就走代理访问。</p>\n<h4 id=\"COW优点\"><a href=\"#COW优点\" class=\"headerlink\" title=\"COW优点\"></a>COW优点</h4><ul>\n<li>自动检测网站是否被墙，仅对被墙网站使用二级代理</li>\n<li>自动生成包含直连网站的PAC文件，访问这些网站时可不使用COW</li>\n</ul>\n<h4 id=\"COW缺点\"><a href=\"#COW缺点\" class=\"headerlink\" title=\"COW缺点\"></a>COW缺点</h4><ul>\n<li>仅支持浏览器使用</li>\n</ul>\n<h3 id=\"架构图\"><a href=\"#架构图\" class=\"headerlink\" title=\"架构图\"></a>架构图</h3><p><img src=\"http://dl-blog.laoxianyu.cn/cow1.png\" alt=\"cow架构图\"></p>\n<ul>\n<li>客户端和一台内网服务器建立连接</li>\n<li>内网服务器和一台香港服务器建立连接<br>当客户端访问国内网站时，就直接走内网服务器代理；当客户端访问国外网站时，就先走内网服务器，然后再通过内网服务器和香港服务器之间的SOCK链接访问。</li>\n</ul>\n<h3 id=\"服务部署步骤\"><a href=\"#服务部署步骤\" class=\"headerlink\" title=\"服务部署步骤\"></a>服务部署步骤</h3><h5 id=\"香港服务器-6-6-6-6\"><a href=\"#香港服务器-6-6-6-6\" class=\"headerlink\" title=\"香港服务器(6.6.6.6)\"></a>香港服务器(6.6.6.6)</h5><p>1、下载COW二进制文件</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ curl -L git.io/cow <span class=\"string\">| bash</span></div></pre></td></tr></table></figure>\n<p>此时会在当前目录下生成一个 cow 二进制文件，和 .cow/ 目录。cow 为启动程序，.cow/ 里面是配置文件。</p>\n<p>2、修改配置文件</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ <span class=\"keyword\">vim</span> .cow/rc</div><div class=\"line\">listen = <span class=\"keyword\">co</span><span class=\"variable\">w:</span>//aes-<span class=\"number\">128</span>-<span class=\"keyword\">cf</span><span class=\"variable\">b:xxx</span>:<span class=\"number\">5555</span></div><div class=\"line\">logFile = /var/<span class=\"built_in\">log</span>/cow.<span class=\"built_in\">log</span></div></pre></td></tr></table></figure>\n<p>只需要有这两行配置就OK了。listen行的xxx是内网服务器和相关服务器通信的密码,aes-128-cfb是加密方式。详细的可以参考cow配置文件里面的中文解释。</p>\n<p>3、启动</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">./cow &amp;</div></pre></td></tr></table></figure>\n<p>此时会在该服务器上监听5555端口，等待内网服务器去连接。</p>\n<h5 id=\"内网服务器-192-168-1-11\"><a href=\"#内网服务器-192-168-1-11\" class=\"headerlink\" title=\"内网服务器(192.168.1.11)\"></a>内网服务器(192.168.1.11)</h5><p>1、下载COW二进制文件</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ curl -L git.io/cow <span class=\"string\">| bash</span></div></pre></td></tr></table></figure>\n<p>此时会在当前目录下生成一个 cow 二进制文件，和 .cow/ 目录。cow 为启动程序，.cow/ 里面是配置文件。</p>\n<p>2、修改配置文件</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ <span class=\"keyword\">vim</span> .cow/rc</div><div class=\"line\">logFile = /var/<span class=\"built_in\">log</span>/cow.<span class=\"built_in\">log</span></div><div class=\"line\">listen = http://<span class=\"number\">0.0</span>.<span class=\"number\">0.0</span>:<span class=\"number\">7777</span></div><div class=\"line\">proxy = protoco<span class=\"variable\">l:</span>//aes-<span class=\"number\">128</span>-<span class=\"keyword\">cf</span><span class=\"variable\">b:xxx</span>@server_ip:<span class=\"number\">5555</span></div></pre></td></tr></table></figure>\n<p>这儿也只需要两行配置。xxx和香港的一样密码，server_ip为香港服务器IP，5555是香港COW监听的端口。<br>listen监听的7777端口是和客户端连接的。</p>\n<p>3、启动</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">./cow &amp;</div></pre></td></tr></table></figure>\n<p>此时会通过xxx密码和香港的5555端口连接，并监听本地的7777端口。</p>\n<p><strong>内网服务器和香港服务器的连接情况如下</strong><br><img src=\"http://dl-blog.laoxianyu.cn/cow2.png\" alt=\"cow通信\"></p>\n<ul>\n<li>6.6.6.6启动cow暴露自己的5555端口</li>\n<li>192.168.1.11启动cow去和6.6.6.6的5555端口建立连接并暴露自己的7777端口，等待客户端连接</li>\n</ul>\n<h3 id=\"客户端使用\"><a href=\"#客户端使用\" class=\"headerlink\" title=\"客户端使用\"></a>客户端使用</h3><p><img src=\"http://dl-blog.laoxianyu.cn/cow_client%20.png\" alt=\"cow_client\"></p>\n<p><strong>注意：这里的填的地址是 192.168.1.11:7777/pac</strong><br>后面多了一个pac，直接访问这个地址会下载一个文件，浏览器就是根据文件里面的内容去选择你访问的网站是走国内访问还是走香港访问。<br>大功告成。</p>\n<p><strong>回顾一下操作步骤</strong><br>1、6.6.6.6启动cow暴露自己5555端口<br>2、192.168.1.11启动cow和6.6.6.6的5555建立连接并暴露7777端口<br>3、客户端配置 internet连接</p>\n<font color=#ff1201>技术交流可加QQ群：<strong>774332965</strong><br></font>\n\n<font color=#ff1201>微信订阅号同步：<strong>IT运维那点儿事</strong></font>\n\n<p><img src=\"http://dl-blog.laoxianyu.cn/weixindy.jpg\" alt=\"weixin\"></p>"},{"title":"tcp交互数据和块数据处理","abbrlink":"d8cfbc13","date":"2017-11-29T12:41:05.000Z","_content":"## 前言\n目前建立在TCP协议上的网络协议特别多，有telnet，ssh，有ftp，有http等等。这些协议又可以根据数据吞吐量来大致分成两大类：\n+ (1)交互数据类型\n例如telnet，ssh，这种类型的协议在大多数情况下只是做小流量的数据交换，比如说按一下键盘，回显一些文字等等。\n+ (2)数据成块类型\n例如ftp，这种类型的协议要求TCP能尽量的运载数据，把数据的吞吐量做到最大，并尽可能的提高效率。针对这两种情况，TCP给出了两种不同的策略来进行数据传输。\n\n<!-- more -->\n## TCP的交互数据流\n\n对于交互性要求比较高的应用，TCP给出两个策略来提高发送效率和减低网络负担：\n- (1)捎带ACK\n- (2)Nagle算法（一次尽量多的发数据）\n\n#### 捎带ACK的发送方式\n\n&ensp;&ensp;&ensp;&ensp;当主机收到远程主机的TCP数据报之后，通常不马上发送ACK数据报，而是等上一个短暂的时间，如果这段时间里面主机还有发送到远程主机的TCP数据报，那么就把这个ACK数据报“捎带”着发送出去，把本来两个TCP数据报整合成一个发送。一般的，这个时间是200ms。可以明显地看到这个策略可以把TCP数据报的利用率提高很多。\n\n#### Nagle算法\n\n&ensp;&ensp;&ensp;&ensp;Nagle算法是说，当主机A给主机B发送了一个TCP数据报并进入等待主机B的ACK数据报的状态时，TCP的输出缓冲区里面只能有一个TCP数据报，并且，这个数据报不断地收集后来的数据，整合成一个大的数据报，等到B主机的ACK包一到，就把这些数据“一股脑”的发送出去。这样可以较少交互，减轻压力。\n\n\n## TCP的成块数据流\n\n&ensp;&ensp;&ensp;&ensp;对于FTP这样对于数据吞吐量有较高要求的要求，将总是希望每次尽量多的发送数据到对方主机，就算是有点延迟也无所谓。TCP也提供了一整套的策略来支持这样的需求。TCP协议中有16个bit表示“窗口”的大小，这是策略的核心。\n![tcp_chuangkou1](http://dl-blog.laoxianyu.cn/tcp%E7%AA%97%E5%8F%A31.png)\n\n#### 传输数据时ACK的问题\n\n&ensp;&ensp;&ensp;&ensp;在解释滑动窗口前，需要看看ACK的应答策略，一般来说，发送端发送一个TCP数据报，那么接收端就应该发送一个ACK数据报。但是事实上却不是这样，发送端将会连续发送数据尽量填满接受方的缓冲区，而接受方对这些数据只要发送一个ACK报文来回应就可以了，这就是ACK的累积特性，这个特性大大减少了发送端和接收端的负担。\n\n#### 滑动窗口\n\n&ensp;&ensp;&ensp;&ensp;滑动窗口本质上是描述接受方的TCP数据报缓冲区大小的数据，发送方根据这个数据来计算自己最多能发送多长的数据。如果发送方收到接受方的窗口大小为0的TCP数据报，那么发送方将停止发送数据，等到接受方发送窗口大小不为0的数据报的到来。关于滑动窗口协议，还有三个术语，分别是：\n* 窗口合拢：当窗口从左边向右边靠近的时候，这种现象发生在数据被发送和确认的时候。\n* 窗口张开：当窗口的右边沿向右边移动的时候，这种现象发生在接受端处理了数据以后。\n* 窗口收缩：当窗口的右边沿向左边移动的时候，这种现象不常发生。\n\nTCP就是用这个窗口，慢慢的从数据的左边移动到右边，把处于窗口范围内的数据发送出去（但不用发送所有，只是处于窗口内的数据可以发送。）。这就是窗口的意义。\n![tcp_chuangkou2](http://dl-blog.laoxianyu.cn/tcp%E7%AA%97%E5%8F%A32.png)\n\n#### 数据拥塞\n\n&ensp;&ensp;&ensp;&ensp;上面的策略用于局域网内传输还可以，但是用在广域网中就可能会出现问题，最大的问题就是当传输时出现了瓶颈所产生的大量数据拥塞问题，为了解决这个问题，TCP发送方需要确认连接双方的线路的数据最大吞吐量是多少。这就是所谓的拥塞窗口。\n&ensp;&ensp;&ensp;&ensp;拥塞窗口的原理很简单，TCP发送方首先发送一个数据报，然后等待对方的回应，得到回应后就把这个窗口的大小加倍，然后连续发送两个数据报，等到对方回应以后，再把这个窗口加倍（先是2的指数倍，到一定程度后就变成线行增长，这就是所谓的TCP慢启动），发送更多的数据报，直到出现超时错误，这样，发送端就了解到了通信双方的线路承载能力，也就确定了拥塞窗口的大小，发送方就用这个拥塞窗口的大小发送数据。\n平时在下载电影的时候，仔细观察应该不难发现，速度先从几十K到100K，然后到200K，再到400K，后面慢慢变的稳定，这个速度就是拥塞窗口的大小。\n\n<font color=#ff1201>技术交流可加QQ群：**774332965**<br></font>\n\n<font color=#ff1201>微信订阅号同步：**IT运维那点儿事**</font>\n\n![weixin](http://dl-blog.laoxianyu.cn/weixindy.jpg)\n\n","source":"_posts/tcp交互数据和块数据处理.md","raw":"---\ntitle: tcp交互数据和块数据处理\ntags: TCP/IP\nabbrlink: d8cfbc13\ndate: 2017-11-29 20:41:05\ncategories: [网络]\n---\n## 前言\n目前建立在TCP协议上的网络协议特别多，有telnet，ssh，有ftp，有http等等。这些协议又可以根据数据吞吐量来大致分成两大类：\n+ (1)交互数据类型\n例如telnet，ssh，这种类型的协议在大多数情况下只是做小流量的数据交换，比如说按一下键盘，回显一些文字等等。\n+ (2)数据成块类型\n例如ftp，这种类型的协议要求TCP能尽量的运载数据，把数据的吞吐量做到最大，并尽可能的提高效率。针对这两种情况，TCP给出了两种不同的策略来进行数据传输。\n\n<!-- more -->\n## TCP的交互数据流\n\n对于交互性要求比较高的应用，TCP给出两个策略来提高发送效率和减低网络负担：\n- (1)捎带ACK\n- (2)Nagle算法（一次尽量多的发数据）\n\n#### 捎带ACK的发送方式\n\n&ensp;&ensp;&ensp;&ensp;当主机收到远程主机的TCP数据报之后，通常不马上发送ACK数据报，而是等上一个短暂的时间，如果这段时间里面主机还有发送到远程主机的TCP数据报，那么就把这个ACK数据报“捎带”着发送出去，把本来两个TCP数据报整合成一个发送。一般的，这个时间是200ms。可以明显地看到这个策略可以把TCP数据报的利用率提高很多。\n\n#### Nagle算法\n\n&ensp;&ensp;&ensp;&ensp;Nagle算法是说，当主机A给主机B发送了一个TCP数据报并进入等待主机B的ACK数据报的状态时，TCP的输出缓冲区里面只能有一个TCP数据报，并且，这个数据报不断地收集后来的数据，整合成一个大的数据报，等到B主机的ACK包一到，就把这些数据“一股脑”的发送出去。这样可以较少交互，减轻压力。\n\n\n## TCP的成块数据流\n\n&ensp;&ensp;&ensp;&ensp;对于FTP这样对于数据吞吐量有较高要求的要求，将总是希望每次尽量多的发送数据到对方主机，就算是有点延迟也无所谓。TCP也提供了一整套的策略来支持这样的需求。TCP协议中有16个bit表示“窗口”的大小，这是策略的核心。\n![tcp_chuangkou1](http://dl-blog.laoxianyu.cn/tcp%E7%AA%97%E5%8F%A31.png)\n\n#### 传输数据时ACK的问题\n\n&ensp;&ensp;&ensp;&ensp;在解释滑动窗口前，需要看看ACK的应答策略，一般来说，发送端发送一个TCP数据报，那么接收端就应该发送一个ACK数据报。但是事实上却不是这样，发送端将会连续发送数据尽量填满接受方的缓冲区，而接受方对这些数据只要发送一个ACK报文来回应就可以了，这就是ACK的累积特性，这个特性大大减少了发送端和接收端的负担。\n\n#### 滑动窗口\n\n&ensp;&ensp;&ensp;&ensp;滑动窗口本质上是描述接受方的TCP数据报缓冲区大小的数据，发送方根据这个数据来计算自己最多能发送多长的数据。如果发送方收到接受方的窗口大小为0的TCP数据报，那么发送方将停止发送数据，等到接受方发送窗口大小不为0的数据报的到来。关于滑动窗口协议，还有三个术语，分别是：\n* 窗口合拢：当窗口从左边向右边靠近的时候，这种现象发生在数据被发送和确认的时候。\n* 窗口张开：当窗口的右边沿向右边移动的时候，这种现象发生在接受端处理了数据以后。\n* 窗口收缩：当窗口的右边沿向左边移动的时候，这种现象不常发生。\n\nTCP就是用这个窗口，慢慢的从数据的左边移动到右边，把处于窗口范围内的数据发送出去（但不用发送所有，只是处于窗口内的数据可以发送。）。这就是窗口的意义。\n![tcp_chuangkou2](http://dl-blog.laoxianyu.cn/tcp%E7%AA%97%E5%8F%A32.png)\n\n#### 数据拥塞\n\n&ensp;&ensp;&ensp;&ensp;上面的策略用于局域网内传输还可以，但是用在广域网中就可能会出现问题，最大的问题就是当传输时出现了瓶颈所产生的大量数据拥塞问题，为了解决这个问题，TCP发送方需要确认连接双方的线路的数据最大吞吐量是多少。这就是所谓的拥塞窗口。\n&ensp;&ensp;&ensp;&ensp;拥塞窗口的原理很简单，TCP发送方首先发送一个数据报，然后等待对方的回应，得到回应后就把这个窗口的大小加倍，然后连续发送两个数据报，等到对方回应以后，再把这个窗口加倍（先是2的指数倍，到一定程度后就变成线行增长，这就是所谓的TCP慢启动），发送更多的数据报，直到出现超时错误，这样，发送端就了解到了通信双方的线路承载能力，也就确定了拥塞窗口的大小，发送方就用这个拥塞窗口的大小发送数据。\n平时在下载电影的时候，仔细观察应该不难发现，速度先从几十K到100K，然后到200K，再到400K，后面慢慢变的稳定，这个速度就是拥塞窗口的大小。\n\n<font color=#ff1201>技术交流可加QQ群：**774332965**<br></font>\n\n<font color=#ff1201>微信订阅号同步：**IT运维那点儿事**</font>\n\n![weixin](http://dl-blog.laoxianyu.cn/weixindy.jpg)\n\n","slug":"tcp交互数据和块数据处理","published":1,"updated":"2019-03-09T15:46:09.098Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt1o6ygw00119symdf92ds8a","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>目前建立在TCP协议上的网络协议特别多，有telnet，ssh，有ftp，有http等等。这些协议又可以根据数据吞吐量来大致分成两大类：</p>\n<ul>\n<li>(1)交互数据类型<br>例如telnet，ssh，这种类型的协议在大多数情况下只是做小流量的数据交换，比如说按一下键盘，回显一些文字等等。</li>\n<li>(2)数据成块类型<br>例如ftp，这种类型的协议要求TCP能尽量的运载数据，把数据的吞吐量做到最大，并尽可能的提高效率。针对这两种情况，TCP给出了两种不同的策略来进行数据传输。</li>\n</ul>\n<a id=\"more\"></a>\n<h2 id=\"TCP的交互数据流\"><a href=\"#TCP的交互数据流\" class=\"headerlink\" title=\"TCP的交互数据流\"></a>TCP的交互数据流</h2><p>对于交互性要求比较高的应用，TCP给出两个策略来提高发送效率和减低网络负担：</p>\n<ul>\n<li>(1)捎带ACK</li>\n<li>(2)Nagle算法（一次尽量多的发数据）</li>\n</ul>\n<h4 id=\"捎带ACK的发送方式\"><a href=\"#捎带ACK的发送方式\" class=\"headerlink\" title=\"捎带ACK的发送方式\"></a>捎带ACK的发送方式</h4><p>&ensp;&ensp;&ensp;&ensp;当主机收到远程主机的TCP数据报之后，通常不马上发送ACK数据报，而是等上一个短暂的时间，如果这段时间里面主机还有发送到远程主机的TCP数据报，那么就把这个ACK数据报“捎带”着发送出去，把本来两个TCP数据报整合成一个发送。一般的，这个时间是200ms。可以明显地看到这个策略可以把TCP数据报的利用率提高很多。</p>\n<h4 id=\"Nagle算法\"><a href=\"#Nagle算法\" class=\"headerlink\" title=\"Nagle算法\"></a>Nagle算法</h4><p>&ensp;&ensp;&ensp;&ensp;Nagle算法是说，当主机A给主机B发送了一个TCP数据报并进入等待主机B的ACK数据报的状态时，TCP的输出缓冲区里面只能有一个TCP数据报，并且，这个数据报不断地收集后来的数据，整合成一个大的数据报，等到B主机的ACK包一到，就把这些数据“一股脑”的发送出去。这样可以较少交互，减轻压力。</p>\n<h2 id=\"TCP的成块数据流\"><a href=\"#TCP的成块数据流\" class=\"headerlink\" title=\"TCP的成块数据流\"></a>TCP的成块数据流</h2><p>&ensp;&ensp;&ensp;&ensp;对于FTP这样对于数据吞吐量有较高要求的要求，将总是希望每次尽量多的发送数据到对方主机，就算是有点延迟也无所谓。TCP也提供了一整套的策略来支持这样的需求。TCP协议中有16个bit表示“窗口”的大小，这是策略的核心。<br><img src=\"http://dl-blog.laoxianyu.cn/tcp%E7%AA%97%E5%8F%A31.png\" alt=\"tcp_chuangkou1\"></p>\n<h4 id=\"传输数据时ACK的问题\"><a href=\"#传输数据时ACK的问题\" class=\"headerlink\" title=\"传输数据时ACK的问题\"></a>传输数据时ACK的问题</h4><p>&ensp;&ensp;&ensp;&ensp;在解释滑动窗口前，需要看看ACK的应答策略，一般来说，发送端发送一个TCP数据报，那么接收端就应该发送一个ACK数据报。但是事实上却不是这样，发送端将会连续发送数据尽量填满接受方的缓冲区，而接受方对这些数据只要发送一个ACK报文来回应就可以了，这就是ACK的累积特性，这个特性大大减少了发送端和接收端的负担。</p>\n<h4 id=\"滑动窗口\"><a href=\"#滑动窗口\" class=\"headerlink\" title=\"滑动窗口\"></a>滑动窗口</h4><p>&ensp;&ensp;&ensp;&ensp;滑动窗口本质上是描述接受方的TCP数据报缓冲区大小的数据，发送方根据这个数据来计算自己最多能发送多长的数据。如果发送方收到接受方的窗口大小为0的TCP数据报，那么发送方将停止发送数据，等到接受方发送窗口大小不为0的数据报的到来。关于滑动窗口协议，还有三个术语，分别是：</p>\n<ul>\n<li>窗口合拢：当窗口从左边向右边靠近的时候，这种现象发生在数据被发送和确认的时候。</li>\n<li>窗口张开：当窗口的右边沿向右边移动的时候，这种现象发生在接受端处理了数据以后。</li>\n<li>窗口收缩：当窗口的右边沿向左边移动的时候，这种现象不常发生。</li>\n</ul>\n<p>TCP就是用这个窗口，慢慢的从数据的左边移动到右边，把处于窗口范围内的数据发送出去（但不用发送所有，只是处于窗口内的数据可以发送。）。这就是窗口的意义。<br><img src=\"http://dl-blog.laoxianyu.cn/tcp%E7%AA%97%E5%8F%A32.png\" alt=\"tcp_chuangkou2\"></p>\n<h4 id=\"数据拥塞\"><a href=\"#数据拥塞\" class=\"headerlink\" title=\"数据拥塞\"></a>数据拥塞</h4><p>&ensp;&ensp;&ensp;&ensp;上面的策略用于局域网内传输还可以，但是用在广域网中就可能会出现问题，最大的问题就是当传输时出现了瓶颈所产生的大量数据拥塞问题，为了解决这个问题，TCP发送方需要确认连接双方的线路的数据最大吞吐量是多少。这就是所谓的拥塞窗口。<br>&ensp;&ensp;&ensp;&ensp;拥塞窗口的原理很简单，TCP发送方首先发送一个数据报，然后等待对方的回应，得到回应后就把这个窗口的大小加倍，然后连续发送两个数据报，等到对方回应以后，再把这个窗口加倍（先是2的指数倍，到一定程度后就变成线行增长，这就是所谓的TCP慢启动），发送更多的数据报，直到出现超时错误，这样，发送端就了解到了通信双方的线路承载能力，也就确定了拥塞窗口的大小，发送方就用这个拥塞窗口的大小发送数据。<br>平时在下载电影的时候，仔细观察应该不难发现，速度先从几十K到100K，然后到200K，再到400K，后面慢慢变的稳定，这个速度就是拥塞窗口的大小。</p>\n<font color=\"#ff1201\">技术交流可加QQ群：<strong>774332965</strong><br></font>\n\n<font color=\"#ff1201\">微信订阅号同步：<strong>IT运维那点儿事</strong></font>\n\n<p><img src=\"http://dl-blog.laoxianyu.cn/weixindy.jpg\" alt=\"weixin\"></p>\n","excerpt":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>目前建立在TCP协议上的网络协议特别多，有telnet，ssh，有ftp，有http等等。这些协议又可以根据数据吞吐量来大致分成两大类：</p>\n<ul>\n<li>(1)交互数据类型<br>例如telnet，ssh，这种类型的协议在大多数情况下只是做小流量的数据交换，比如说按一下键盘，回显一些文字等等。</li>\n<li>(2)数据成块类型<br>例如ftp，这种类型的协议要求TCP能尽量的运载数据，把数据的吞吐量做到最大，并尽可能的提高效率。针对这两种情况，TCP给出了两种不同的策略来进行数据传输。</li>\n</ul>","more":"<h2 id=\"TCP的交互数据流\"><a href=\"#TCP的交互数据流\" class=\"headerlink\" title=\"TCP的交互数据流\"></a>TCP的交互数据流</h2><p>对于交互性要求比较高的应用，TCP给出两个策略来提高发送效率和减低网络负担：</p>\n<ul>\n<li>(1)捎带ACK</li>\n<li>(2)Nagle算法（一次尽量多的发数据）</li>\n</ul>\n<h4 id=\"捎带ACK的发送方式\"><a href=\"#捎带ACK的发送方式\" class=\"headerlink\" title=\"捎带ACK的发送方式\"></a>捎带ACK的发送方式</h4><p>&ensp;&ensp;&ensp;&ensp;当主机收到远程主机的TCP数据报之后，通常不马上发送ACK数据报，而是等上一个短暂的时间，如果这段时间里面主机还有发送到远程主机的TCP数据报，那么就把这个ACK数据报“捎带”着发送出去，把本来两个TCP数据报整合成一个发送。一般的，这个时间是200ms。可以明显地看到这个策略可以把TCP数据报的利用率提高很多。</p>\n<h4 id=\"Nagle算法\"><a href=\"#Nagle算法\" class=\"headerlink\" title=\"Nagle算法\"></a>Nagle算法</h4><p>&ensp;&ensp;&ensp;&ensp;Nagle算法是说，当主机A给主机B发送了一个TCP数据报并进入等待主机B的ACK数据报的状态时，TCP的输出缓冲区里面只能有一个TCP数据报，并且，这个数据报不断地收集后来的数据，整合成一个大的数据报，等到B主机的ACK包一到，就把这些数据“一股脑”的发送出去。这样可以较少交互，减轻压力。</p>\n<h2 id=\"TCP的成块数据流\"><a href=\"#TCP的成块数据流\" class=\"headerlink\" title=\"TCP的成块数据流\"></a>TCP的成块数据流</h2><p>&ensp;&ensp;&ensp;&ensp;对于FTP这样对于数据吞吐量有较高要求的要求，将总是希望每次尽量多的发送数据到对方主机，就算是有点延迟也无所谓。TCP也提供了一整套的策略来支持这样的需求。TCP协议中有16个bit表示“窗口”的大小，这是策略的核心。<br><img src=\"http://dl-blog.laoxianyu.cn/tcp%E7%AA%97%E5%8F%A31.png\" alt=\"tcp_chuangkou1\"></p>\n<h4 id=\"传输数据时ACK的问题\"><a href=\"#传输数据时ACK的问题\" class=\"headerlink\" title=\"传输数据时ACK的问题\"></a>传输数据时ACK的问题</h4><p>&ensp;&ensp;&ensp;&ensp;在解释滑动窗口前，需要看看ACK的应答策略，一般来说，发送端发送一个TCP数据报，那么接收端就应该发送一个ACK数据报。但是事实上却不是这样，发送端将会连续发送数据尽量填满接受方的缓冲区，而接受方对这些数据只要发送一个ACK报文来回应就可以了，这就是ACK的累积特性，这个特性大大减少了发送端和接收端的负担。</p>\n<h4 id=\"滑动窗口\"><a href=\"#滑动窗口\" class=\"headerlink\" title=\"滑动窗口\"></a>滑动窗口</h4><p>&ensp;&ensp;&ensp;&ensp;滑动窗口本质上是描述接受方的TCP数据报缓冲区大小的数据，发送方根据这个数据来计算自己最多能发送多长的数据。如果发送方收到接受方的窗口大小为0的TCP数据报，那么发送方将停止发送数据，等到接受方发送窗口大小不为0的数据报的到来。关于滑动窗口协议，还有三个术语，分别是：</p>\n<ul>\n<li>窗口合拢：当窗口从左边向右边靠近的时候，这种现象发生在数据被发送和确认的时候。</li>\n<li>窗口张开：当窗口的右边沿向右边移动的时候，这种现象发生在接受端处理了数据以后。</li>\n<li>窗口收缩：当窗口的右边沿向左边移动的时候，这种现象不常发生。</li>\n</ul>\n<p>TCP就是用这个窗口，慢慢的从数据的左边移动到右边，把处于窗口范围内的数据发送出去（但不用发送所有，只是处于窗口内的数据可以发送。）。这就是窗口的意义。<br><img src=\"http://dl-blog.laoxianyu.cn/tcp%E7%AA%97%E5%8F%A32.png\" alt=\"tcp_chuangkou2\"></p>\n<h4 id=\"数据拥塞\"><a href=\"#数据拥塞\" class=\"headerlink\" title=\"数据拥塞\"></a>数据拥塞</h4><p>&ensp;&ensp;&ensp;&ensp;上面的策略用于局域网内传输还可以，但是用在广域网中就可能会出现问题，最大的问题就是当传输时出现了瓶颈所产生的大量数据拥塞问题，为了解决这个问题，TCP发送方需要确认连接双方的线路的数据最大吞吐量是多少。这就是所谓的拥塞窗口。<br>&ensp;&ensp;&ensp;&ensp;拥塞窗口的原理很简单，TCP发送方首先发送一个数据报，然后等待对方的回应，得到回应后就把这个窗口的大小加倍，然后连续发送两个数据报，等到对方回应以后，再把这个窗口加倍（先是2的指数倍，到一定程度后就变成线行增长，这就是所谓的TCP慢启动），发送更多的数据报，直到出现超时错误，这样，发送端就了解到了通信双方的线路承载能力，也就确定了拥塞窗口的大小，发送方就用这个拥塞窗口的大小发送数据。<br>平时在下载电影的时候，仔细观察应该不难发现，速度先从几十K到100K，然后到200K，再到400K，后面慢慢变的稳定，这个速度就是拥塞窗口的大小。</p>\n<font color=#ff1201>技术交流可加QQ群：<strong>774332965</strong><br></font>\n\n<font color=#ff1201>微信订阅号同步：<strong>IT运维那点儿事</strong></font>\n\n<p><img src=\"http://dl-blog.laoxianyu.cn/weixindy.jpg\" alt=\"weixin\"></p>"},{"title":"tcp连接的建立与终止","abbrlink":"684012cf","date":"2017-11-29T11:25:14.000Z","_content":"\n## TCP三次握手\n\tTCP三次握手；简单来说就是通信的双方建立可靠的连接之前必须要做的事情，就是在通信之前要做的事情。而我们常见的双方就是指的 客户端 ---- 服务器。\n\n**建立连接过程**\n![tcp_lianjie](http://dl-blog.laoxianyu.cn/tcp%E8%BF%9E%E6%8E%A5.png)\n    首先client端发送连接请求报文，server段接受连接后回复ack报文，并为这次连接分配资源。client端接收到ack报文后也向server段发生ack报文，并分配资源，这样tcp连接就建立了。\n<!-- more -->\n建立连接过后干嘛呢？那就是该干嘛干嘛呀，就可以传输数据了。\n\n## TCP四次挥手\n\tTCP四次挥手：由于TCP协议的可靠性，所以它再结束通信之前也会有一个流程来确认数据已经传输完成，在网络线路当中没有残留的数据包。\n\n**断开连接过程**\n![tcp_duankai](http://dl-blog.laoxianyu.cn/tcp%E6%8C%A5%E6%89%8B.png)\n    中断连接端可以是Client端，也可以是Server端。假设Client端发起中断连接请求，也就是发送FIN报文。Server端接到FIN报文后，意思是说\"我Client端没有数据要发给你了\"（此时的Client是处于FIN_WAIT状态），但是如果你还有数据没有发送完成，则不必急着关闭Socket，可以继续发送数据。所以你先发送ACK，\"告诉Client端，你的请求我收到了，但是我还没准备好，请继续你等我的消息\"。这个时候Client端就进入FIN_WAIT状态，继续等待Server端的FIN报文。当Server端确定数据已发送完成，则向Client端发送FIN报文，\"告诉Client端，好了，我这边数据发完了，准备好关闭连接了\"。Client端收到FIN报文后，\"就知道可以关闭连接了，但是他还是不相信网络，怕Server端不知道要关闭，所以发送ACK后进入TIME_WAIT状态，如果Server端没有收到ACK则可以重传。“，Server端收到ACK后，\"就知道可以断开连接了\"。Client端等待了2MSL后依然没有收到回复，则证明Server端已正常关闭，那好，我Client端也可以关闭连接了。Ok，TCP连接就这样关闭了！\n\n## 什么是MSL\n    MSL是一个时间概念，指的是数据包在链路中的最大生存时间，如果超过这个时间，数据包就会被丢掉。主动发起断开连接的一方会在TIME_WAIT时等待2MSL，因为包要一个来回。所以有时候也称TIME_WAIT状态为2MSL状态。\n\n## 什么时候哪一方会出现TIME_WAIT\n\tTCP四次挥手的时候主动发起FIN报文的一方会处于TIME_WAIT状态。\n\n## TIME_WAIT的好和坏\n\tTIME_WAIT这个东西有没有好处呢？那有没有坏处呢？\n\t答案是都有的。好处就是它保证了在断开连接之前数据传输的完整性；那坏处是什么呢？想象一下，如果是服务器主动发起的FIN报文，那它就会处于TIME_WAIT状态，那肯定就会占用一定系统资源。想象一下，如果并发量超级大的时候，那服务器岂不是会崩溃了。\n\n<font color=#ff1201>技术交流可加QQ群：**774332965**<br></font>\n\n<font color=#ff1201>微信订阅号同步：**IT运维那点儿事**</font>\n\n![weixin](http://dl-blog.laoxianyu.cn/weixindy.jpg)\n\n","source":"_posts/tcp连接的建立与终止.md","raw":"---\ntitle: tcp连接的建立与终止\ntags: TCP/IP\nabbrlink: 684012cf\ndate: 2017-11-29 19:25:14\ncategories: [网络]\n---\n\n## TCP三次握手\n\tTCP三次握手；简单来说就是通信的双方建立可靠的连接之前必须要做的事情，就是在通信之前要做的事情。而我们常见的双方就是指的 客户端 ---- 服务器。\n\n**建立连接过程**\n![tcp_lianjie](http://dl-blog.laoxianyu.cn/tcp%E8%BF%9E%E6%8E%A5.png)\n    首先client端发送连接请求报文，server段接受连接后回复ack报文，并为这次连接分配资源。client端接收到ack报文后也向server段发生ack报文，并分配资源，这样tcp连接就建立了。\n<!-- more -->\n建立连接过后干嘛呢？那就是该干嘛干嘛呀，就可以传输数据了。\n\n## TCP四次挥手\n\tTCP四次挥手：由于TCP协议的可靠性，所以它再结束通信之前也会有一个流程来确认数据已经传输完成，在网络线路当中没有残留的数据包。\n\n**断开连接过程**\n![tcp_duankai](http://dl-blog.laoxianyu.cn/tcp%E6%8C%A5%E6%89%8B.png)\n    中断连接端可以是Client端，也可以是Server端。假设Client端发起中断连接请求，也就是发送FIN报文。Server端接到FIN报文后，意思是说\"我Client端没有数据要发给你了\"（此时的Client是处于FIN_WAIT状态），但是如果你还有数据没有发送完成，则不必急着关闭Socket，可以继续发送数据。所以你先发送ACK，\"告诉Client端，你的请求我收到了，但是我还没准备好，请继续你等我的消息\"。这个时候Client端就进入FIN_WAIT状态，继续等待Server端的FIN报文。当Server端确定数据已发送完成，则向Client端发送FIN报文，\"告诉Client端，好了，我这边数据发完了，准备好关闭连接了\"。Client端收到FIN报文后，\"就知道可以关闭连接了，但是他还是不相信网络，怕Server端不知道要关闭，所以发送ACK后进入TIME_WAIT状态，如果Server端没有收到ACK则可以重传。“，Server端收到ACK后，\"就知道可以断开连接了\"。Client端等待了2MSL后依然没有收到回复，则证明Server端已正常关闭，那好，我Client端也可以关闭连接了。Ok，TCP连接就这样关闭了！\n\n## 什么是MSL\n    MSL是一个时间概念，指的是数据包在链路中的最大生存时间，如果超过这个时间，数据包就会被丢掉。主动发起断开连接的一方会在TIME_WAIT时等待2MSL，因为包要一个来回。所以有时候也称TIME_WAIT状态为2MSL状态。\n\n## 什么时候哪一方会出现TIME_WAIT\n\tTCP四次挥手的时候主动发起FIN报文的一方会处于TIME_WAIT状态。\n\n## TIME_WAIT的好和坏\n\tTIME_WAIT这个东西有没有好处呢？那有没有坏处呢？\n\t答案是都有的。好处就是它保证了在断开连接之前数据传输的完整性；那坏处是什么呢？想象一下，如果是服务器主动发起的FIN报文，那它就会处于TIME_WAIT状态，那肯定就会占用一定系统资源。想象一下，如果并发量超级大的时候，那服务器岂不是会崩溃了。\n\n<font color=#ff1201>技术交流可加QQ群：**774332965**<br></font>\n\n<font color=#ff1201>微信订阅号同步：**IT运维那点儿事**</font>\n\n![weixin](http://dl-blog.laoxianyu.cn/weixindy.jpg)\n\n","slug":"tcp连接的建立与终止","published":1,"updated":"2019-03-09T15:46:09.098Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt1o6ygy00139symbrq9mseh","content":"<h2 id=\"TCP三次握手\"><a href=\"#TCP三次握手\" class=\"headerlink\" title=\"TCP三次握手\"></a>TCP三次握手</h2><pre><code>TCP三次握手；简单来说就是通信的双方建立可靠的连接之前必须要做的事情，就是在通信之前要做的事情。而我们常见的双方就是指的 客户端 ---- 服务器。\n</code></pre><p><strong>建立连接过程</strong><br><img src=\"http://dl-blog.laoxianyu.cn/tcp%E8%BF%9E%E6%8E%A5.png\" alt=\"tcp_lianjie\"><br>    首先client端发送连接请求报文，server段接受连接后回复ack报文，并为这次连接分配资源。client端接收到ack报文后也向server段发生ack报文，并分配资源，这样tcp连接就建立了。<br><a id=\"more\"></a><br>建立连接过后干嘛呢？那就是该干嘛干嘛呀，就可以传输数据了。</p>\n<h2 id=\"TCP四次挥手\"><a href=\"#TCP四次挥手\" class=\"headerlink\" title=\"TCP四次挥手\"></a>TCP四次挥手</h2><pre><code>TCP四次挥手：由于TCP协议的可靠性，所以它再结束通信之前也会有一个流程来确认数据已经传输完成，在网络线路当中没有残留的数据包。\n</code></pre><p><strong>断开连接过程</strong><br><img src=\"http://dl-blog.laoxianyu.cn/tcp%E6%8C%A5%E6%89%8B.png\" alt=\"tcp_duankai\"><br>    中断连接端可以是Client端，也可以是Server端。假设Client端发起中断连接请求，也就是发送FIN报文。Server端接到FIN报文后，意思是说”我Client端没有数据要发给你了”（此时的Client是处于FIN_WAIT状态），但是如果你还有数据没有发送完成，则不必急着关闭Socket，可以继续发送数据。所以你先发送ACK，”告诉Client端，你的请求我收到了，但是我还没准备好，请继续你等我的消息”。这个时候Client端就进入FIN_WAIT状态，继续等待Server端的FIN报文。当Server端确定数据已发送完成，则向Client端发送FIN报文，”告诉Client端，好了，我这边数据发完了，准备好关闭连接了”。Client端收到FIN报文后，”就知道可以关闭连接了，但是他还是不相信网络，怕Server端不知道要关闭，所以发送ACK后进入TIME_WAIT状态，如果Server端没有收到ACK则可以重传。“，Server端收到ACK后，”就知道可以断开连接了”。Client端等待了2MSL后依然没有收到回复，则证明Server端已正常关闭，那好，我Client端也可以关闭连接了。Ok，TCP连接就这样关闭了！</p>\n<h2 id=\"什么是MSL\"><a href=\"#什么是MSL\" class=\"headerlink\" title=\"什么是MSL\"></a>什么是MSL</h2><pre><code>MSL是一个时间概念，指的是数据包在链路中的最大生存时间，如果超过这个时间，数据包就会被丢掉。主动发起断开连接的一方会在TIME_WAIT时等待2MSL，因为包要一个来回。所以有时候也称TIME_WAIT状态为2MSL状态。\n</code></pre><h2 id=\"什么时候哪一方会出现TIME-WAIT\"><a href=\"#什么时候哪一方会出现TIME-WAIT\" class=\"headerlink\" title=\"什么时候哪一方会出现TIME_WAIT\"></a>什么时候哪一方会出现TIME_WAIT</h2><pre><code>TCP四次挥手的时候主动发起FIN报文的一方会处于TIME_WAIT状态。\n</code></pre><h2 id=\"TIME-WAIT的好和坏\"><a href=\"#TIME-WAIT的好和坏\" class=\"headerlink\" title=\"TIME_WAIT的好和坏\"></a>TIME_WAIT的好和坏</h2><pre><code>TIME_WAIT这个东西有没有好处呢？那有没有坏处呢？\n答案是都有的。好处就是它保证了在断开连接之前数据传输的完整性；那坏处是什么呢？想象一下，如果是服务器主动发起的FIN报文，那它就会处于TIME_WAIT状态，那肯定就会占用一定系统资源。想象一下，如果并发量超级大的时候，那服务器岂不是会崩溃了。\n</code></pre><font color=\"#ff1201\">技术交流可加QQ群：<strong>774332965</strong><br></font>\n\n<font color=\"#ff1201\">微信订阅号同步：<strong>IT运维那点儿事</strong></font>\n\n<p><img src=\"http://dl-blog.laoxianyu.cn/weixindy.jpg\" alt=\"weixin\"></p>\n","excerpt":"<h2 id=\"TCP三次握手\"><a href=\"#TCP三次握手\" class=\"headerlink\" title=\"TCP三次握手\"></a>TCP三次握手</h2><pre><code>TCP三次握手；简单来说就是通信的双方建立可靠的连接之前必须要做的事情，就是在通信之前要做的事情。而我们常见的双方就是指的 客户端 ---- 服务器。\n</code></pre><p><strong>建立连接过程</strong><br><img src=\"http://dl-blog.laoxianyu.cn/tcp%E8%BF%9E%E6%8E%A5.png\" alt=\"tcp_lianjie\"><br>    首先client端发送连接请求报文，server段接受连接后回复ack报文，并为这次连接分配资源。client端接收到ack报文后也向server段发生ack报文，并分配资源，这样tcp连接就建立了。<br>","more":"<br>建立连接过后干嘛呢？那就是该干嘛干嘛呀，就可以传输数据了。</p>\n<h2 id=\"TCP四次挥手\"><a href=\"#TCP四次挥手\" class=\"headerlink\" title=\"TCP四次挥手\"></a>TCP四次挥手</h2><pre><code>TCP四次挥手：由于TCP协议的可靠性，所以它再结束通信之前也会有一个流程来确认数据已经传输完成，在网络线路当中没有残留的数据包。\n</code></pre><p><strong>断开连接过程</strong><br><img src=\"http://dl-blog.laoxianyu.cn/tcp%E6%8C%A5%E6%89%8B.png\" alt=\"tcp_duankai\"><br>    中断连接端可以是Client端，也可以是Server端。假设Client端发起中断连接请求，也就是发送FIN报文。Server端接到FIN报文后，意思是说”我Client端没有数据要发给你了”（此时的Client是处于FIN_WAIT状态），但是如果你还有数据没有发送完成，则不必急着关闭Socket，可以继续发送数据。所以你先发送ACK，”告诉Client端，你的请求我收到了，但是我还没准备好，请继续你等我的消息”。这个时候Client端就进入FIN_WAIT状态，继续等待Server端的FIN报文。当Server端确定数据已发送完成，则向Client端发送FIN报文，”告诉Client端，好了，我这边数据发完了，准备好关闭连接了”。Client端收到FIN报文后，”就知道可以关闭连接了，但是他还是不相信网络，怕Server端不知道要关闭，所以发送ACK后进入TIME_WAIT状态，如果Server端没有收到ACK则可以重传。“，Server端收到ACK后，”就知道可以断开连接了”。Client端等待了2MSL后依然没有收到回复，则证明Server端已正常关闭，那好，我Client端也可以关闭连接了。Ok，TCP连接就这样关闭了！</p>\n<h2 id=\"什么是MSL\"><a href=\"#什么是MSL\" class=\"headerlink\" title=\"什么是MSL\"></a>什么是MSL</h2><pre><code>MSL是一个时间概念，指的是数据包在链路中的最大生存时间，如果超过这个时间，数据包就会被丢掉。主动发起断开连接的一方会在TIME_WAIT时等待2MSL，因为包要一个来回。所以有时候也称TIME_WAIT状态为2MSL状态。\n</code></pre><h2 id=\"什么时候哪一方会出现TIME-WAIT\"><a href=\"#什么时候哪一方会出现TIME-WAIT\" class=\"headerlink\" title=\"什么时候哪一方会出现TIME_WAIT\"></a>什么时候哪一方会出现TIME_WAIT</h2><pre><code>TCP四次挥手的时候主动发起FIN报文的一方会处于TIME_WAIT状态。\n</code></pre><h2 id=\"TIME-WAIT的好和坏\"><a href=\"#TIME-WAIT的好和坏\" class=\"headerlink\" title=\"TIME_WAIT的好和坏\"></a>TIME_WAIT的好和坏</h2><pre><code>TIME_WAIT这个东西有没有好处呢？那有没有坏处呢？\n答案是都有的。好处就是它保证了在断开连接之前数据传输的完整性；那坏处是什么呢？想象一下，如果是服务器主动发起的FIN报文，那它就会处于TIME_WAIT状态，那肯定就会占用一定系统资源。想象一下，如果并发量超级大的时候，那服务器岂不是会崩溃了。\n</code></pre><font color=#ff1201>技术交流可加QQ群：<strong>774332965</strong><br></font>\n\n<font color=#ff1201>微信订阅号同步：<strong>IT运维那点儿事</strong></font>\n\n<p><img src=\"http://dl-blog.laoxianyu.cn/weixindy.jpg\" alt=\"weixin\"></p>"},{"layout":"photo","title":"LaoXianYu Test!","date":"2016-11-10T14:47:12.000Z","photos":["http://dl-blog.laoxianyu.cn/DSC_1173.JPG"],"_content":"\n**这是编码的测试**\n\n__编码测试__\n大家好\n\n\n<font color=#ff1201>技术交流可加QQ群：**774332965**<br></font>\n\n<font color=#ff1201>微信订阅号同步：**IT运维那点儿事**</font>\n\n![weixin](http://dl-blog.laoxianyu.cn/weixindy.jpg)\n\n","source":"_posts/test.md","raw":"---\nlayout: photo\ntitle: LaoXianYu Test!\ndate: 2016-11-10 22:47:12\ncategories: test\ntags: test!\nphotos: \n- http://dl-blog.laoxianyu.cn/DSC_1173.JPG\n---\n\n**这是编码的测试**\n\n__编码测试__\n大家好\n\n\n<font color=#ff1201>技术交流可加QQ群：**774332965**<br></font>\n\n<font color=#ff1201>微信订阅号同步：**IT运维那点儿事**</font>\n\n![weixin](http://dl-blog.laoxianyu.cn/weixindy.jpg)\n\n","slug":"test","published":1,"updated":"2019-03-09T15:46:09.098Z","comments":1,"link":"","_id":"cjt1o6yh100179symarcp9bbw","content":"<p><strong>这是编码的测试</strong></p>\n<p><strong>编码测试</strong><br>大家好</p>\n<font color=\"#ff1201\">技术交流可加QQ群：<strong>774332965</strong><br></font>\n\n<font color=\"#ff1201\">微信订阅号同步：<strong>IT运维那点儿事</strong></font>\n\n<p><img src=\"http://dl-blog.laoxianyu.cn/weixindy.jpg\" alt=\"weixin\"></p>\n","excerpt":"","more":"<p><strong>这是编码的测试</strong></p>\n<p><strong>编码测试</strong><br>大家好</p>\n<font color=#ff1201>技术交流可加QQ群：<strong>774332965</strong><br></font>\n\n<font color=#ff1201>微信订阅号同步：<strong>IT运维那点儿事</strong></font>\n\n<p><img src=\"http://dl-blog.laoxianyu.cn/weixindy.jpg\" alt=\"weixin\"></p>\n"},{"title":"traefik在kubernetes中的应用","abbrlink":"208297ce","date":"2018-09-10T14:08:46.000Z","_content":"# 目的：\n通过本篇文章，能够简单了解和掌握Traefik在Kubernetes中的应用\n\n如果不了解ingress和ingress-controller概念，请先看前一篇文章。http://km.oa.dragonest.com/x/RoFf\n\n# traefik介绍：\n开源的微服务网关服务，支持Mesos、Docker、Rancher、Kubernetes等等，也支持直接部署在物理服务器。能够实现负载均衡、HTTPS、自动更新Ingerss配置等等\n\n<!-- more -->\n# traefik部署：\n## traefik-deployment部署\n```\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: traefik-ingress-controller\n  namespace: traefik\n  labels:\n    k8s-app: traefik-ingress-lb\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      k8s-app: traefik-ingress-lb\n  template:\n    metadata:\n      labels:\n        k8s-app: traefik-ingress-lb\n        name: traefik-ingress-lb\n    spec:\n      nodeSelector:\n        traefik-controller-qa: \"yes\"\n      serviceAccountName: traefik-ingress-controller\n      terminationGracePeriodSeconds: 60\n      volumes:\n      - name: ssl\n        secret:\n          secretName: traefik-cert\n      - name: config\n        configMap:\n          name: traefik-conf\n      containers:\n      - image: traefik\n        name: traefik-ingress-lb\n        volumeMounts:\n        - mountPath: \"/ssl\"\n          name: \"ssl\"\n        - mountPath: \"/config\"\n          name: \"config\"\n        ports:\n        - name: http\n          containerPort: 80\n        - name: admin\n          containerPort: 8080\n        - name: https\n          containerPort: 443\n        args:\n        - --configFile=/config/traefik.toml\n        - --web\n        - --kubernetes\n        - --logLevel=INFO\n```\n\n## traefik-svc部署\n``` yaml\napiVersion: v1\nkind: Service\nmetadata:\n  name: traefik-ingress-service\n  namespace: traefik\nspec:\n  selector:\n    k8s-app: traefik-ingress-lb\n  ports:\n    - protocol: TCP\n      port: 80\n      name: web\n    - protocol: TCP\n      port: 8080\n      name: admin\n    - protocol: TCP\n      port: 443\n      name: https\n  type: LoadBalancer\n```\n其他证书、secret、configmap、rbac编排请见文章末尾链接！\n\n# 实例应用：\n该案例中使用website的一个demo站点做为测试，站点内容见： http://website-dev-demo.dragonest.com\n\n案例效果：通过定义一个website-test-ingress来实现自动跳转至https和http basic认证。测试域名使用 mcm.hifiveai.com\n\n## website-test-ingress部署\n\n```yaml\napiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: website-test-ingress\n  namespace: website-dev\n  annotations:\n    kubernetes.io/ingress.class: traefik\n    traefik.ingress.kubernetes.io/redirect-entry-point: https\n    ingress.kubernetes.io/auth-type: basic\n    ingress.kubernetes.io/auth-secret: website-test-secret\nspec:\n  rules:\n  - host: mcm.hifiveai.com\n    http:\n      paths:\n      - path: /\n        backend:\n          serviceName: website-demo-svc\n          servicePort: http\n  tls:\n    - secretName: website-test-secret-ssl\n```\n\n## website-test-secret部署\n```yaml\napiVersion: v1\nkind: Secret\nmetadata:\n  name: website-test-secret\n  namespace: website-dev\ntype: Opaque\ndata:\n  auth: xxx\n```\nxxx为账号密码的base64编码，在 linux 中使用 htpasswd 命令可以生成。如：\n![image2018-8-10_11-47-35.png](http://dl-blog.laoxianyu.cn/image2018-8-10_11-47-35.png)\n\n## website-test-secret-ssl部署\n``` yaml\napiVersion: v1\nkind: Secret\nmetadata:\n  name: website-test-secret-ssl\n  namespace: website-dev\ntype: Opaque\ndata:\n  tls.crt: xxx\n  tls.key: xxx\n```\nxxx为mcm.hifiveai.com域名证书的base64编码\n\n# 实际效果：\n![image2018-8-10_11-52-47.png](http://dl-blog.laoxianyu.cn/image2018-8-10_11-52-47.png)\n![image2018-8-10_11-53-33.png](http://dl-blog.laoxianyu.cn/image2018-8-10_11-53-33.png)\n\n\n\n# Traefik常用ingress注解(annotaions)：\n\n注解 | 作用\n---|---\ntraefik.ingress.kubernetes.io/redirect-entry-point: https |跳转至 Https   302\ningress.kubernetes.io/ssl-redirect: \"true\" |跳转至 Https   301\ningress.kubernetes.io/ssl-temporary-redirect:\"true\" | 跳转至 Https   302 \ntraefik.ingress.kubernetes.io/redirect-regex:^http://localhost/(.*) \\n traefik.ingress.kubernetes.io/redirect-replacement: http://mydomain/$1 | 重定向到其他域名\ntraefik.backend.loadbalancer.sticky: \"true\" |长连接（弃用）\ntraefik.ingress.kubernetes.io/affinity: \"true\" | 长连接\ntraefik.ingress.kubernetes.io/load-balancer-method: drr | 负载均衡算法  wrr / drr\ningress.kubernetes.io/custom-request-headers: EXPR \\n ingress.kubernetes.io/custom-response-headers: EXP | 定制头部 HEADER:value||HEADER2:value2\ningress.kubernetes.io/allowed-hosts: EXPR | 访问控制  Host1,Host2\ningress.kubernetes.io/auth-type: basic | 认证方法，只有basic\ningress.kubernetes.io/auth-secret: website-test-secret | 认证secret。可用 htpasswd 生成\n\n\ntraefik部署编排：https://gitlab.ilongyuan.cn/ops/k8s-compose/tree/master/website/traefik\n\ntraefik测试实例编排：https://gitlab.ilongyuan.cn/ops/k8s-compose/tree/master/website/test\n\ntraefik官网：https://docs.traefik.io/\n\n\n<font color=#ff1201>技术交流可加QQ群：**774332965**<br></font>\n\n<font color=#ff1201>微信订阅号同步：**IT运维那点儿事**</font>\n\n![weixin](http://dl-blog.laoxianyu.cn/weixindy.jpg)\n\n","source":"_posts/traefik在kubernetes中的应用.md","raw":"---\ntitle: traefik在kubernetes中的应用\ntags:\n  - kubernetes\n  - ingress\n  - traefik\nabbrlink: 208297ce\ndate: 2018-09-10 22:08:46\ncategories: [kubernetes]\n---\n# 目的：\n通过本篇文章，能够简单了解和掌握Traefik在Kubernetes中的应用\n\n如果不了解ingress和ingress-controller概念，请先看前一篇文章。http://km.oa.dragonest.com/x/RoFf\n\n# traefik介绍：\n开源的微服务网关服务，支持Mesos、Docker、Rancher、Kubernetes等等，也支持直接部署在物理服务器。能够实现负载均衡、HTTPS、自动更新Ingerss配置等等\n\n<!-- more -->\n# traefik部署：\n## traefik-deployment部署\n```\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: traefik-ingress-controller\n  namespace: traefik\n  labels:\n    k8s-app: traefik-ingress-lb\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      k8s-app: traefik-ingress-lb\n  template:\n    metadata:\n      labels:\n        k8s-app: traefik-ingress-lb\n        name: traefik-ingress-lb\n    spec:\n      nodeSelector:\n        traefik-controller-qa: \"yes\"\n      serviceAccountName: traefik-ingress-controller\n      terminationGracePeriodSeconds: 60\n      volumes:\n      - name: ssl\n        secret:\n          secretName: traefik-cert\n      - name: config\n        configMap:\n          name: traefik-conf\n      containers:\n      - image: traefik\n        name: traefik-ingress-lb\n        volumeMounts:\n        - mountPath: \"/ssl\"\n          name: \"ssl\"\n        - mountPath: \"/config\"\n          name: \"config\"\n        ports:\n        - name: http\n          containerPort: 80\n        - name: admin\n          containerPort: 8080\n        - name: https\n          containerPort: 443\n        args:\n        - --configFile=/config/traefik.toml\n        - --web\n        - --kubernetes\n        - --logLevel=INFO\n```\n\n## traefik-svc部署\n``` yaml\napiVersion: v1\nkind: Service\nmetadata:\n  name: traefik-ingress-service\n  namespace: traefik\nspec:\n  selector:\n    k8s-app: traefik-ingress-lb\n  ports:\n    - protocol: TCP\n      port: 80\n      name: web\n    - protocol: TCP\n      port: 8080\n      name: admin\n    - protocol: TCP\n      port: 443\n      name: https\n  type: LoadBalancer\n```\n其他证书、secret、configmap、rbac编排请见文章末尾链接！\n\n# 实例应用：\n该案例中使用website的一个demo站点做为测试，站点内容见： http://website-dev-demo.dragonest.com\n\n案例效果：通过定义一个website-test-ingress来实现自动跳转至https和http basic认证。测试域名使用 mcm.hifiveai.com\n\n## website-test-ingress部署\n\n```yaml\napiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: website-test-ingress\n  namespace: website-dev\n  annotations:\n    kubernetes.io/ingress.class: traefik\n    traefik.ingress.kubernetes.io/redirect-entry-point: https\n    ingress.kubernetes.io/auth-type: basic\n    ingress.kubernetes.io/auth-secret: website-test-secret\nspec:\n  rules:\n  - host: mcm.hifiveai.com\n    http:\n      paths:\n      - path: /\n        backend:\n          serviceName: website-demo-svc\n          servicePort: http\n  tls:\n    - secretName: website-test-secret-ssl\n```\n\n## website-test-secret部署\n```yaml\napiVersion: v1\nkind: Secret\nmetadata:\n  name: website-test-secret\n  namespace: website-dev\ntype: Opaque\ndata:\n  auth: xxx\n```\nxxx为账号密码的base64编码，在 linux 中使用 htpasswd 命令可以生成。如：\n![image2018-8-10_11-47-35.png](http://dl-blog.laoxianyu.cn/image2018-8-10_11-47-35.png)\n\n## website-test-secret-ssl部署\n``` yaml\napiVersion: v1\nkind: Secret\nmetadata:\n  name: website-test-secret-ssl\n  namespace: website-dev\ntype: Opaque\ndata:\n  tls.crt: xxx\n  tls.key: xxx\n```\nxxx为mcm.hifiveai.com域名证书的base64编码\n\n# 实际效果：\n![image2018-8-10_11-52-47.png](http://dl-blog.laoxianyu.cn/image2018-8-10_11-52-47.png)\n![image2018-8-10_11-53-33.png](http://dl-blog.laoxianyu.cn/image2018-8-10_11-53-33.png)\n\n\n\n# Traefik常用ingress注解(annotaions)：\n\n注解 | 作用\n---|---\ntraefik.ingress.kubernetes.io/redirect-entry-point: https |跳转至 Https   302\ningress.kubernetes.io/ssl-redirect: \"true\" |跳转至 Https   301\ningress.kubernetes.io/ssl-temporary-redirect:\"true\" | 跳转至 Https   302 \ntraefik.ingress.kubernetes.io/redirect-regex:^http://localhost/(.*) \\n traefik.ingress.kubernetes.io/redirect-replacement: http://mydomain/$1 | 重定向到其他域名\ntraefik.backend.loadbalancer.sticky: \"true\" |长连接（弃用）\ntraefik.ingress.kubernetes.io/affinity: \"true\" | 长连接\ntraefik.ingress.kubernetes.io/load-balancer-method: drr | 负载均衡算法  wrr / drr\ningress.kubernetes.io/custom-request-headers: EXPR \\n ingress.kubernetes.io/custom-response-headers: EXP | 定制头部 HEADER:value||HEADER2:value2\ningress.kubernetes.io/allowed-hosts: EXPR | 访问控制  Host1,Host2\ningress.kubernetes.io/auth-type: basic | 认证方法，只有basic\ningress.kubernetes.io/auth-secret: website-test-secret | 认证secret。可用 htpasswd 生成\n\n\ntraefik部署编排：https://gitlab.ilongyuan.cn/ops/k8s-compose/tree/master/website/traefik\n\ntraefik测试实例编排：https://gitlab.ilongyuan.cn/ops/k8s-compose/tree/master/website/test\n\ntraefik官网：https://docs.traefik.io/\n\n\n<font color=#ff1201>技术交流可加QQ群：**774332965**<br></font>\n\n<font color=#ff1201>微信订阅号同步：**IT运维那点儿事**</font>\n\n![weixin](http://dl-blog.laoxianyu.cn/weixindy.jpg)\n\n","slug":"traefik在kubernetes中的应用","published":1,"updated":"2019-03-09T15:46:09.102Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt1o6yh4001a9symxor1pn29","content":"<h1 id=\"目的：\"><a href=\"#目的：\" class=\"headerlink\" title=\"目的：\"></a>目的：</h1><p>通过本篇文章，能够简单了解和掌握Traefik在Kubernetes中的应用</p>\n<p>如果不了解ingress和ingress-controller概念，请先看前一篇文章。<a href=\"http://km.oa.dragonest.com/x/RoFf\" target=\"_blank\" rel=\"external\">http://km.oa.dragonest.com/x/RoFf</a></p>\n<h1 id=\"traefik介绍：\"><a href=\"#traefik介绍：\" class=\"headerlink\" title=\"traefik介绍：\"></a>traefik介绍：</h1><p>开源的微服务网关服务，支持Mesos、Docker、Rancher、Kubernetes等等，也支持直接部署在物理服务器。能够实现负载均衡、HTTPS、自动更新Ingerss配置等等</p>\n<a id=\"more\"></a>\n<h1 id=\"traefik部署：\"><a href=\"#traefik部署：\" class=\"headerlink\" title=\"traefik部署：\"></a>traefik部署：</h1><h2 id=\"traefik-deployment部署\"><a href=\"#traefik-deployment部署\" class=\"headerlink\" title=\"traefik-deployment部署\"></a>traefik-deployment部署</h2><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">apiVersion:</span> extensions/v1beta1</div><div class=\"line\"><span class=\"attr\">kind:</span> Deployment</div><div class=\"line\"><span class=\"attr\">metadata:</span></div><div class=\"line\"><span class=\"attr\">  name:</span> traefik-ingress-controller</div><div class=\"line\"><span class=\"attr\">  namespace:</span> traefik</div><div class=\"line\"><span class=\"attr\">  labels:</span></div><div class=\"line\"><span class=\"attr\">    k8s-app:</span> traefik-ingress-lb</div><div class=\"line\"><span class=\"attr\">spec:</span></div><div class=\"line\"><span class=\"attr\">  replicas:</span> <span class=\"number\">1</span></div><div class=\"line\"><span class=\"attr\">  selector:</span></div><div class=\"line\"><span class=\"attr\">    matchLabels:</span></div><div class=\"line\"><span class=\"attr\">      k8s-app:</span> traefik-ingress-lb</div><div class=\"line\"><span class=\"attr\">  template:</span></div><div class=\"line\"><span class=\"attr\">    metadata:</span></div><div class=\"line\"><span class=\"attr\">      labels:</span></div><div class=\"line\"><span class=\"attr\">        k8s-app:</span> traefik-ingress-lb</div><div class=\"line\"><span class=\"attr\">        name:</span> traefik-ingress-lb</div><div class=\"line\"><span class=\"attr\">    spec:</span></div><div class=\"line\"><span class=\"attr\">      nodeSelector:</span></div><div class=\"line\"><span class=\"attr\">        traefik-controller-qa:</span> <span class=\"string\">\"yes\"</span></div><div class=\"line\"><span class=\"attr\">      serviceAccountName:</span> traefik-ingress-controller</div><div class=\"line\"><span class=\"attr\">      terminationGracePeriodSeconds:</span> <span class=\"number\">60</span></div><div class=\"line\"><span class=\"attr\">      volumes:</span></div><div class=\"line\"><span class=\"attr\">      - name:</span> ssl</div><div class=\"line\"><span class=\"attr\">        secret:</span></div><div class=\"line\"><span class=\"attr\">          secretName:</span> traefik-cert</div><div class=\"line\"><span class=\"attr\">      - name:</span> config</div><div class=\"line\"><span class=\"attr\">        configMap:</span></div><div class=\"line\"><span class=\"attr\">          name:</span> traefik-conf</div><div class=\"line\"><span class=\"attr\">      containers:</span></div><div class=\"line\"><span class=\"attr\">      - image:</span> traefik</div><div class=\"line\"><span class=\"attr\">        name:</span> traefik-ingress-lb</div><div class=\"line\"><span class=\"attr\">        volumeMounts:</span></div><div class=\"line\"><span class=\"attr\">        - mountPath:</span> <span class=\"string\">\"/ssl\"</span></div><div class=\"line\"><span class=\"attr\">          name:</span> <span class=\"string\">\"ssl\"</span></div><div class=\"line\"><span class=\"attr\">        - mountPath:</span> <span class=\"string\">\"/config\"</span></div><div class=\"line\"><span class=\"attr\">          name:</span> <span class=\"string\">\"config\"</span></div><div class=\"line\"><span class=\"attr\">        ports:</span></div><div class=\"line\"><span class=\"attr\">        - name:</span> http</div><div class=\"line\"><span class=\"attr\">          containerPort:</span> <span class=\"number\">80</span></div><div class=\"line\"><span class=\"attr\">        - name:</span> admin</div><div class=\"line\"><span class=\"attr\">          containerPort:</span> <span class=\"number\">8080</span></div><div class=\"line\"><span class=\"attr\">        - name:</span> https</div><div class=\"line\"><span class=\"attr\">          containerPort:</span> <span class=\"number\">443</span></div><div class=\"line\"><span class=\"attr\">        args:</span></div><div class=\"line\"><span class=\"bullet\">        -</span> --configFile=/config/traefik.toml</div><div class=\"line\"><span class=\"bullet\">        -</span> --web</div><div class=\"line\"><span class=\"bullet\">        -</span> --kubernetes</div><div class=\"line\"><span class=\"bullet\">        -</span> --logLevel=INFO</div></pre></td></tr></table></figure>\n<h2 id=\"traefik-svc部署\"><a href=\"#traefik-svc部署\" class=\"headerlink\" title=\"traefik-svc部署\"></a>traefik-svc部署</h2><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">apiVersion:</span> v1</div><div class=\"line\"><span class=\"attr\">kind:</span> Service</div><div class=\"line\"><span class=\"attr\">metadata:</span></div><div class=\"line\"><span class=\"attr\">  name:</span> traefik-ingress-service</div><div class=\"line\"><span class=\"attr\">  namespace:</span> traefik</div><div class=\"line\"><span class=\"attr\">spec:</span></div><div class=\"line\"><span class=\"attr\">  selector:</span></div><div class=\"line\"><span class=\"attr\">    k8s-app:</span> traefik-ingress-lb</div><div class=\"line\"><span class=\"attr\">  ports:</span></div><div class=\"line\"><span class=\"attr\">    - protocol:</span> TCP</div><div class=\"line\"><span class=\"attr\">      port:</span> <span class=\"number\">80</span></div><div class=\"line\"><span class=\"attr\">      name:</span> web</div><div class=\"line\"><span class=\"attr\">    - protocol:</span> TCP</div><div class=\"line\"><span class=\"attr\">      port:</span> <span class=\"number\">8080</span></div><div class=\"line\"><span class=\"attr\">      name:</span> admin</div><div class=\"line\"><span class=\"attr\">    - protocol:</span> TCP</div><div class=\"line\"><span class=\"attr\">      port:</span> <span class=\"number\">443</span></div><div class=\"line\"><span class=\"attr\">      name:</span> https</div><div class=\"line\"><span class=\"attr\">  type:</span> LoadBalancer</div></pre></td></tr></table></figure>\n<p>其他证书、secret、configmap、rbac编排请见文章末尾链接！</p>\n<h1 id=\"实例应用：\"><a href=\"#实例应用：\" class=\"headerlink\" title=\"实例应用：\"></a>实例应用：</h1><p>该案例中使用website的一个demo站点做为测试，站点内容见： <a href=\"http://website-dev-demo.dragonest.com\" target=\"_blank\" rel=\"external\">http://website-dev-demo.dragonest.com</a></p>\n<p>案例效果：通过定义一个website-test-ingress来实现自动跳转至https和http basic认证。测试域名使用 mcm.hifiveai.com</p>\n<h2 id=\"website-test-ingress部署\"><a href=\"#website-test-ingress部署\" class=\"headerlink\" title=\"website-test-ingress部署\"></a>website-test-ingress部署</h2><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">apiVersion:</span> extensions/v1beta1</div><div class=\"line\"><span class=\"attr\">kind:</span> Ingress</div><div class=\"line\"><span class=\"attr\">metadata:</span></div><div class=\"line\"><span class=\"attr\">  name:</span> website-test-ingress</div><div class=\"line\"><span class=\"attr\">  namespace:</span> website-dev</div><div class=\"line\"><span class=\"attr\">  annotations:</span></div><div class=\"line\">    kubernetes.io/ingress.class: traefik</div><div class=\"line\">    traefik.ingress.kubernetes.io/redirect-entry-point: https</div><div class=\"line\">    ingress.kubernetes.io/auth-type: basic</div><div class=\"line\">    ingress.kubernetes.io/auth-secret: website-test-secret</div><div class=\"line\"><span class=\"attr\">spec:</span></div><div class=\"line\"><span class=\"attr\">  rules:</span></div><div class=\"line\"><span class=\"attr\">  - host:</span> mcm.hifiveai.com</div><div class=\"line\"><span class=\"attr\">    http:</span></div><div class=\"line\"><span class=\"attr\">      paths:</span></div><div class=\"line\"><span class=\"attr\">      - path:</span> /</div><div class=\"line\"><span class=\"attr\">        backend:</span></div><div class=\"line\"><span class=\"attr\">          serviceName:</span> website-demo-svc</div><div class=\"line\"><span class=\"attr\">          servicePort:</span> http</div><div class=\"line\"><span class=\"attr\">  tls:</span></div><div class=\"line\"><span class=\"attr\">    - secretName:</span> website-test-secret-ssl</div></pre></td></tr></table></figure>\n<h2 id=\"website-test-secret部署\"><a href=\"#website-test-secret部署\" class=\"headerlink\" title=\"website-test-secret部署\"></a>website-test-secret部署</h2><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">apiVersion:</span> v1</div><div class=\"line\"><span class=\"attr\">kind:</span> Secret</div><div class=\"line\"><span class=\"attr\">metadata:</span></div><div class=\"line\"><span class=\"attr\">  name:</span> website-test-secret</div><div class=\"line\"><span class=\"attr\">  namespace:</span> website-dev</div><div class=\"line\"><span class=\"attr\">type:</span> Opaque</div><div class=\"line\"><span class=\"attr\">data:</span></div><div class=\"line\"><span class=\"attr\">  auth:</span> xxx</div></pre></td></tr></table></figure>\n<p>xxx为账号密码的base64编码，在 linux 中使用 htpasswd 命令可以生成。如：<br><img src=\"http://dl-blog.laoxianyu.cn/image2018-8-10_11-47-35.png\" alt=\"image2018-8-10_11-47-35.png\"></p>\n<h2 id=\"website-test-secret-ssl部署\"><a href=\"#website-test-secret-ssl部署\" class=\"headerlink\" title=\"website-test-secret-ssl部署\"></a>website-test-secret-ssl部署</h2><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">apiVersion:</span> v1</div><div class=\"line\"><span class=\"attr\">kind:</span> Secret</div><div class=\"line\"><span class=\"attr\">metadata:</span></div><div class=\"line\"><span class=\"attr\">  name:</span> website-test-secret-ssl</div><div class=\"line\"><span class=\"attr\">  namespace:</span> website-dev</div><div class=\"line\"><span class=\"attr\">type:</span> Opaque</div><div class=\"line\"><span class=\"attr\">data:</span></div><div class=\"line\">  tls.crt: xxx</div><div class=\"line\">  tls.key: xxx</div></pre></td></tr></table></figure>\n<p>xxx为mcm.hifiveai.com域名证书的base64编码</p>\n<h1 id=\"实际效果：\"><a href=\"#实际效果：\" class=\"headerlink\" title=\"实际效果：\"></a>实际效果：</h1><p><img src=\"http://dl-blog.laoxianyu.cn/image2018-8-10_11-52-47.png\" alt=\"image2018-8-10_11-52-47.png\"><br><img src=\"http://dl-blog.laoxianyu.cn/image2018-8-10_11-53-33.png\" alt=\"image2018-8-10_11-53-33.png\"></p>\n<h1 id=\"Traefik常用ingress注解-annotaions-：\"><a href=\"#Traefik常用ingress注解-annotaions-：\" class=\"headerlink\" title=\"Traefik常用ingress注解(annotaions)：\"></a>Traefik常用ingress注解(annotaions)：</h1><table>\n<thead>\n<tr>\n<th>注解</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>traefik.ingress.kubernetes.io/redirect-entry-point: https</td>\n<td>跳转至 Https   302</td>\n</tr>\n<tr>\n<td>ingress.kubernetes.io/ssl-redirect: “true”</td>\n<td>跳转至 Https   301</td>\n</tr>\n<tr>\n<td>ingress.kubernetes.io/ssl-temporary-redirect:”true”</td>\n<td>跳转至 Https   302 </td>\n</tr>\n<tr>\n<td>traefik.ingress.kubernetes.io/redirect-regex:^<a href=\"http://localhost/(.*\" target=\"_blank\" rel=\"external\">http://localhost/(.*</a>) \\n traefik.ingress.kubernetes.io/redirect-replacement: <a href=\"http://mydomain/$1\" target=\"_blank\" rel=\"external\">http://mydomain/$1</a></td>\n<td>重定向到其他域名</td>\n</tr>\n<tr>\n<td>traefik.backend.loadbalancer.sticky: “true”</td>\n<td>长连接（弃用）</td>\n</tr>\n<tr>\n<td>traefik.ingress.kubernetes.io/affinity: “true”</td>\n<td>长连接</td>\n</tr>\n<tr>\n<td>traefik.ingress.kubernetes.io/load-balancer-method: drr</td>\n<td>负载均衡算法  wrr / drr</td>\n</tr>\n<tr>\n<td>ingress.kubernetes.io/custom-request-headers: EXPR \\n ingress.kubernetes.io/custom-response-headers: EXP</td>\n<td>定制头部 HEADER:value</td>\n<td></td>\n<td>HEADER2:value2</td>\n</tr>\n<tr>\n<td>ingress.kubernetes.io/allowed-hosts: EXPR</td>\n<td>访问控制  Host1,Host2</td>\n</tr>\n<tr>\n<td>ingress.kubernetes.io/auth-type: basic</td>\n<td>认证方法，只有basic</td>\n</tr>\n<tr>\n<td>ingress.kubernetes.io/auth-secret: website-test-secret</td>\n<td>认证secret。可用 htpasswd 生成</td>\n</tr>\n</tbody>\n</table>\n<p>traefik部署编排：<a href=\"https://gitlab.ilongyuan.cn/ops/k8s-compose/tree/master/website/traefik\" target=\"_blank\" rel=\"external\">https://gitlab.ilongyuan.cn/ops/k8s-compose/tree/master/website/traefik</a></p>\n<p>traefik测试实例编排：<a href=\"https://gitlab.ilongyuan.cn/ops/k8s-compose/tree/master/website/test\" target=\"_blank\" rel=\"external\">https://gitlab.ilongyuan.cn/ops/k8s-compose/tree/master/website/test</a></p>\n<p>traefik官网：<a href=\"https://docs.traefik.io/\" target=\"_blank\" rel=\"external\">https://docs.traefik.io/</a></p>\n<font color=\"#ff1201\">技术交流可加QQ群：<strong>774332965</strong><br></font>\n\n<font color=\"#ff1201\">微信订阅号同步：<strong>IT运维那点儿事</strong></font>\n\n<p><img src=\"http://dl-blog.laoxianyu.cn/weixindy.jpg\" alt=\"weixin\"></p>\n","excerpt":"<h1 id=\"目的：\"><a href=\"#目的：\" class=\"headerlink\" title=\"目的：\"></a>目的：</h1><p>通过本篇文章，能够简单了解和掌握Traefik在Kubernetes中的应用</p>\n<p>如果不了解ingress和ingress-controller概念，请先看前一篇文章。<a href=\"http://km.oa.dragonest.com/x/RoFf\">http://km.oa.dragonest.com/x/RoFf</a></p>\n<h1 id=\"traefik介绍：\"><a href=\"#traefik介绍：\" class=\"headerlink\" title=\"traefik介绍：\"></a>traefik介绍：</h1><p>开源的微服务网关服务，支持Mesos、Docker、Rancher、Kubernetes等等，也支持直接部署在物理服务器。能够实现负载均衡、HTTPS、自动更新Ingerss配置等等</p>","more":"<h1 id=\"traefik部署：\"><a href=\"#traefik部署：\" class=\"headerlink\" title=\"traefik部署：\"></a>traefik部署：</h1><h2 id=\"traefik-deployment部署\"><a href=\"#traefik-deployment部署\" class=\"headerlink\" title=\"traefik-deployment部署\"></a>traefik-deployment部署</h2><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">apiVersion:</span> extensions/v1beta1</div><div class=\"line\"><span class=\"attr\">kind:</span> Deployment</div><div class=\"line\"><span class=\"attr\">metadata:</span></div><div class=\"line\"><span class=\"attr\">  name:</span> traefik-ingress-controller</div><div class=\"line\"><span class=\"attr\">  namespace:</span> traefik</div><div class=\"line\"><span class=\"attr\">  labels:</span></div><div class=\"line\"><span class=\"attr\">    k8s-app:</span> traefik-ingress-lb</div><div class=\"line\"><span class=\"attr\">spec:</span></div><div class=\"line\"><span class=\"attr\">  replicas:</span> <span class=\"number\">1</span></div><div class=\"line\"><span class=\"attr\">  selector:</span></div><div class=\"line\"><span class=\"attr\">    matchLabels:</span></div><div class=\"line\"><span class=\"attr\">      k8s-app:</span> traefik-ingress-lb</div><div class=\"line\"><span class=\"attr\">  template:</span></div><div class=\"line\"><span class=\"attr\">    metadata:</span></div><div class=\"line\"><span class=\"attr\">      labels:</span></div><div class=\"line\"><span class=\"attr\">        k8s-app:</span> traefik-ingress-lb</div><div class=\"line\"><span class=\"attr\">        name:</span> traefik-ingress-lb</div><div class=\"line\"><span class=\"attr\">    spec:</span></div><div class=\"line\"><span class=\"attr\">      nodeSelector:</span></div><div class=\"line\"><span class=\"attr\">        traefik-controller-qa:</span> <span class=\"string\">\"yes\"</span></div><div class=\"line\"><span class=\"attr\">      serviceAccountName:</span> traefik-ingress-controller</div><div class=\"line\"><span class=\"attr\">      terminationGracePeriodSeconds:</span> <span class=\"number\">60</span></div><div class=\"line\"><span class=\"attr\">      volumes:</span></div><div class=\"line\"><span class=\"attr\">      - name:</span> ssl</div><div class=\"line\"><span class=\"attr\">        secret:</span></div><div class=\"line\"><span class=\"attr\">          secretName:</span> traefik-cert</div><div class=\"line\"><span class=\"attr\">      - name:</span> config</div><div class=\"line\"><span class=\"attr\">        configMap:</span></div><div class=\"line\"><span class=\"attr\">          name:</span> traefik-conf</div><div class=\"line\"><span class=\"attr\">      containers:</span></div><div class=\"line\"><span class=\"attr\">      - image:</span> traefik</div><div class=\"line\"><span class=\"attr\">        name:</span> traefik-ingress-lb</div><div class=\"line\"><span class=\"attr\">        volumeMounts:</span></div><div class=\"line\"><span class=\"attr\">        - mountPath:</span> <span class=\"string\">\"/ssl\"</span></div><div class=\"line\"><span class=\"attr\">          name:</span> <span class=\"string\">\"ssl\"</span></div><div class=\"line\"><span class=\"attr\">        - mountPath:</span> <span class=\"string\">\"/config\"</span></div><div class=\"line\"><span class=\"attr\">          name:</span> <span class=\"string\">\"config\"</span></div><div class=\"line\"><span class=\"attr\">        ports:</span></div><div class=\"line\"><span class=\"attr\">        - name:</span> http</div><div class=\"line\"><span class=\"attr\">          containerPort:</span> <span class=\"number\">80</span></div><div class=\"line\"><span class=\"attr\">        - name:</span> admin</div><div class=\"line\"><span class=\"attr\">          containerPort:</span> <span class=\"number\">8080</span></div><div class=\"line\"><span class=\"attr\">        - name:</span> https</div><div class=\"line\"><span class=\"attr\">          containerPort:</span> <span class=\"number\">443</span></div><div class=\"line\"><span class=\"attr\">        args:</span></div><div class=\"line\"><span class=\"bullet\">        -</span> --configFile=/config/traefik.toml</div><div class=\"line\"><span class=\"bullet\">        -</span> --web</div><div class=\"line\"><span class=\"bullet\">        -</span> --kubernetes</div><div class=\"line\"><span class=\"bullet\">        -</span> --logLevel=INFO</div></pre></td></tr></table></figure>\n<h2 id=\"traefik-svc部署\"><a href=\"#traefik-svc部署\" class=\"headerlink\" title=\"traefik-svc部署\"></a>traefik-svc部署</h2><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">apiVersion:</span> v1</div><div class=\"line\"><span class=\"attr\">kind:</span> Service</div><div class=\"line\"><span class=\"attr\">metadata:</span></div><div class=\"line\"><span class=\"attr\">  name:</span> traefik-ingress-service</div><div class=\"line\"><span class=\"attr\">  namespace:</span> traefik</div><div class=\"line\"><span class=\"attr\">spec:</span></div><div class=\"line\"><span class=\"attr\">  selector:</span></div><div class=\"line\"><span class=\"attr\">    k8s-app:</span> traefik-ingress-lb</div><div class=\"line\"><span class=\"attr\">  ports:</span></div><div class=\"line\"><span class=\"attr\">    - protocol:</span> TCP</div><div class=\"line\"><span class=\"attr\">      port:</span> <span class=\"number\">80</span></div><div class=\"line\"><span class=\"attr\">      name:</span> web</div><div class=\"line\"><span class=\"attr\">    - protocol:</span> TCP</div><div class=\"line\"><span class=\"attr\">      port:</span> <span class=\"number\">8080</span></div><div class=\"line\"><span class=\"attr\">      name:</span> admin</div><div class=\"line\"><span class=\"attr\">    - protocol:</span> TCP</div><div class=\"line\"><span class=\"attr\">      port:</span> <span class=\"number\">443</span></div><div class=\"line\"><span class=\"attr\">      name:</span> https</div><div class=\"line\"><span class=\"attr\">  type:</span> LoadBalancer</div></pre></td></tr></table></figure>\n<p>其他证书、secret、configmap、rbac编排请见文章末尾链接！</p>\n<h1 id=\"实例应用：\"><a href=\"#实例应用：\" class=\"headerlink\" title=\"实例应用：\"></a>实例应用：</h1><p>该案例中使用website的一个demo站点做为测试，站点内容见： <a href=\"http://website-dev-demo.dragonest.com\">http://website-dev-demo.dragonest.com</a></p>\n<p>案例效果：通过定义一个website-test-ingress来实现自动跳转至https和http basic认证。测试域名使用 mcm.hifiveai.com</p>\n<h2 id=\"website-test-ingress部署\"><a href=\"#website-test-ingress部署\" class=\"headerlink\" title=\"website-test-ingress部署\"></a>website-test-ingress部署</h2><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">apiVersion:</span> extensions/v1beta1</div><div class=\"line\"><span class=\"attr\">kind:</span> Ingress</div><div class=\"line\"><span class=\"attr\">metadata:</span></div><div class=\"line\"><span class=\"attr\">  name:</span> website-test-ingress</div><div class=\"line\"><span class=\"attr\">  namespace:</span> website-dev</div><div class=\"line\"><span class=\"attr\">  annotations:</span></div><div class=\"line\">    kubernetes.io/ingress.class: traefik</div><div class=\"line\">    traefik.ingress.kubernetes.io/redirect-entry-point: https</div><div class=\"line\">    ingress.kubernetes.io/auth-type: basic</div><div class=\"line\">    ingress.kubernetes.io/auth-secret: website-test-secret</div><div class=\"line\"><span class=\"attr\">spec:</span></div><div class=\"line\"><span class=\"attr\">  rules:</span></div><div class=\"line\"><span class=\"attr\">  - host:</span> mcm.hifiveai.com</div><div class=\"line\"><span class=\"attr\">    http:</span></div><div class=\"line\"><span class=\"attr\">      paths:</span></div><div class=\"line\"><span class=\"attr\">      - path:</span> /</div><div class=\"line\"><span class=\"attr\">        backend:</span></div><div class=\"line\"><span class=\"attr\">          serviceName:</span> website-demo-svc</div><div class=\"line\"><span class=\"attr\">          servicePort:</span> http</div><div class=\"line\"><span class=\"attr\">  tls:</span></div><div class=\"line\"><span class=\"attr\">    - secretName:</span> website-test-secret-ssl</div></pre></td></tr></table></figure>\n<h2 id=\"website-test-secret部署\"><a href=\"#website-test-secret部署\" class=\"headerlink\" title=\"website-test-secret部署\"></a>website-test-secret部署</h2><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">apiVersion:</span> v1</div><div class=\"line\"><span class=\"attr\">kind:</span> Secret</div><div class=\"line\"><span class=\"attr\">metadata:</span></div><div class=\"line\"><span class=\"attr\">  name:</span> website-test-secret</div><div class=\"line\"><span class=\"attr\">  namespace:</span> website-dev</div><div class=\"line\"><span class=\"attr\">type:</span> Opaque</div><div class=\"line\"><span class=\"attr\">data:</span></div><div class=\"line\"><span class=\"attr\">  auth:</span> xxx</div></pre></td></tr></table></figure>\n<p>xxx为账号密码的base64编码，在 linux 中使用 htpasswd 命令可以生成。如：<br><img src=\"http://dl-blog.laoxianyu.cn/image2018-8-10_11-47-35.png\" alt=\"image2018-8-10_11-47-35.png\"></p>\n<h2 id=\"website-test-secret-ssl部署\"><a href=\"#website-test-secret-ssl部署\" class=\"headerlink\" title=\"website-test-secret-ssl部署\"></a>website-test-secret-ssl部署</h2><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">apiVersion:</span> v1</div><div class=\"line\"><span class=\"attr\">kind:</span> Secret</div><div class=\"line\"><span class=\"attr\">metadata:</span></div><div class=\"line\"><span class=\"attr\">  name:</span> website-test-secret-ssl</div><div class=\"line\"><span class=\"attr\">  namespace:</span> website-dev</div><div class=\"line\"><span class=\"attr\">type:</span> Opaque</div><div class=\"line\"><span class=\"attr\">data:</span></div><div class=\"line\">  tls.crt: xxx</div><div class=\"line\">  tls.key: xxx</div></pre></td></tr></table></figure>\n<p>xxx为mcm.hifiveai.com域名证书的base64编码</p>\n<h1 id=\"实际效果：\"><a href=\"#实际效果：\" class=\"headerlink\" title=\"实际效果：\"></a>实际效果：</h1><p><img src=\"http://dl-blog.laoxianyu.cn/image2018-8-10_11-52-47.png\" alt=\"image2018-8-10_11-52-47.png\"><br><img src=\"http://dl-blog.laoxianyu.cn/image2018-8-10_11-53-33.png\" alt=\"image2018-8-10_11-53-33.png\"></p>\n<h1 id=\"Traefik常用ingress注解-annotaions-：\"><a href=\"#Traefik常用ingress注解-annotaions-：\" class=\"headerlink\" title=\"Traefik常用ingress注解(annotaions)：\"></a>Traefik常用ingress注解(annotaions)：</h1><table>\n<thead>\n<tr>\n<th>注解</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>traefik.ingress.kubernetes.io/redirect-entry-point: https</td>\n<td>跳转至 Https   302</td>\n</tr>\n<tr>\n<td>ingress.kubernetes.io/ssl-redirect: “true”</td>\n<td>跳转至 Https   301</td>\n</tr>\n<tr>\n<td>ingress.kubernetes.io/ssl-temporary-redirect:”true”</td>\n<td>跳转至 Https   302 </td>\n</tr>\n<tr>\n<td>traefik.ingress.kubernetes.io/redirect-regex:^<a href=\"http://localhost/(.*\">http://localhost/(.*</a>) \\n traefik.ingress.kubernetes.io/redirect-replacement: <a href=\"http://mydomain/$1\">http://mydomain/$1</a></td>\n<td>重定向到其他域名</td>\n</tr>\n<tr>\n<td>traefik.backend.loadbalancer.sticky: “true”</td>\n<td>长连接（弃用）</td>\n</tr>\n<tr>\n<td>traefik.ingress.kubernetes.io/affinity: “true”</td>\n<td>长连接</td>\n</tr>\n<tr>\n<td>traefik.ingress.kubernetes.io/load-balancer-method: drr</td>\n<td>负载均衡算法  wrr / drr</td>\n</tr>\n<tr>\n<td>ingress.kubernetes.io/custom-request-headers: EXPR \\n ingress.kubernetes.io/custom-response-headers: EXP</td>\n<td>定制头部 HEADER:value</td>\n<td></td>\n<td>HEADER2:value2</td>\n</tr>\n<tr>\n<td>ingress.kubernetes.io/allowed-hosts: EXPR</td>\n<td>访问控制  Host1,Host2</td>\n</tr>\n<tr>\n<td>ingress.kubernetes.io/auth-type: basic</td>\n<td>认证方法，只有basic</td>\n</tr>\n<tr>\n<td>ingress.kubernetes.io/auth-secret: website-test-secret</td>\n<td>认证secret。可用 htpasswd 生成</td>\n</tr>\n</tbody>\n</table>\n<p>traefik部署编排：<a href=\"https://gitlab.ilongyuan.cn/ops/k8s-compose/tree/master/website/traefik\">https://gitlab.ilongyuan.cn/ops/k8s-compose/tree/master/website/traefik</a></p>\n<p>traefik测试实例编排：<a href=\"https://gitlab.ilongyuan.cn/ops/k8s-compose/tree/master/website/test\">https://gitlab.ilongyuan.cn/ops/k8s-compose/tree/master/website/test</a></p>\n<p>traefik官网：<a href=\"https://docs.traefik.io/\">https://docs.traefik.io/</a></p>\n<font color=#ff1201>技术交流可加QQ群：<strong>774332965</strong><br></font>\n\n<font color=#ff1201>微信订阅号同步：<strong>IT运维那点儿事</strong></font>\n\n<p><img src=\"http://dl-blog.laoxianyu.cn/weixindy.jpg\" alt=\"weixin\"></p>"},{"title":"使用ansible挂盘","abbrlink":"8b4a8eab","date":"2017-03-23T11:03:51.000Z","_content":"\n- hosts: new\n  gather_facts: False\n  tasks:\n  - filesystem:\n      fstype: ext4\n      dev: /dev/vdb\n<!-- more -->\n  - mount:\n      name: /data\n      src: /dev/vdb\n      fstype: ext4\n      state: mounted\n\n  - command: mount -a\n\nANSIBLE_HOST_KEY_CHECKING=False ansible-playbook   -i mount_host.ini -u root -k mount_host.playbook\n\n<font color=#ff1201>技术交流可加QQ群：**774332965**<br></font>\n\n<font color=#ff1201>微信订阅号同步：**IT运维那点儿事**</font>\n\n![weixin](http://dl-blog.laoxianyu.cn/weixindy.jpg)\n\n","source":"_posts/使用ansible挂盘.md","raw":"---\ntitle: 使用ansible挂盘\nabbrlink: 8b4a8eab\ndate: 2017-03-23 19:03:51\ncategories: 运维\ntags:\n---\n\n- hosts: new\n  gather_facts: False\n  tasks:\n  - filesystem:\n      fstype: ext4\n      dev: /dev/vdb\n<!-- more -->\n  - mount:\n      name: /data\n      src: /dev/vdb\n      fstype: ext4\n      state: mounted\n\n  - command: mount -a\n\nANSIBLE_HOST_KEY_CHECKING=False ansible-playbook   -i mount_host.ini -u root -k mount_host.playbook\n\n<font color=#ff1201>技术交流可加QQ群：**774332965**<br></font>\n\n<font color=#ff1201>微信订阅号同步：**IT运维那点儿事**</font>\n\n![weixin](http://dl-blog.laoxianyu.cn/weixindy.jpg)\n\n","slug":"使用ansible挂盘","published":1,"updated":"2019-03-09T15:46:09.102Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt1o6yh7001f9symc9sw8pwa","content":"<ul>\n<li><p>hosts: new<br>gather_facts: False<br>tasks:</p>\n<ul>\n<li>filesystem:<br>  fstype: ext4<br>  dev: /dev/vdb<a id=\"more\"></a></li>\n<li><p>mount:<br>  name: /data<br>  src: /dev/vdb<br>  fstype: ext4<br>  state: mounted</p>\n</li>\n<li><p>command: mount -a</p>\n</li>\n</ul>\n</li>\n</ul>\n<p>ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook   -i mount_host.ini -u root -k mount_host.playbook</p>\n<font color=\"#ff1201\">技术交流可加QQ群：<strong>774332965</strong><br></font>\n\n<font color=\"#ff1201\">微信订阅号同步：<strong>IT运维那点儿事</strong></font>\n\n<p><img src=\"http://dl-blog.laoxianyu.cn/weixindy.jpg\" alt=\"weixin\"></p>\n","excerpt":"<ul>\n<li><p>hosts: new<br>gather_facts: False<br>tasks:</p>\n<ul>\n<li>filesystem:<br>  fstype: ext4<br>  dev: /dev/vdb","more":"</li>\n<li><p>mount:<br>  name: /data<br>  src: /dev/vdb<br>  fstype: ext4<br>  state: mounted</p>\n</li>\n<li><p>command: mount -a</p>\n</li>\n</ul>\n</li>\n</ul>\n<p>ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook   -i mount_host.ini -u root -k mount_host.playbook</p>\n<font color=#ff1201>技术交流可加QQ群：<strong>774332965</strong><br></font>\n\n<font color=#ff1201>微信订阅号同步：<strong>IT运维那点儿事</strong></font>\n\n<p><img src=\"http://dl-blog.laoxianyu.cn/weixindy.jpg\" alt=\"weixin\"></p>"},{"title":"使用let's encript申请通配符证书","abbrlink":"bfd9c176","date":"2018-11-07T14:42:59.000Z","_content":"# 什么是 Let’s Encrypt\nLet’s Encrypt 是国外一个公共的免费 SSL 项目，由 Linux 基金会托管。它的来头不小，由 Mozilla、思科、Akamai、IdenTrust 和 EFF 等组织发起，目的就是向网站自动签发和管理免费证书。以便加速互联网由 HTTP 过渡到 HTTPS，目前 Facebook 等大公司开始加入赞助行列。\n\nLet’s Encrypt 已经得了 IdenTrust 的交叉签名，这意味着其证书现在已经可以被 Mozilla、Google、Microsoft 和 Apple 等主流的浏览器所信任。用户只需要在 Web 服务器证书链中配置交叉签名，浏览器客户端会自动处理好其它的一切，Let’s Encrypt 安装简单，使用非常方便。\n\n<!-- more -->\n\n本文将会详细介绍如何免费申请 Let’s Encrypt 通配符证书。\n\n# 什么是通配符证书\n域名通配符证书类似 DNS 解析的泛域名概念，通配符证书就是证书中可以包含一个通配符。主域名签发的通配符证书可以在所有子域名中使用，比如 ×.baidu.com，*.laoxianyu.cn。\n\n# 申请通配符证书\nLet’s Encrypt 上的证书申请是通过 ACME 协议来完成的。ACME协议规范化了证书申请、更新、撤销流程，实现了 Let’s Encrypt CA 自动化操作。解决了传统的 CA 机构是人工手动处理证书申请、证书更新、证书撤销的效率和成本问题。\n\nACME v2 是 ACME 协议的更新版本，通配符证书只能通过 ACME v2 获得。要使用 ACME v2 协议申请通配符证书，只需一个支持该协议的客户端就可以了，官方推荐的客户端是 Certbot。\n\n## 获取 Certbot 客户端\n```\n# 下载 Certbot 客户端\n$ wget https://dl.eff.org/certbot-auto\n\n# 设为可执行权限\n$ chmod a+x certbot-auto\n```\n* 注：Certbot 从 0.22.0 版本开始支持 ACME v2，如果你之前已安装旧版本客户端程序需更新到新版本。  \n\n更详细的安装可参考官方文档：https://certbot.eff.org/\n\n## 申请通配符证书\n客户在申请 Let’s Encrypt 证书的时候，需要校验域名的所有权，证明操作者有权利为该域名申请证书，目前支持三种验证方式：\n\n- dns-01：给域名添加一个 DNS TXT 记录。\n- http-01：在域名对应的 Web 服务器下放置一个 HTTP well-known URL 资源文件。\n- tls-sni-01：在域名对应的 Web 服务器下放置一个 HTTPS well-known URL 资源文件。\n\n使用 Certbot 客户端申请证书方法非常的简单，只需如下一行命令就搞定了。\n```\n$ ./certbot-auto certonly  -d \"*.laoxianyu.cn\" --manual --preferred-challenges dns-01  --server https://acme-v02.api.letsencrypt.org/directory\n```\n*1.申请通配符证书，只能使用 dns-01 的方式。*\n\n*2.laoxianyu.com 请根据自己的域名自行更改。*\n\n相关参数说明：\n\ncertonly 表示插件，Certbot 有很多插件。不同的插件都可以申请证书，用户可以根据需要自行选择。\n\n* -d 为哪些主机申请证书。如果是通配符，输入*.laoxianyu.com (根据实际情况替换为你自己的域名)。\n* --preferred-challenges dns-01，使用 DNS 方式校验域名所有权。\n* --server，Let's Encrypt ACME v2版本使用的服务器不同于 v1 版本，需要显示指定。\n\n执行完这一步之后，就是命令行的输出，请根据提示输入相应\n![le_ssl_01.png](http://dl-blog.laoxianyu.cn/le_ssl_01.png)\n\n**执行到上图最后一步时，先暂时不要回车。申请通配符证书是要经过 DNS认证的，接下来需要按照提示在域名后台添加对应的 DNS TXT记录。**\n添加完成后，先输入以下命令确认 TXT 记录是否生效：\n```\ndig  -t txt _acme-challenge.laoxianyu.cn\n```\n确认生效后，回车继续执行，最后会输出如下内容：\n```\nIMPORTANT NOTES:\n - Congratulations! Your certificate and chain have been saved at:\n   /etc/letsencrypt/live/xxx.com/fullchain.pem\n   Your key file has been saved at:\n   /etc/letsencrypt/live/xxx.com/privkey.pem\n   Your cert will expire on 2018-06-12. To obtain a new or tweaked\n   version of this certificate in the future, simply run certbot-auto\n   again. To non-interactively renew *all* of your certificates, run\n   \"certbot-auto renew\"\n - If you like Certbot, please consider supporting our work by:\n\n   Donating to ISRG / Let's Encrypt:   https://letsencrypt.org/donate\n   Donating to EFF:                    https://eff.org/donate-le\n```\n到了这一步后，恭喜您，证书申请成功。证书和密钥保存在下列目录：\n* /etc/letsencrypt/live/laoxainyu.cn/\n\n现在可以尽情的享用通配证书了！！！\n\n<font color=#ff1201>技术交流可加QQ群：**774332965**<br></font>\n\n<font color=#ff1201>微信订阅号同步：**IT运维那点儿事**</font>\n\n![weixin](http://dl-blog.laoxianyu.cn/weixindy.jpg)\n\n","source":"_posts/使用let-s-encript申请通配符证书.md","raw":"---\ntitle: 使用let's encript申请通配符证书\ntags: https\nabbrlink: bfd9c176\ndate: 2018-11-07 22:42:59\ncategories: [网络]\n---\n# 什么是 Let’s Encrypt\nLet’s Encrypt 是国外一个公共的免费 SSL 项目，由 Linux 基金会托管。它的来头不小，由 Mozilla、思科、Akamai、IdenTrust 和 EFF 等组织发起，目的就是向网站自动签发和管理免费证书。以便加速互联网由 HTTP 过渡到 HTTPS，目前 Facebook 等大公司开始加入赞助行列。\n\nLet’s Encrypt 已经得了 IdenTrust 的交叉签名，这意味着其证书现在已经可以被 Mozilla、Google、Microsoft 和 Apple 等主流的浏览器所信任。用户只需要在 Web 服务器证书链中配置交叉签名，浏览器客户端会自动处理好其它的一切，Let’s Encrypt 安装简单，使用非常方便。\n\n<!-- more -->\n\n本文将会详细介绍如何免费申请 Let’s Encrypt 通配符证书。\n\n# 什么是通配符证书\n域名通配符证书类似 DNS 解析的泛域名概念，通配符证书就是证书中可以包含一个通配符。主域名签发的通配符证书可以在所有子域名中使用，比如 ×.baidu.com，*.laoxianyu.cn。\n\n# 申请通配符证书\nLet’s Encrypt 上的证书申请是通过 ACME 协议来完成的。ACME协议规范化了证书申请、更新、撤销流程，实现了 Let’s Encrypt CA 自动化操作。解决了传统的 CA 机构是人工手动处理证书申请、证书更新、证书撤销的效率和成本问题。\n\nACME v2 是 ACME 协议的更新版本，通配符证书只能通过 ACME v2 获得。要使用 ACME v2 协议申请通配符证书，只需一个支持该协议的客户端就可以了，官方推荐的客户端是 Certbot。\n\n## 获取 Certbot 客户端\n```\n# 下载 Certbot 客户端\n$ wget https://dl.eff.org/certbot-auto\n\n# 设为可执行权限\n$ chmod a+x certbot-auto\n```\n* 注：Certbot 从 0.22.0 版本开始支持 ACME v2，如果你之前已安装旧版本客户端程序需更新到新版本。  \n\n更详细的安装可参考官方文档：https://certbot.eff.org/\n\n## 申请通配符证书\n客户在申请 Let’s Encrypt 证书的时候，需要校验域名的所有权，证明操作者有权利为该域名申请证书，目前支持三种验证方式：\n\n- dns-01：给域名添加一个 DNS TXT 记录。\n- http-01：在域名对应的 Web 服务器下放置一个 HTTP well-known URL 资源文件。\n- tls-sni-01：在域名对应的 Web 服务器下放置一个 HTTPS well-known URL 资源文件。\n\n使用 Certbot 客户端申请证书方法非常的简单，只需如下一行命令就搞定了。\n```\n$ ./certbot-auto certonly  -d \"*.laoxianyu.cn\" --manual --preferred-challenges dns-01  --server https://acme-v02.api.letsencrypt.org/directory\n```\n*1.申请通配符证书，只能使用 dns-01 的方式。*\n\n*2.laoxianyu.com 请根据自己的域名自行更改。*\n\n相关参数说明：\n\ncertonly 表示插件，Certbot 有很多插件。不同的插件都可以申请证书，用户可以根据需要自行选择。\n\n* -d 为哪些主机申请证书。如果是通配符，输入*.laoxianyu.com (根据实际情况替换为你自己的域名)。\n* --preferred-challenges dns-01，使用 DNS 方式校验域名所有权。\n* --server，Let's Encrypt ACME v2版本使用的服务器不同于 v1 版本，需要显示指定。\n\n执行完这一步之后，就是命令行的输出，请根据提示输入相应\n![le_ssl_01.png](http://dl-blog.laoxianyu.cn/le_ssl_01.png)\n\n**执行到上图最后一步时，先暂时不要回车。申请通配符证书是要经过 DNS认证的，接下来需要按照提示在域名后台添加对应的 DNS TXT记录。**\n添加完成后，先输入以下命令确认 TXT 记录是否生效：\n```\ndig  -t txt _acme-challenge.laoxianyu.cn\n```\n确认生效后，回车继续执行，最后会输出如下内容：\n```\nIMPORTANT NOTES:\n - Congratulations! Your certificate and chain have been saved at:\n   /etc/letsencrypt/live/xxx.com/fullchain.pem\n   Your key file has been saved at:\n   /etc/letsencrypt/live/xxx.com/privkey.pem\n   Your cert will expire on 2018-06-12. To obtain a new or tweaked\n   version of this certificate in the future, simply run certbot-auto\n   again. To non-interactively renew *all* of your certificates, run\n   \"certbot-auto renew\"\n - If you like Certbot, please consider supporting our work by:\n\n   Donating to ISRG / Let's Encrypt:   https://letsencrypt.org/donate\n   Donating to EFF:                    https://eff.org/donate-le\n```\n到了这一步后，恭喜您，证书申请成功。证书和密钥保存在下列目录：\n* /etc/letsencrypt/live/laoxainyu.cn/\n\n现在可以尽情的享用通配证书了！！！\n\n<font color=#ff1201>技术交流可加QQ群：**774332965**<br></font>\n\n<font color=#ff1201>微信订阅号同步：**IT运维那点儿事**</font>\n\n![weixin](http://dl-blog.laoxianyu.cn/weixindy.jpg)\n\n","slug":"使用let-s-encript申请通配符证书","published":1,"updated":"2019-03-09T15:46:09.102Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjt1o6yh9001i9sym1w10fqv7","content":"<h1 id=\"什么是-Let’s-Encrypt\"><a href=\"#什么是-Let’s-Encrypt\" class=\"headerlink\" title=\"什么是 Let’s Encrypt\"></a>什么是 Let’s Encrypt</h1><p>Let’s Encrypt 是国外一个公共的免费 SSL 项目，由 Linux 基金会托管。它的来头不小，由 Mozilla、思科、Akamai、IdenTrust 和 EFF 等组织发起，目的就是向网站自动签发和管理免费证书。以便加速互联网由 HTTP 过渡到 HTTPS，目前 Facebook 等大公司开始加入赞助行列。</p>\n<p>Let’s Encrypt 已经得了 IdenTrust 的交叉签名，这意味着其证书现在已经可以被 Mozilla、Google、Microsoft 和 Apple 等主流的浏览器所信任。用户只需要在 Web 服务器证书链中配置交叉签名，浏览器客户端会自动处理好其它的一切，Let’s Encrypt 安装简单，使用非常方便。</p>\n<a id=\"more\"></a>\n<p>本文将会详细介绍如何免费申请 Let’s Encrypt 通配符证书。</p>\n<h1 id=\"什么是通配符证书\"><a href=\"#什么是通配符证书\" class=\"headerlink\" title=\"什么是通配符证书\"></a>什么是通配符证书</h1><p>域名通配符证书类似 DNS 解析的泛域名概念，通配符证书就是证书中可以包含一个通配符。主域名签发的通配符证书可以在所有子域名中使用，比如 ×.baidu.com，*.laoxianyu.cn。</p>\n<h1 id=\"申请通配符证书\"><a href=\"#申请通配符证书\" class=\"headerlink\" title=\"申请通配符证书\"></a>申请通配符证书</h1><p>Let’s Encrypt 上的证书申请是通过 ACME 协议来完成的。ACME协议规范化了证书申请、更新、撤销流程，实现了 Let’s Encrypt CA 自动化操作。解决了传统的 CA 机构是人工手动处理证书申请、证书更新、证书撤销的效率和成本问题。</p>\n<p>ACME v2 是 ACME 协议的更新版本，通配符证书只能通过 ACME v2 获得。要使用 ACME v2 协议申请通配符证书，只需一个支持该协议的客户端就可以了，官方推荐的客户端是 Certbot。</p>\n<h2 id=\"获取-Certbot-客户端\"><a href=\"#获取-Certbot-客户端\" class=\"headerlink\" title=\"获取 Certbot 客户端\"></a>获取 Certbot 客户端</h2><figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 下载 Certbot 客户端</span></div><div class=\"line\"><span class=\"variable\">$ </span>wget <span class=\"symbol\">https:</span>/<span class=\"regexp\">/dl.eff.org/certbot</span>-auto</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 设为可执行权限</span></div><div class=\"line\"><span class=\"variable\">$ </span>chmod a+x certbot-auto</div></pre></td></tr></table></figure>\n<ul>\n<li>注：Certbot 从 0.22.0 版本开始支持 ACME v2，如果你之前已安装旧版本客户端程序需更新到新版本。  </li>\n</ul>\n<p>更详细的安装可参考官方文档：<a href=\"https://certbot.eff.org/\" target=\"_blank\" rel=\"external\">https://certbot.eff.org/</a></p>\n<h2 id=\"申请通配符证书-1\"><a href=\"#申请通配符证书-1\" class=\"headerlink\" title=\"申请通配符证书\"></a>申请通配符证书</h2><p>客户在申请 Let’s Encrypt 证书的时候，需要校验域名的所有权，证明操作者有权利为该域名申请证书，目前支持三种验证方式：</p>\n<ul>\n<li>dns-01：给域名添加一个 DNS TXT 记录。</li>\n<li>http-01：在域名对应的 Web 服务器下放置一个 HTTP well-known URL 资源文件。</li>\n<li>tls-sni-01：在域名对应的 Web 服务器下放置一个 HTTPS well-known URL 资源文件。</li>\n</ul>\n<p>使用 Certbot 客户端申请证书方法非常的简单，只需如下一行命令就搞定了。<br><figure class=\"highlight dsconfig\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ ./<span class=\"string\">certbot-auto </span><span class=\"string\">certonly </span> -d <span class=\"string\">\"*.laoxianyu.cn\"</span> <span class=\"built_in\">--manual</span> <span class=\"built_in\">--preferred-challenges</span> <span class=\"string\">dns-01 </span> <span class=\"built_in\">--server</span> <span class=\"string\">https:</span>//<span class=\"string\">acme-v02.</span><span class=\"string\">api.</span><span class=\"string\">letsencrypt.</span><span class=\"string\">org/</span><span class=\"string\">directory</span></div></pre></td></tr></table></figure></p>\n<p><em>1.申请通配符证书，只能使用 dns-01 的方式。</em></p>\n<p><em>2.laoxianyu.com 请根据自己的域名自行更改。</em></p>\n<p>相关参数说明：</p>\n<p>certonly 表示插件，Certbot 有很多插件。不同的插件都可以申请证书，用户可以根据需要自行选择。</p>\n<ul>\n<li>-d 为哪些主机申请证书。如果是通配符，输入*.laoxianyu.com (根据实际情况替换为你自己的域名)。</li>\n<li>–preferred-challenges dns-01，使用 DNS 方式校验域名所有权。</li>\n<li>–server，Let’s Encrypt ACME v2版本使用的服务器不同于 v1 版本，需要显示指定。</li>\n</ul>\n<p>执行完这一步之后，就是命令行的输出，请根据提示输入相应<br><img src=\"http://dl-blog.laoxianyu.cn/le_ssl_01.png\" alt=\"le_ssl_01.png\"></p>\n<p><strong>执行到上图最后一步时，先暂时不要回车。申请通配符证书是要经过 DNS认证的，接下来需要按照提示在域名后台添加对应的 DNS TXT记录。</strong><br>添加完成后，先输入以下命令确认 TXT 记录是否生效：<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">dig  -t txt _acme-challenge<span class=\"selector-class\">.laoxianyu</span><span class=\"selector-class\">.cn</span></div></pre></td></tr></table></figure></p>\n<p>确认生效后，回车继续执行，最后会输出如下内容：<br><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">IMPORTANT <span class=\"string\">NOTES:</span></div><div class=\"line\"> - Congratulations! Your certificate and chain have been saved <span class=\"string\">at:</span></div><div class=\"line\">   <span class=\"regexp\">/etc/</span>letsencrypt<span class=\"regexp\">/live/</span>xxx.com/fullchain.pem</div><div class=\"line\">   Your key file has been saved <span class=\"string\">at:</span></div><div class=\"line\">   <span class=\"regexp\">/etc/</span>letsencrypt<span class=\"regexp\">/live/</span>xxx.com/privkey.pem</div><div class=\"line\">   Your cert will expire on <span class=\"number\">2018</span><span class=\"number\">-06</span><span class=\"number\">-12.</span> To obtain a <span class=\"keyword\">new</span> or tweaked</div><div class=\"line\">   version of <span class=\"keyword\">this</span> certificate <span class=\"keyword\">in</span> the future, simply run certbot-auto</div><div class=\"line\">   again. To non-interactively renew *all* of your certificates, run</div><div class=\"line\">   <span class=\"string\">\"certbot-auto renew\"</span></div><div class=\"line\"> - If you like Certbot, please consider supporting our work <span class=\"string\">by:</span></div><div class=\"line\"></div><div class=\"line\">   Donating to ISRG <span class=\"regexp\">/ Let's Encrypt:   https:/</span><span class=\"regexp\">/letsencrypt.org/</span>donate</div><div class=\"line\">   Donating to <span class=\"string\">EFF:</span>                    <span class=\"string\">https:</span><span class=\"comment\">//eff.org/donate-le</span></div></pre></td></tr></table></figure></p>\n<p>到了这一步后，恭喜您，证书申请成功。证书和密钥保存在下列目录：</p>\n<ul>\n<li>/etc/letsencrypt/live/laoxainyu.cn/</li>\n</ul>\n<p>现在可以尽情的享用通配证书了！！！</p>\n<font color=\"#ff1201\">技术交流可加QQ群：<strong>774332965</strong><br></font>\n\n<font color=\"#ff1201\">微信订阅号同步：<strong>IT运维那点儿事</strong></font>\n\n<p><img src=\"http://dl-blog.laoxianyu.cn/weixindy.jpg\" alt=\"weixin\"></p>\n","excerpt":"<h1 id=\"什么是-Let’s-Encrypt\"><a href=\"#什么是-Let’s-Encrypt\" class=\"headerlink\" title=\"什么是 Let’s Encrypt\"></a>什么是 Let’s Encrypt</h1><p>Let’s Encrypt 是国外一个公共的免费 SSL 项目，由 Linux 基金会托管。它的来头不小，由 Mozilla、思科、Akamai、IdenTrust 和 EFF 等组织发起，目的就是向网站自动签发和管理免费证书。以便加速互联网由 HTTP 过渡到 HTTPS，目前 Facebook 等大公司开始加入赞助行列。</p>\n<p>Let’s Encrypt 已经得了 IdenTrust 的交叉签名，这意味着其证书现在已经可以被 Mozilla、Google、Microsoft 和 Apple 等主流的浏览器所信任。用户只需要在 Web 服务器证书链中配置交叉签名，浏览器客户端会自动处理好其它的一切，Let’s Encrypt 安装简单，使用非常方便。</p>","more":"<p>本文将会详细介绍如何免费申请 Let’s Encrypt 通配符证书。</p>\n<h1 id=\"什么是通配符证书\"><a href=\"#什么是通配符证书\" class=\"headerlink\" title=\"什么是通配符证书\"></a>什么是通配符证书</h1><p>域名通配符证书类似 DNS 解析的泛域名概念，通配符证书就是证书中可以包含一个通配符。主域名签发的通配符证书可以在所有子域名中使用，比如 ×.baidu.com，*.laoxianyu.cn。</p>\n<h1 id=\"申请通配符证书\"><a href=\"#申请通配符证书\" class=\"headerlink\" title=\"申请通配符证书\"></a>申请通配符证书</h1><p>Let’s Encrypt 上的证书申请是通过 ACME 协议来完成的。ACME协议规范化了证书申请、更新、撤销流程，实现了 Let’s Encrypt CA 自动化操作。解决了传统的 CA 机构是人工手动处理证书申请、证书更新、证书撤销的效率和成本问题。</p>\n<p>ACME v2 是 ACME 协议的更新版本，通配符证书只能通过 ACME v2 获得。要使用 ACME v2 协议申请通配符证书，只需一个支持该协议的客户端就可以了，官方推荐的客户端是 Certbot。</p>\n<h2 id=\"获取-Certbot-客户端\"><a href=\"#获取-Certbot-客户端\" class=\"headerlink\" title=\"获取 Certbot 客户端\"></a>获取 Certbot 客户端</h2><figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 下载 Certbot 客户端</span></div><div class=\"line\"><span class=\"variable\">$ </span>wget <span class=\"symbol\">https:</span>/<span class=\"regexp\">/dl.eff.org/certbot</span>-auto</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 设为可执行权限</span></div><div class=\"line\"><span class=\"variable\">$ </span>chmod a+x certbot-auto</div></pre></td></tr></table></figure>\n<ul>\n<li>注：Certbot 从 0.22.0 版本开始支持 ACME v2，如果你之前已安装旧版本客户端程序需更新到新版本。  </li>\n</ul>\n<p>更详细的安装可参考官方文档：<a href=\"https://certbot.eff.org/\">https://certbot.eff.org/</a></p>\n<h2 id=\"申请通配符证书-1\"><a href=\"#申请通配符证书-1\" class=\"headerlink\" title=\"申请通配符证书\"></a>申请通配符证书</h2><p>客户在申请 Let’s Encrypt 证书的时候，需要校验域名的所有权，证明操作者有权利为该域名申请证书，目前支持三种验证方式：</p>\n<ul>\n<li>dns-01：给域名添加一个 DNS TXT 记录。</li>\n<li>http-01：在域名对应的 Web 服务器下放置一个 HTTP well-known URL 资源文件。</li>\n<li>tls-sni-01：在域名对应的 Web 服务器下放置一个 HTTPS well-known URL 资源文件。</li>\n</ul>\n<p>使用 Certbot 客户端申请证书方法非常的简单，只需如下一行命令就搞定了。<br><figure class=\"highlight dsconfig\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ ./<span class=\"string\">certbot-auto </span><span class=\"string\">certonly </span> -d <span class=\"string\">\"*.laoxianyu.cn\"</span> <span class=\"built_in\">--manual</span> <span class=\"built_in\">--preferred-challenges</span> <span class=\"string\">dns-01 </span> <span class=\"built_in\">--server</span> <span class=\"string\">https:</span>//<span class=\"string\">acme-v02.</span><span class=\"string\">api.</span><span class=\"string\">letsencrypt.</span><span class=\"string\">org/</span><span class=\"string\">directory</span></div></pre></td></tr></table></figure></p>\n<p><em>1.申请通配符证书，只能使用 dns-01 的方式。</em></p>\n<p><em>2.laoxianyu.com 请根据自己的域名自行更改。</em></p>\n<p>相关参数说明：</p>\n<p>certonly 表示插件，Certbot 有很多插件。不同的插件都可以申请证书，用户可以根据需要自行选择。</p>\n<ul>\n<li>-d 为哪些主机申请证书。如果是通配符，输入*.laoxianyu.com (根据实际情况替换为你自己的域名)。</li>\n<li>–preferred-challenges dns-01，使用 DNS 方式校验域名所有权。</li>\n<li>–server，Let’s Encrypt ACME v2版本使用的服务器不同于 v1 版本，需要显示指定。</li>\n</ul>\n<p>执行完这一步之后，就是命令行的输出，请根据提示输入相应<br><img src=\"http://dl-blog.laoxianyu.cn/le_ssl_01.png\" alt=\"le_ssl_01.png\"></p>\n<p><strong>执行到上图最后一步时，先暂时不要回车。申请通配符证书是要经过 DNS认证的，接下来需要按照提示在域名后台添加对应的 DNS TXT记录。</strong><br>添加完成后，先输入以下命令确认 TXT 记录是否生效：<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">dig  -t txt _acme-challenge<span class=\"selector-class\">.laoxianyu</span><span class=\"selector-class\">.cn</span></div></pre></td></tr></table></figure></p>\n<p>确认生效后，回车继续执行，最后会输出如下内容：<br><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">IMPORTANT <span class=\"string\">NOTES:</span></div><div class=\"line\"> - Congratulations! Your certificate and chain have been saved <span class=\"string\">at:</span></div><div class=\"line\">   <span class=\"regexp\">/etc/</span>letsencrypt<span class=\"regexp\">/live/</span>xxx.com/fullchain.pem</div><div class=\"line\">   Your key file has been saved <span class=\"string\">at:</span></div><div class=\"line\">   <span class=\"regexp\">/etc/</span>letsencrypt<span class=\"regexp\">/live/</span>xxx.com/privkey.pem</div><div class=\"line\">   Your cert will expire on <span class=\"number\">2018</span><span class=\"number\">-06</span><span class=\"number\">-12.</span> To obtain a <span class=\"keyword\">new</span> or tweaked</div><div class=\"line\">   version of <span class=\"keyword\">this</span> certificate <span class=\"keyword\">in</span> the future, simply run certbot-auto</div><div class=\"line\">   again. To non-interactively renew *all* of your certificates, run</div><div class=\"line\">   <span class=\"string\">\"certbot-auto renew\"</span></div><div class=\"line\"> - If you like Certbot, please consider supporting our work <span class=\"string\">by:</span></div><div class=\"line\"></div><div class=\"line\">   Donating to ISRG <span class=\"regexp\">/ Let's Encrypt:   https:/</span><span class=\"regexp\">/letsencrypt.org/</span>donate</div><div class=\"line\">   Donating to <span class=\"string\">EFF:</span>                    <span class=\"string\">https:</span><span class=\"comment\">//eff.org/donate-le</span></div></pre></td></tr></table></figure></p>\n<p>到了这一步后，恭喜您，证书申请成功。证书和密钥保存在下列目录：</p>\n<ul>\n<li>/etc/letsencrypt/live/laoxainyu.cn/</li>\n</ul>\n<p>现在可以尽情的享用通配证书了！！！</p>\n<font color=#ff1201>技术交流可加QQ群：<strong>774332965</strong><br></font>\n\n<font color=#ff1201>微信订阅号同步：<strong>IT运维那点儿事</strong></font>\n\n<p><img src=\"http://dl-blog.laoxianyu.cn/weixindy.jpg\" alt=\"weixin\"></p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjt1o6yg100089symj920cr78","category_id":"cjt1o6yfu00049symgywtgimw","_id":"cjt1o6ygd000e9symrjblkjw0"},{"post_id":"cjt1o6yfd00009symd9xo8s2p","category_id":"cjt1o6yfu00049symgywtgimw","_id":"cjt1o6ygi000j9symoe42cxqk"},{"post_id":"cjt1o6ygb000d9symptjf590j","category_id":"cjt1o6yfu00049symgywtgimw","_id":"cjt1o6ygl000m9sym7z8nun0w"},{"post_id":"cjt1o6yfn00029symu2s0tbj4","category_id":"cjt1o6yfu00049symgywtgimw","_id":"cjt1o6ygo000r9symbdnoilz5"},{"post_id":"cjt1o6ygf000g9symruudcdws","category_id":"cjt1o6yfu00049symgywtgimw","_id":"cjt1o6ygs000u9sym119zzu15"},{"post_id":"cjt1o6ygj000l9symqtg4wjl8","category_id":"cjt1o6yfu00049symgywtgimw","_id":"cjt1o6ygw000z9symc1nf3eac"},{"post_id":"cjt1o6yfy00069sym9udcmyy7","category_id":"cjt1o6yfu00049symgywtgimw","_id":"cjt1o6ygy00129symulatp1d4"},{"post_id":"cjt1o6yg400099symgkzcw31e","category_id":"cjt1o6ygn000p9sym4wa32wp5","_id":"cjt1o6yh100169symvqafeogb"},{"post_id":"cjt1o6ygt000w9symqit8zgk7","category_id":"cjt1o6yfu00049symgywtgimw","_id":"cjt1o6yh300199symddkut60b"},{"post_id":"cjt1o6ygw00119symdf92ds8a","category_id":"cjt1o6yfu00049symgywtgimw","_id":"cjt1o6yh6001d9sym7ekxvfji"},{"post_id":"cjt1o6ygl000o9symiq74xhrm","category_id":"cjt1o6ygv000x9symef26dv6z","_id":"cjt1o6yh9001h9symry5uu0td"},{"post_id":"cjt1o6ygy00139symbrq9mseh","category_id":"cjt1o6yfu00049symgywtgimw","_id":"cjt1o6yhb001k9sym15q0vy0u"},{"post_id":"cjt1o6yh4001a9symxor1pn29","category_id":"cjt1o6ygn000p9sym4wa32wp5","_id":"cjt1o6yhd001m9symorsysxnf"},{"post_id":"cjt1o6yh7001f9symc9sw8pwa","category_id":"cjt1o6ygv000x9symef26dv6z","_id":"cjt1o6yhd001n9symrnmw3qoz"},{"post_id":"cjt1o6yh9001i9sym1w10fqv7","category_id":"cjt1o6yfu00049symgywtgimw","_id":"cjt1o6yhe001p9symsa13mcxw"},{"post_id":"cjt1o6yh100179symarcp9bbw","category_id":"cjt1o6yh6001b9symwctf8gyw","_id":"cjt1o6yhf001r9symyjuxhm8t"}],"PostTag":[{"post_id":"cjt1o6yg100089symj920cr78","tag_id":"cjt1o6yfx00059symrfbt8613","_id":"cjt1o6ygb000c9symyxl1nbc6"},{"post_id":"cjt1o6yfd00009symd9xo8s2p","tag_id":"cjt1o6yfx00059symrfbt8613","_id":"cjt1o6ygd000f9sym6jyknzrb"},{"post_id":"cjt1o6ygb000d9symptjf590j","tag_id":"cjt1o6yfx00059symrfbt8613","_id":"cjt1o6ygj000k9symhy48ar7c"},{"post_id":"cjt1o6yfn00029symu2s0tbj4","tag_id":"cjt1o6yfx00059symrfbt8613","_id":"cjt1o6ygl000n9symyo6h2pfs"},{"post_id":"cjt1o6ygf000g9symruudcdws","tag_id":"cjt1o6yfx00059symrfbt8613","_id":"cjt1o6ygo000s9sym9bd66dt6"},{"post_id":"cjt1o6ygj000l9symqtg4wjl8","tag_id":"cjt1o6yfx00059symrfbt8613","_id":"cjt1o6ygt000v9sympneakc2n"},{"post_id":"cjt1o6yfy00069sym9udcmyy7","tag_id":"cjt1o6yfx00059symrfbt8613","_id":"cjt1o6ygw00109sym83vbyscm"},{"post_id":"cjt1o6ygw00119symdf92ds8a","tag_id":"cjt1o6yfx00059symrfbt8613","_id":"cjt1o6yh100159symp7upcxov"},{"post_id":"cjt1o6yg400099symgkzcw31e","tag_id":"cjt1o6ygn000q9symwvbo9y5z","_id":"cjt1o6yh300189symags4e931"},{"post_id":"cjt1o6yg400099symgkzcw31e","tag_id":"cjt1o6ygv000y9symjlsfobw7","_id":"cjt1o6yh6001c9symq5tqpv12"},{"post_id":"cjt1o6ygy00139symbrq9mseh","tag_id":"cjt1o6yfx00059symrfbt8613","_id":"cjt1o6yh9001g9sym97ohcufr"},{"post_id":"cjt1o6ygl000o9symiq74xhrm","tag_id":"cjt1o6yh000149symd2u4djtm","_id":"cjt1o6yhb001j9symlse31d6x"},{"post_id":"cjt1o6ygt000w9symqit8zgk7","tag_id":"cjt1o6yh6001e9syme4ayqmmm","_id":"cjt1o6yhe001q9symhpjnuxei"},{"post_id":"cjt1o6ygt000w9symqit8zgk7","tag_id":"cjt1o6yhc001l9sym9uwdz1ao","_id":"cjt1o6yhf001s9sym5tc7s0dh"},{"post_id":"cjt1o6yh100179symarcp9bbw","tag_id":"cjt1o6yhe001o9sym5pjrqb9w","_id":"cjt1o6yhg001u9sym7zs24yqz"},{"post_id":"cjt1o6yh4001a9symxor1pn29","tag_id":"cjt1o6ygn000q9symwvbo9y5z","_id":"cjt1o6yhh001w9sym3ciyxp00"},{"post_id":"cjt1o6yh4001a9symxor1pn29","tag_id":"cjt1o6ygv000y9symjlsfobw7","_id":"cjt1o6yhi001x9symbh7vphkm"},{"post_id":"cjt1o6yh4001a9symxor1pn29","tag_id":"cjt1o6yhf001t9symheyy4o7n","_id":"cjt1o6yhi001y9symvnnq30h2"},{"post_id":"cjt1o6yh9001i9sym1w10fqv7","tag_id":"cjt1o6yhh001v9sym3mp34mit","_id":"cjt1o6yhj001z9symer7nupaa"}],"Tag":[{"name":"TCP/IP","_id":"cjt1o6yfx00059symrfbt8613"},{"name":"kubernetes","_id":"cjt1o6ygn000q9symwvbo9y5z"},{"name":"ingress","_id":"cjt1o6ygv000y9symjlsfobw7"},{"name":"操作系统","_id":"cjt1o6yh000149symd2u4djtm"},{"name":"vpn","_id":"cjt1o6yh6001e9syme4ayqmmm"},{"name":"网络","_id":"cjt1o6yhc001l9sym9uwdz1ao"},{"name":"test!","_id":"cjt1o6yhe001o9sym5pjrqb9w"},{"name":"traefik","_id":"cjt1o6yhf001t9symheyy4o7n"},{"name":"https","_id":"cjt1o6yhh001v9sym3mp34mit"}]}}